[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/css/Patterns.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 13:26\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Text from '../util/Text';\n\n/**\n * CSS short hand pattern を管理します\n */\nexport default class Patterns {\n  /**\n   * パターン調査対象の CSS class リスト\n   * ```\n   * {\n   *  padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n   *  margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n   *  'border-color': [\n   *    'borderTopColor',\n   *    'borderRightColor',\n   *    'borderBottomColor',\n   *    'borderLeftColor'],\n   *  'border-style': [\n   *    'borderTopStyle',\n   *    'borderRightStyle',\n   *    'borderBottomStyle',\n   *    'borderLeftStyle'],\n   *  'border-width': [\n   *    'borderTopWidth',\n   *    'borderRightWidth',\n   *    'borderBottomWidth',\n   *    'borderLeftWidth'],\n   * }\n   * ```\n   * @returns {Object} パターン調査対象の CSS class list\n   */\n  static settings() {\n    return {\n      padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n      margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n      'border-color': [\n        'borderTopColor',\n        'borderRightColor',\n        'borderBottomColor',\n        'borderLeftColor',\n      ],\n      'border-style': [\n        'borderTopStyle',\n        'borderRightStyle',\n        'borderBottomStyle',\n        'borderLeftStyle',\n      ],\n      'border-width': [\n        'borderTopWidth',\n        'borderRightWidth',\n        'borderBottomWidth',\n        'borderLeftWidth',\n      ],\n    };\n  }\n  /**\n   * 引数 `str` が調査対象 className かを判定します\n   * @param {string} str CSS className\n   * @returns {boolean} 調査対象の時に true を返します\n   */\n  static match(str) {\n    // camel case を dash(hyphenation)へ変換します\n    const key = Text.dash(str);\n    // settings パターンキーと合致してるかを調査します\n    return Object.keys(Patterns.settings()).indexOf(key) !== -1;\n  }\n  /**\n   * 引数 `str` をキーにした操作対象のリストを取得します\n   * @param {string} str CSS className\n   * @returns {Array<string>|undefined} 引数 `str` をキーにした操作対象のリスト\n   */\n  static get(str) {\n    // camel case を dash(hyphenation)へ変換します\n    const key = Text.dash(str);\n    return Patterns.settings()[key];\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/css/Patterns.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Patterns",
    "memberof": "src/css/Patterns.js",
    "static": true,
    "longname": "src/css/Patterns.js~Patterns",
    "access": "public",
    "export": true,
    "importPath": "./src/css/Patterns.js",
    "importStyle": "Patterns",
    "description": "CSS short hand pattern を管理します",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "settings",
    "memberof": "src/css/Patterns.js~Patterns",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Patterns.js~Patterns.settings",
    "access": "public",
    "description": "パターン調査対象の CSS class リスト\n```\n{\n padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n 'border-color': [\n   'borderTopColor',\n   'borderRightColor',\n   'borderBottomColor',\n   'borderLeftColor'],\n 'border-style': [\n   'borderTopStyle',\n   'borderRightStyle',\n   'borderBottomStyle',\n   'borderLeftStyle'],\n 'border-width': [\n   'borderTopWidth',\n   'borderRightWidth',\n   'borderBottomWidth',\n   'borderLeftWidth'],\n}\n``` ",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} パターン調査対象の CSS class list "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "パターン調査対象の CSS class list"
    },
    "params": []
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "match",
    "memberof": "src/css/Patterns.js~Patterns",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Patterns.js~Patterns.match",
    "access": "public",
    "description": "引数 `str` が調査対象 className かを判定します ",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 調査対象の時に true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "CSS className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "調査対象の時に true を返します"
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "get",
    "memberof": "src/css/Patterns.js~Patterns",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Patterns.js~Patterns.get",
    "access": "public",
    "description": "引数 `str` をキーにした操作対象のリストを取得します ",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>|undefined} 引数 `str` をキーにした操作対象のリスト "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "CSS className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>",
        "undefined"
      ],
      "spread": false,
      "description": "引数 `str` をキーにした操作対象のリスト"
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/css/Style.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 21:52\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport Type from '../util/Type';\nimport Text from '../util/Text';\n\n// css\nimport Patterns from './Patterns';\n\n/**\n * Element の style を操作します\n */\nexport default class Style {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * element style を取得します,\n   * [getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle) を使用します\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n   * @param {Object|Window} view Document.defaultView\n   * @param {Element} element 操作対象 Element\n   * @param {string} [property=''] 調査対象 CSS property name, 省略すると `CSSStyleDeclaration` 全セットを返します\n   * @returns {CSSStyleDeclaration|CssStyle|string|undefined} style value を返します\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView\n   */\n  static compute(view, element, property = '') {\n    const style = view.getComputedStyle(element, null);\n    if (Type.exist(property)) {\n      const props = property.replace(/([A-Z])/g, '-$1').toLowerCase();\n      return style.getPropertyValue(props);\n    }\n    return style;\n  }\n  /**\n   * CSS 設定値の short hand をパターン {@link Patterns} から探し返します\n   * @param {Object|Window} view Document.defaultView\n   * @param {Element} element 操作対象 Element\n   * @param {Array<string>} patterns 調査対象 CSS property name の配列\n   * @returns {CssStyle|string|undefined} style value を返します\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView\n   */\n  static shortHand(view, element, patterns) {\n    const top = Style.compute(view, element, patterns[0]);\n    const right = Style.compute(view, element, patterns[1]);\n    const bottom = Style.compute(view, element, patterns[2]);\n    const left = Style.compute(view, element, patterns[3]);\n    if (!top && !right && !bottom && !left) {\n      return undefined;\n    } else if (top === bottom) {\n      // top - bottom: same\n      if (right === left) {\n        // top - bottom: same\n        if (top === right) {\n          // right - left: same - all same\n          return top;\n        }\n        // top-bottom, left-right\n        return `${top} ${right}`;\n      }\n      // separate 4\n      return `${top} ${right} ${bottom} ${left}`;\n    } else if (right === left) {\n      // top - bottom: different, left- right: same\n      return `${top} ${right} ${bottom}`;\n    }\n    // separate 4\n    return `${top} ${right} ${bottom} ${left}`;\n  }\n  /**\n   * 引数 `element` の css を書き換えます\n   * @param {Element} element 操作対象 Element\n   * @param {string} css `cssText` 設定する\n   */\n  static change(element, css) {\n    const style = element.style;\n    style.cssText = css;\n  }\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 引数 element の初期 style 設定を保存し復元できるようにします\n   * @param {?Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n    // @type {string} - オリジナルの element.style.cssText を保持します\n    const css = this.current();\n    /**\n     * 現在の inline CSS\n     * @type {string}\n     */\n    this.css = css;\n    /**\n     * インスタンス作成時の inline CSS\n     * @type {string}\n     */\n    this.original = css;\n    // /**\n    //  * インスタンス作成時の inline CSS を上書きします\n    //  * @param {string} style 上書き用 CSS 設定\n    //  * @returns {string} 上書きされた CSS\n    //  */\n    // this.update = (style) => {\n    //   css = style;\n    //   return style;\n    // };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * インスタンス作成時に保存した inline CSS を上書きします\n   * @param {string} style 上書き用 CSS 設定\n   * @returns {string} 上書きされた CSS\n   */\n  update(style) {\n    this.css = style;\n    return style;\n  }\n  /**\n   * style value を取得します\n   * @param {string} [property=''] 調査する style property name\n   * @return {string} style value を返します\n   */\n  get(property = '') {\n    const element = this.element;\n    const ownerDocument = element.ownerDocument;\n    const defaultView = ownerDocument.defaultView;\n    let style = Style.compute(defaultView, element, property);\n    // firefox が css shorthand の取り扱いが違うので再度マッチテストする\n    if (style === '' && property && Patterns.match(property)) {\n      style = Style.shortHand(defaultView, element, Patterns.get(property));\n    }\n    return style;\n  }\n  /**\n   * element へ css を設定します、設定済み css を上書きします\n   * @param {string} property 設定する css property name\n   * @param {string} value 設定する css value\n   * @return {boolean} 変更されると true を返します\n   */\n  set(property, value) {\n    // 存在チェック\n    const element = this.element;\n    if (!Type.exist(element)) {\n      return false;\n    }\n    // 存在する時のみ処理を行います\n    const prop = Text.camel(property);\n    element.style[prop] = value;\n\n    return true;\n  }\n  /**\n   * element の inline style(style.cssText) を取得します\n   * @return {string} style.cssText を返します\n   */\n  current() {\n    const element = this.element;\n    if (Type.exist(element)) {\n      return element.style.cssText;\n    }\n\n    // this.element 不正の時は空文字を返します\n    return '';\n  }\n  /**\n   * element の style.cssText をインスタンス作成時点まで戻します\n   * @return {string} 設定した css を返します\n   */\n  restore() {\n    const css = this.original;\n    this.element.style.cssText = css;\n    return css;\n  }\n  /**\n   * `save` 実行時に設定されている inline style を default にします\n   * @returns {string} 設定されている inline style を返します\n   */\n  save() {\n    const style = this.current();\n    return this.update(style);\n  }\n  /**\n   * element の style.cssText を引数 `css` で書き換えます\n   * @param {string} css 書き換える css\n   */\n  change(css) {\n    Style.change(this.element, css);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/css/Style.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "Style",
    "memberof": "src/css/Style.js",
    "static": true,
    "longname": "src/css/Style.js~Style",
    "access": "public",
    "export": true,
    "importPath": "./src/css/Style.js",
    "importStyle": "Style",
    "description": "Element の style を操作します",
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "compute",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Style.js~Style.compute",
    "access": "public",
    "description": "element style を取得します,\n[getComputedStyle](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle) を使用します ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle ",
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle ",
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView "
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CSSStyleDeclaration|CssStyle|string|undefined} style value を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "Document.defaultView"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "property",
        "description": "調査対象 CSS property name, 省略すると `CSSStyleDeclaration` 全セットを返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CSSStyleDeclaration",
        "CssStyle",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "style value を返します"
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "shortHand",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Style.js~Style.shortHand",
    "access": "public",
    "description": "CSS 設定値の short hand をパターン {@link Patterns} から探し返します ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView "
    ],
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CssStyle|string|undefined} style value を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "Document.defaultView"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "patterns",
        "description": "調査対象 CSS property name の配列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CssStyle",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "style value を返します"
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "change",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/css/Style.js~Style.change",
    "access": "public",
    "description": "引数 `element` の css を書き換えます ",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": "`cssText` 設定する"
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#constructor",
    "access": "public",
    "description": "引数 element の初期 style 設定を保存し復元できるようにします",
    "lineNumber": 97,
    "params": [
      {
        "nullable": true,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "element",
    "memberof": "src/css/Style.js~Style",
    "static": false,
    "longname": "src/css/Style.js~Style#element",
    "access": "public",
    "description": "操作対象 Element",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "css",
    "memberof": "src/css/Style.js~Style",
    "static": false,
    "longname": "src/css/Style.js~Style#css",
    "access": "public",
    "description": "現在の inline CSS",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "original",
    "memberof": "src/css/Style.js~Style",
    "static": false,
    "longname": "src/css/Style.js~Style#original",
    "access": "public",
    "description": "インスタンス作成時の inline CSS",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "update",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#update",
    "access": "public",
    "description": "インスタンス作成時に保存した inline CSS を上書きします ",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 上書きされた CSS "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "上書き用 CSS 設定"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "上書きされた CSS"
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "get",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#get",
    "access": "public",
    "description": "style value を取得します ",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "property",
        "description": "調査する style property name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "style value を返します"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "set",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#set",
    "access": "public",
    "description": "element へ css を設定します、設定済み css を上書きします ",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "設定する css property name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "設定する css value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "変更されると true を返します"
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "current",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#current",
    "access": "public",
    "description": "element の inline style(style.cssText) を取得します ",
    "lineNumber": 175,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "style.cssText を返します"
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "restore",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#restore",
    "access": "public",
    "description": "element の style.cssText をインスタンス作成時点まで戻します ",
    "lineNumber": 188,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した css を返します"
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "save",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#save",
    "access": "public",
    "description": "`save` 実行時に設定されている inline style を default にします ",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定されている inline style を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定されている inline style を返します"
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "change",
    "memberof": "src/css/Style.js~Style",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/css/Style.js~Style#change",
    "access": "public",
    "description": "element の style.cssText を引数 `css` で書き換えます ",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": "書き換える css"
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/device/Can.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 16:47\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * [native code] - document\n * @type {HTMLDocument}\n * @private\n * @static\n */\nconst document = self.document;\n// /**\n//  * CSS detector に使用する virtual CSSStyleDeclaration\n//  * ```\n//  * document.createElement('p').style\n//  * ```\n//  * @type {CSSStyleDeclaration}\n//  * @private\n//  * @static\n//  * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n//  * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style\n//  */\n// const style = document.createElement('p').style;\n// /**\n//  * vendor prefix list, CSS detector に使用します\n//  * - '-webkit-',\n//  * - '-moz-',\n//  * - '-ms-',\n//  * - '-o-',\n//  * - ''\n//  * @type {[string]}\n//  * @private\n//  * @static\n//  */\n// const vendors = [\n//   '-webkit-',\n//   '-moz-',\n//   '-ms-',\n//   '-o-',\n//   '',\n// ];\n\n// /**\n//  * CSS3 transition 可能フラッグ\n//  * @type {boolean}\n//  * @private\n//  * @static\n//  */\n// const transition = vendors.some(prefix => typeof style[`${prefix}transition`] !== 'undefined');\n// /**\n//  * CSS3 transform 可能フラッグ\n//  * @type {boolean}\n//  * @private\n//  * @static\n//  */\n// const transform = vendors.some(prefix => typeof style[`${prefix}transform`] !== 'undefined');\n\n// /**\n//  * touch event 使用可能フラッグ\n//  * @type {boolean}\n//  */\n// const touch = 'ontouchstart' in document.documentElement;\n\n// /**\n//  * canvas detect flag\n//  * @type {boolean}\n//  */\n// const canvas = !!window.CanvasRenderingContext2D;\n\n// /**\n//  * webgl detect flag\n//  * @type {boolean}\n//  */\n// let webgl = false;\n// if (canvas) {\n//   try {\n//     webgl = !!window.WebGLRenderingContext &&\n//       !!document.createElement('canvas').getContext('experimental-webgl');\n//   } catch (e) {\n//     webgl = false;\n//   }\n// }\n\n// /**\n//  * addEventListener 第三引数 - { passive: true } : false するためのブラウザテスト・フラッグ\n//  *\n//  * TouchEvent#Using with addEventListener() and preventDefault()\n//  * <pre>\n//  * It's important to note that in many cases, both touch and mouse events get sent (in order to let non-touch-specific code still interact with the user). If you use touch events, you should call preventDefault() to keep the mouse event from being sent as well.\n//  * The exception to this is Chrome, starting with version 56 (desktop, Chrome for android, and android webview), where the default value for touchstart and touchmove is true and calls to preventDefault() are not needed. To override this behavior, you simply set the passive option to false as shown in the example below. This change prevents the listener from blocking page rendering while a user is scrolling. A demo is available on the Google Developer site.\n//  * </pre>\n//  * @private\n//  * @type {boolean}\n//  * @see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n//  * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n//  * @see https://blog.jxck.io/entries/2016-06-09/passive-event-listeners.html\n//  * @since 0.3.2\n//  */\n// let supportsPassive = false;\n// try {\n//   const opts = Object.defineProperty({}, 'passive', {\n//     get() {\n//       supportsPassive = true;\n//     },\n//   });\n//   window.addEventListener('test', null, opts);\n// } catch (e) {\n//   supportsPassive = false;\n//   // console.warn('passive test', e);\n// }\n\n/**\n * 判定結果を保持します\n * @type {{transition: ?boolean, transform: ?boolean, touch: ?boolean, canvas: ?boolean, webgl: ?boolean, passive: ?boolean}}\n */\nconst can = {\n  transition: null,\n  transform: null,\n  touch: null,\n  canvas: null,\n  webgl: null,\n  passive: null,\n};\n\n/**\n * CSS3 機能使用可能かを調べます\n * @example\n * if (Can.transition()) {\n *  // can CSS3 transition\n * }\n *\n * if (Can.transform()) {\n *  // can CSS3 transform\n * }\n */\nexport default class Can {\n  /**\n   * vendor prefix list, CSS detector に使用します\n   * - '-webkit-',\n   * - '-moz-',\n   * - '-ms-',\n   * - '-o-',\n   * - ''\n   * @type {[string,string,string,string,string]}\n   */\n  static vendors = [\n    '-webkit-',\n    '-moz-',\n    '-ms-',\n    '-o-',\n    '',\n  ];\n  /**\n   * CSS3 transition が使用可能かを調べます\n   * @returns {?boolean} true: 使用可能\n   */\n  static transition() {\n    if (can.transition === null) {\n      const style = document.createElement('p').style;\n      // eslint-disable-next-line max-len\n      can.transition = Can.vendors.some(prefix => typeof style[`${prefix}transition`] !== 'undefined');\n    }\n    return can.transition;\n  }\n  /**\n   * CSS3 transform が使用可能かを調べます\n   * @returns {?boolean} true: 使用可能\n   */\n  static transform() {\n    if (can.transform === null) {\n      const style = document.createElement('p').style;\n      // eslint-disable-next-line max-len\n      can.transform = Can.vendors.some(prefix => typeof style[`${prefix}transform`] !== 'undefined');\n    }\n    return can.transform;\n  }\n  /**\n   * addEventListener 第三引数 - { passive: true } が使用できるかを調べます\n   *\n   * TouchEvent#Using with addEventListener() and preventDefault()\n   * <pre>\n   * It's important to note that in many cases, both touch and mouse events get sent (in order to let non-touch-specific code still interact with the user). If you use touch events, you should call preventDefault() to keep the mouse event from being sent as well.\n   * The exception to this is Chrome, starting with version 56 (desktop, Chrome for android, and android webview), where the default value for touchstart and touchmove is true and calls to preventDefault() are not needed. To override this behavior, you simply set the passive option to false as shown in the example below. This change prevents the listener from blocking page rendering while a user is scrolling. A demo is available on the Google Developer site.\n   * </pre>\n   * @returns {?boolean} true: 使用可能\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n   * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n   * @see https://blog.jxck.io/entries/2016-06-09/passive-event-listeners.html\n   * @since 0.3.2\n   */\n  static passive() {\n    if (can.passive === null) {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('test', null, opts);\n      } catch (e) {\n        supportsPassive = false;\n        // console.warn('passive test', e);\n      }\n      can.passive = supportsPassive;\n    }\n    return can.passive;\n  }\n  /**\n   * touch event 使用可能かを調べます\n   * @returns {?boolean} true: 使用可能\n   * @since 4.0.1\n   */\n  static touch() {\n    if (can.touch === null) {\n      can.touch = 'ontouchstart' in document.documentElement;\n    }\n    return can.touch;\n  }\n  /**\n   * canvas 使用可能かを調べます\n   * @returns {?boolean} true: canvas 使用可能\n   * @since 4.0.1\n   */\n  static canvas() {\n    if (can.canvas === null) {\n      can.canvas = !!window.CanvasRenderingContext2D;\n    }\n    return can.canvas;\n  }\n  /**\n   * webgl 使用可能かを調べます\n   * @returns {?boolean} true: webgl 使用可能\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat\n   * @see https://qiita.com/tonkotsuboy_com/items/cdffcdd7bdccac371292\n   * @since 4.0.1\n   */\n  static webgl() {\n    if (can.webgl === null) {\n      let webgl = false;\n      if (Can.canvas()) {\n        const canvas = document.createElement('canvas');\n        const webGLContext = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        try {\n          webgl = !!(\n            window.WebGLRenderingContext &&\n            webGLContext &&\n            webGLContext.getShaderPrecisionFormat\n          );\n        } catch (e) {\n          webgl = false;\n        }\n      }\n      can.webgl = webgl;\n    }\n    return can.webgl;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/Can.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "document",
    "memberof": "src/device/Can.js",
    "static": true,
    "longname": "src/device/Can.js~document",
    "access": "private",
    "export": false,
    "importPath": "./src/device/Can.js",
    "importStyle": null,
    "description": "[native code] - document",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "HTMLDocument"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "can",
    "memberof": "src/device/Can.js",
    "static": true,
    "longname": "src/device/Can.js~can",
    "access": "public",
    "export": false,
    "importPath": "./src/device/Can.js",
    "importStyle": null,
    "description": "判定結果を保持します",
    "lineNumber": 124,
    "type": {
      "nullable": null,
      "types": [
        "{transition: ?boolean, transform: ?boolean, touch: ?boolean, canvas: ?boolean, webgl: ?boolean, passive: ?boolean}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "Can",
    "memberof": "src/device/Can.js",
    "static": true,
    "longname": "src/device/Can.js~Can",
    "access": "public",
    "export": true,
    "importPath": "./src/device/Can.js",
    "importStyle": "Can",
    "description": "CSS3 機能使用可能かを調べます",
    "examples": [
      "if (Can.transition()) {\n // can CSS3 transition\n}\n\nif (Can.transform()) {\n // can CSS3 transform\n}"
    ],
    "lineNumber": 144,
    "interface": false
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "vendors",
    "memberof": "src/device/Can.js~Can",
    "static": true,
    "longname": "src/device/Can.js~Can.vendors",
    "access": "public",
    "description": "vendor prefix list, CSS detector に使用します\n- '-webkit-',\n- '-moz-',\n- '-ms-',\n- '-o-',\n- ''",
    "lineNumber": 154,
    "type": {
      "nullable": null,
      "types": [
        "[string,string,string,string,string]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "transition",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.transition",
    "access": "public",
    "description": "CSS3 transition が使用可能かを調べます ",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "transform",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.transform",
    "access": "public",
    "description": "CSS3 transform が使用可能かを調べます ",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "passive",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.passive",
    "access": "public",
    "description": "addEventListener 第三引数 - { passive: true } が使用できるかを調べます\n\nTouchEvent#Using with addEventListener() and preventDefault()\n<pre>\nIt's important to note that in many cases, both touch and mouse events get sent (in order to let non-touch-specific code still interact with the user). If you use touch events, you should call preventDefault() to keep the mouse event from being sent as well.\nThe exception to this is Chrome, starting with version 56 (desktop, Chrome for android, and android webview), where the default value for touchstart and touchmove is true and calls to preventDefault() are not needed. To override this behavior, you simply set the passive option to false as shown in the example below. This change prevents the listener from blocking page rendering while a user is scrolling. A demo is available on the Google Developer site.\n</pre> ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent ",
      "https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md ",
      "https://blog.jxck.io/entries/2016-06-09/passive-event-listeners.html "
    ],
    "lineNumber": 199,
    "since": "0.3.2 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "touch",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.touch",
    "access": "public",
    "description": "touch event 使用可能かを調べます ",
    "lineNumber": 222,
    "since": "4.0.1 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "canvas",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.canvas",
    "access": "public",
    "description": "canvas 使用可能かを調べます ",
    "lineNumber": 233,
    "since": "4.0.1 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: canvas 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: canvas 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "webgl",
    "memberof": "src/device/Can.js~Can",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/Can.js~Can.webgl",
    "access": "public",
    "description": "webgl 使用可能かを調べます ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext ",
      "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat ",
      "https://qiita.com/tonkotsuboy_com/items/cdffcdd7bdccac371292 "
    ],
    "lineNumber": 247,
    "since": "4.0.1 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?boolean} true: webgl 使用可能 "
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: webgl 使用可能"
    },
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/device/browser/Chrome.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/22 - 19:27\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n\nimport devices from '../devices';\nimport CriOS from './CriOS';\nimport Edge from './Edge';\n\n/**\n * {@link devices}.browsers\n * {@link Chrome}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link Chrome}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/chrome\\/(\\d+)\\.(\\d+)\\.(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  const versions = numbers.map((number, index) => {\n    const int = parseInt(number, 10);\n    if (index <= 3) {\n      return isNaN(int) ? 0 : int;\n    }\n    return null;\n  });\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link Chrome}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const crios = CriOS.is();\n  const edge = Edge.is();\n  let chrome = false;\n  if (!edge) {\n    if (crios) {\n      // iOS chrome\n      chrome = true;\n    } else {\n      const ua = devices.ua;\n      chrome = !!ua.match(/chrome/i);\n    }\n  }\n  browsers.chrome = chrome;\n  if (chrome) {\n    version();\n  }\n};\n\n/**\n * Chrome detector\n * @since 0.4.2\n */\nexport default class Chrome {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * Chrome 判定\n   * @returns {boolean} true: Chrome\n   */\n  static is() {\n    init();\n    return browsers.chrome;\n  }\n  /**\n   * Chrome Browser version\n   * @returns {number} Chrome version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * Chrome Browser major version\n   * @returns {number} Chrome major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * Chrome Browser version `major.minor.build`\n   * @returns {string} Chrome version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/Chrome.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/Chrome.js",
    "static": true,
    "longname": "src/device/browser/Chrome.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Chrome.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link Chrome}",
    "lineNumber": 24,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/Chrome.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Chrome.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link Chrome}",
    "lineNumber": 31,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/Chrome.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Chrome.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link Chrome}",
    "lineNumber": 70,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "Chrome",
    "memberof": "src/device/browser/Chrome.js",
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/Chrome.js",
    "importStyle": "Chrome",
    "description": "Chrome detector",
    "lineNumber": 97,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.is",
    "access": "public",
    "description": "Chrome 判定 ",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Chrome "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Chrome"
    },
    "params": []
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.version",
    "access": "public",
    "description": "Chrome Browser version ",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Chrome version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Chrome version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.major",
    "access": "public",
    "description": "Chrome Browser major version ",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Chrome major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Chrome major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.build",
    "access": "public",
    "description": "Chrome Browser version `major.minor.build` ",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Chrome version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Chrome version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/Chrome.js~Chrome",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Chrome.js~Chrome.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/device/browser/CriOS.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/22 - 19:29\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.browsers\n * {@link CriOS}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link CriOS}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/crios\\/(\\d+)\\.(\\d+)\\.(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  // array\n  const intArr = numbers.map(number => (parseInt(number, 10)));\n  const versions = intArr.filter(int => !isNaN(int));\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link CriOS}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const ua = devices.ua;\n  const crios = !!ua.match(/crios/i);\n  browsers.crios = crios;\n  if (crios) {\n    version();\n  }\n};\n\n/**\n * iOS Chrome detector\n * @since 0.4.2\n */\nexport default class CriOS {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * iOS Chrome 判定\n   * @returns {boolean} true: iOS Chrome\n   */\n  static is() {\n    init();\n    return browsers.crios;\n  }\n  /**\n   * CriOS Browser version\n   * @returns {number} CriOS version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * CriOS Browser major version\n   * @returns {number} CriOS major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * CriOS Browser version `major.minor.build`\n   * @returns {string} CriOS version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/CriOS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/CriOS.js",
    "static": true,
    "longname": "src/device/browser/CriOS.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/CriOS.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link CriOS}",
    "lineNumber": 21,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/CriOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/CriOS.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link CriOS}",
    "lineNumber": 28,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/CriOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/CriOS.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link CriOS}",
    "lineNumber": 63,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "class",
    "name": "CriOS",
    "memberof": "src/device/browser/CriOS.js",
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/CriOS.js",
    "importStyle": "CriOS",
    "description": "iOS Chrome detector",
    "lineNumber": 80,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.is",
    "access": "public",
    "description": "iOS Chrome 判定 ",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS Chrome "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS Chrome"
    },
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.version",
    "access": "public",
    "description": "CriOS Browser version ",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} CriOS version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "CriOS version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.major",
    "access": "public",
    "description": "CriOS Browser major version ",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} CriOS major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "CriOS major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.build",
    "access": "public",
    "description": "CriOS Browser version `major.minor.build` ",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} CriOS version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "CriOS version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/CriOS.js~CriOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/CriOS.js~CriOS.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/device/browser/Edge.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/25 - 16:45\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.browsers\n * {@link Edge}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n\n/**\n * version 情報を計算します\n * {@link Edge}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/edge\\/(\\d+)\\.(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  const versions = numbers.map((number, index) => {\n    const int = parseInt(number, 10);\n    if (index <= 3) {\n      return isNaN(int) ? 0 : int;\n    }\n    return null;\n  });\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link Edge}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const ua = devices.ua;\n  const edge = !!ua.match(/edge/i);\n  browsers.edge = edge;\n  if (edge) {\n    version();\n  }\n};\n\n/**\n * Edge detector\n * @since 0.4.2\n */\nexport default class Edge {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * Edge 判定\n   * @returns {boolean} true: Edge\n   */\n  static is() {\n    init();\n    return browsers.edge;\n  }\n  /**\n   * Edge Browser version\n   * @returns {number} Edge version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * Edge Browser major version\n   * @returns {number} Edge major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * Edge Browser version `major.minor.build`\n   * @returns {string} Edge version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/Edge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/Edge.js",
    "static": true,
    "longname": "src/device/browser/Edge.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Edge.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link Edge}",
    "lineNumber": 21,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/Edge.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Edge.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link Edge}",
    "lineNumber": 29,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/Edge.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Edge.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link Edge}",
    "lineNumber": 68,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "Edge",
    "memberof": "src/device/browser/Edge.js",
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/Edge.js",
    "importStyle": "Edge",
    "description": "Edge detector",
    "lineNumber": 85,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.is",
    "access": "public",
    "description": "Edge 判定 ",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Edge "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Edge"
    },
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.version",
    "access": "public",
    "description": "Edge Browser version ",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Edge version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Edge version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.major",
    "access": "public",
    "description": "Edge Browser major version ",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Edge major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Edge major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.build",
    "access": "public",
    "description": "Edge Browser version `major.minor.build` ",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Edge version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Edge version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/Edge.js~Edge",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Edge.js~Edge.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/device/browser/Firefox.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/22 - 19:29\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.browsers\n * {@link Firefox}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link Firefox}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.ua;\n  const numbers = app.match(/firefox\\/(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  // array\n  const intArr = numbers.map(number => (parseInt(number, 10)));\n  const versions = intArr.filter(int => !isNaN(int));\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link Firefox}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const ua = devices.ua;\n  const firefox = !!ua.match(/firefox/i);\n  browsers.firefox = firefox;\n  if (firefox) {\n    version();\n  }\n};\n\n/**\n * iOS Chrome detector\n * @since 0.4.2\n */\nexport default class Firefox {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * iOS Chrome 判定\n   * @returns {boolean} true: iOS Chrome\n   */\n  static is() {\n    init();\n    return browsers.firefox;\n  }\n  /**\n   * Firefox Browser version\n   * @returns {number} Firefox version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * Firefox Browser major version\n   * @returns {number} Firefox major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * Firefox Browser version `major.minor.build`\n   * @returns {string} Firefox version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/Firefox.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/Firefox.js",
    "static": true,
    "longname": "src/device/browser/Firefox.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Firefox.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link Firefox}",
    "lineNumber": 21,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/Firefox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Firefox.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link Firefox}",
    "lineNumber": 28,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/Firefox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Firefox.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link Firefox}",
    "lineNumber": 63,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "class",
    "name": "Firefox",
    "memberof": "src/device/browser/Firefox.js",
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/Firefox.js",
    "importStyle": "Firefox",
    "description": "iOS Chrome detector",
    "lineNumber": 80,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.is",
    "access": "public",
    "description": "iOS Chrome 判定 ",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS Chrome "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS Chrome"
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.version",
    "access": "public",
    "description": "Firefox Browser version ",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Firefox version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Firefox version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.major",
    "access": "public",
    "description": "Firefox Browser major version ",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Firefox major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Firefox major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.build",
    "access": "public",
    "description": "Firefox Browser version `major.minor.build` ",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Firefox version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Firefox version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/Firefox.js~Firefox",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Firefox.js~Firefox.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/device/browser/FxiOS.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/25 - 16:19\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.browsers\n * {@link FxiOS}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link FxiOS}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/fxios\\/(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  // array\n  const intArr = numbers.map(number => (parseInt(number, 10)));\n  const versions = intArr.filter(int => !isNaN(int));\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link FxiOS}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const ua = devices.ua;\n  const fxios = !!ua.match(/fxios/i);\n  browsers.fxios = fxios;\n  if (fxios) {\n    version();\n  }\n};\n\n/**\n * iOS Firefox detector\n * @since 0.4.2\n */\nexport default class FxiOS {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * iOS Firefox 判定\n   * @returns {boolean} true: iOS Firefox\n   */\n  static is() {\n    init();\n    return browsers.fxios;\n  }\n  /**\n   * Firefox Browser version\n   * @returns {number} Firefox OS version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * Firefox Browser major version\n   * @returns {number} Firefox OS major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * Firefox Browser version `major.minor.build`\n   * @returns {string} Firefox OS version NN.NN.NN.NN 型（文字）で返します, not Android ''\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/FxiOS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/FxiOS.js",
    "static": true,
    "longname": "src/device/browser/FxiOS.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/FxiOS.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link FxiOS}",
    "lineNumber": 21,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/FxiOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/FxiOS.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link FxiOS}",
    "lineNumber": 28,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/FxiOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/FxiOS.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link FxiOS}",
    "lineNumber": 63,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "FxiOS",
    "memberof": "src/device/browser/FxiOS.js",
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/FxiOS.js",
    "importStyle": "FxiOS",
    "description": "iOS Firefox detector",
    "lineNumber": 80,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.is",
    "access": "public",
    "description": "iOS Firefox 判定 ",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS Firefox "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS Firefox"
    },
    "params": []
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.version",
    "access": "public",
    "description": "Firefox Browser version ",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Firefox OS version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Firefox OS version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.major",
    "access": "public",
    "description": "Firefox Browser major version ",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Firefox OS major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Firefox OS major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.build",
    "access": "public",
    "description": "Firefox Browser version `major.minor.build` ",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Firefox OS version NN.NN.NN.NN 型（文字）で返します, not Android '' "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Firefox OS version NN.NN.NN.NN 型（文字）で返します, not Android ''"
    },
    "params": []
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/FxiOS.js~FxiOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/FxiOS.js~FxiOS.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/device/browser/IE.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/22 - 19:29\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.browsers\n * {@link IE}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link IE}\n * @since 0.4.2\n */\nconst version = () => {\n  let major = -1;\n  if (browsers.ie) {\n    if (browsers.ie11) {\n      major = 11;\n    } else if (browsers.ie10) {\n      major = 10;\n    } else if (browsers.ie9) {\n      major = 9;\n    } else if (browsers.ie8) {\n      major = 8;\n    } else if (browsers.ie7) {\n      major = 7;\n    } else if (browsers.ie6) {\n      major = 6;\n    }\n  }\n  browsers.build = String(major);\n  browsers.major = major;\n  browsers.version = major;\n  if (major >= 0) {\n    browsers.numbers = [major];\n  }\n};\n\n/**\n * browser 判別します\n * {@link IE}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  const ua = devices.ua;\n  let ie = !!ua.match(/msie/i);\n  browsers.ie = ie;\n  if (ie) {\n    browsers.ie10 = !!ua.match(/msie [10]/i);\n    browsers.ie9 = !!ua.match(/msie [9]/i);\n    browsers.ie8 = !!ua.match(/msie [8]/i);\n    browsers.ie7 = !!ua.match(/msie [7]/i);\n    browsers.ie6 = !!ua.match(/msie [6]/i);\n  } else {\n    const ie11 = !!ua.match(/trident\\/[7]/i) && !!ua.match(/rv:[11]/i);\n    ie = ie11;\n    browsers.ie = ie11;\n    browsers.ie11 = ie11;\n  }\n  if (ie) {\n    version();\n  }\n};\n\n/**\n * IE detector\n * @since 0.4.2\n */\nexport default class IE {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * IE 判定\n   * @returns {boolean} true: IE\n   */\n  static is() {\n    init();\n    return browsers.ie;\n  }\n  /**\n   * IE 6 判定\n   * @returns {boolean} true: IE 6\n   */\n  static is6() {\n    init();\n    return browsers.ie6;\n  }\n  /**\n   * IE 7 判定\n   * @returns {boolean} true: IE 7\n   */\n  static is7() {\n    init();\n    return browsers.ie7;\n  }\n  /**\n   * IE 8 判定\n   * @returns {boolean} true: IE 8\n   */\n  static is8() {\n    init();\n    return browsers.ie8;\n  }\n  /**\n   * IE 9 判定\n   * @returns {boolean} true: IE 9\n   */\n  static is9() {\n    init();\n    return browsers.ie9;\n  }\n  /**\n   * IE 10 判定\n   * @returns {boolean} true: IE 10\n   */\n  static is10() {\n    init();\n    return browsers.ie10;\n  }\n  /**\n   * IE 11 判定\n   * @returns {boolean} true: IE 11\n   */\n  static is11() {\n    init();\n    return browsers.ie11;\n  }\n  /**\n   * IE Browser version\n   * @returns {number} IE version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * IE Browser major version\n   * @returns {number} IE major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * IE Browser version `major.minor.build`\n   * @returns {string} IE version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/IE.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/IE.js",
    "static": true,
    "longname": "src/device/browser/IE.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/IE.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link IE}",
    "lineNumber": 21,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/IE.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/IE.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link IE}",
    "lineNumber": 28,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/IE.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/IE.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link IE}",
    "lineNumber": 58,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "IE",
    "memberof": "src/device/browser/IE.js",
    "static": true,
    "longname": "src/device/browser/IE.js~IE",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/IE.js",
    "importStyle": "IE",
    "description": "IE detector",
    "lineNumber": 87,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is",
    "access": "public",
    "description": "IE 判定 ",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE"
    },
    "params": []
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "is6",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is6",
    "access": "public",
    "description": "IE 6 判定 ",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 6 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 6"
    },
    "params": []
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "is7",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is7",
    "access": "public",
    "description": "IE 7 判定 ",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 7 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 7"
    },
    "params": []
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "is8",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is8",
    "access": "public",
    "description": "IE 8 判定 ",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 8 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 8"
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "is9",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is9",
    "access": "public",
    "description": "IE 9 判定 ",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 9 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 9"
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "is10",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is10",
    "access": "public",
    "description": "IE 10 判定 ",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 10 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 10"
    },
    "params": []
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "is11",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.is11",
    "access": "public",
    "description": "IE 11 判定 ",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: IE 11 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: IE 11"
    },
    "params": []
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.version",
    "access": "public",
    "description": "IE Browser version ",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} IE version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "IE version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.major",
    "access": "public",
    "description": "IE Browser major version ",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} IE major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "IE major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.build",
    "access": "public",
    "description": "IE Browser version `major.minor.build` ",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} IE version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "IE version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/IE.js~IE",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/IE.js~IE.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/device/browser/Safari.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/22 - 19:29\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\nimport CriOS from './CriOS';\nimport Edge from './Edge';\nimport Chrome from './Chrome';\nimport FxiOS from './FxiOS';\nimport Android from '../os/Android';\n\n/**\n * {@link devices}.browsers\n * {@link Safari}\n * @type {?object}\n * @since 0.4.2\n */\nlet browsers = null;\n\n/**\n * version 情報を計算します\n * {@link Safari}\n * @since 0.4.2\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/version\\/(\\d+)\\.(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭 削除\n  numbers.shift();\n  // array\n  const intArr = numbers.map(number => (parseInt(number, 10)));\n  const versions = intArr.filter(int => !isNaN(int));\n  browsers.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  let option = '';\n  if (versions.length === 4) {\n    option = versions[3];\n  }\n  browsers.major = major;\n  browsers.version = parseFloat(`${major}.${minor}${build}${option}`);\n  browsers.numbers = versions;\n};\n\n/**\n * browser 判別します\n * {@link Safari}\n * @since 0.4.2\n */\nconst init = () => {\n  if (browsers) {\n    return;\n  }\n  browsers = Object.assign({}, devices.browsers);\n  let safari = devices.safari;\n  if (\n    CriOS.is() ||\n    Edge.is() ||\n    Chrome.is() ||\n    FxiOS.is() ||\n    Android.standard()\n  ) {\n    safari = false;\n  }\n  browsers.safari = safari;\n  if (safari) {\n    version();\n  }\n};\n\n/**\n * iOS Chrome detector\n * @since 0.4.2\n */\nexport default class Safari {\n  /**\n   * 書き換え済み `browsers` を取得します\n   * @returns {Object} 書き換え済み `browsers` を返します\n   */\n  static browsers() {\n    init();\n    return browsers;\n  }\n  /**\n   * iOS Chrome 判定\n   * @returns {boolean} true: iOS Chrome\n   */\n  static is() {\n    init();\n    return browsers.safari;\n  }\n  /**\n   * Safari Browser version\n   * @returns {number} Safari version, not Android -1\n   */\n  static version() {\n    init();\n    return browsers.version;\n  }\n  /**\n   * Safari Browser major version\n   * @returns {number} Safari major version, not Android -1\n   */\n  static major() {\n    init();\n    return browsers.major;\n  }\n  /**\n   * Safari Browser version `major.minor.build`\n   * @returns {string} Safari version NN.NN.NN.NN 型（文字）で返します\n   */\n  static build() {\n    init();\n    return browsers.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return browsers.numbers;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/browser/Safari.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/browser/Safari.js",
    "static": true,
    "longname": "src/device/browser/Safari.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Safari.js",
    "importStyle": null,
    "description": "{@link devices}.browsers\n{@link Safari}",
    "lineNumber": 26,
    "since": "0.4.2",
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/browser/Safari.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Safari.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link Safari}",
    "lineNumber": 33,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/browser/Safari.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/browser/Safari.js",
    "importStyle": null,
    "description": "browser 判別します\n{@link Safari}",
    "lineNumber": 68,
    "since": "0.4.2",
    "params": [],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "Safari",
    "memberof": "src/device/browser/Safari.js",
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari",
    "access": "public",
    "export": true,
    "importPath": "./src/device/browser/Safari.js",
    "importStyle": "Safari",
    "description": "iOS Chrome detector",
    "lineNumber": 93,
    "since": "0.4.2",
    "interface": false
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "browsers",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.browsers",
    "access": "public",
    "description": "書き換え済み `browsers` を取得します ",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} 書き換え済み `browsers` を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "書き換え済み `browsers` を返します"
    },
    "params": []
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.is",
    "access": "public",
    "description": "iOS Chrome 判定 ",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS Chrome "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS Chrome"
    },
    "params": []
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.version",
    "access": "public",
    "description": "Safari Browser version ",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Safari version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Safari version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.major",
    "access": "public",
    "description": "Safari Browser major version ",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Safari major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Safari major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.build",
    "access": "public",
    "description": "Safari Browser version `major.minor.build` ",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Safari version NN.NN.NN.NN 型（文字）で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Safari version NN.NN.NN.NN 型（文字）で返します"
    },
    "params": []
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/browser/Safari.js~Safari",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/browser/Safari.js~Safari.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int, option: number}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int, option: number}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/device/devices.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 16:39\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * [native code] userAgent\n * `device/index.js`\n * @type {string}\n */\nconst ua = navigator.userAgent;\n/**\n * [native code] appVersion\n * `device/index.js`\n * @type {string}\n */\nconst app = navigator.appVersion;\n/**\n * Safari - userAgent に `Safari` が含まれる\n * - 【注意】Safari browser を保証しない\n * @type {boolean}\n */\nconst safari = !!ua.match(/safari/i);\n\n/**\n * device property\n * `device/index.js`\n * @type {{\n * ios: boolean,\n * ipad: boolean,\n * ipod: boolean,\n * iphone: boolean,\n * windows: boolean,\n * android: boolean,\n * standard: boolean,\n * phone: boolean,\n * tablet: boolean,\n * hd: boolean,\n * webView: boolean,\n * standalone: boolean,\n * version: number,\n * major: number,\n * build: string,\n * numbers: [?number,?number,?number]\n * }}\n */\nconst props = {\n  ios: false,\n  ipad: false,\n  ipod: false,\n  iphone: false,\n  windows: false,\n  android: false,\n  standard: false,\n  phone: false,\n  tablet: false,\n  hd: false,\n  webView: false,\n  standalone: false,\n  build: '',\n  major: -1,\n  numbers: [-1, -1, -1],\n  version: -1,\n};\n\n/**\n * browser property\n * `device/index.js`\n * @type {{\n *   safari: boolean,\n *   chrome: boolean,\n *   firefox: boolean,\n *   ie: boolean,\n *   ie6: boolean,\n *   ie7: boolean,\n *   ie8: boolean,\n *   ie9: boolean,\n *   ie10: boolean,\n *   ie11: boolean,\n *   edge: boolean,\n *   crios: boolean,\n *   fxios: boolean,\n *   standard: boolean,\n *   build: string,\n *   major: number,\n *   numbers: [null,null,null],\n *   version: number\n * }}\n */\nconst browsers = {\n  safari: false,\n  chrome: false,\n  firefox: false,\n  ie: false,\n  ie6: false,\n  ie7: false,\n  ie8: false,\n  ie9: false,\n  ie10: false,\n  ie11: false,\n  edge: false,\n  crios: false,\n  fxios: false,\n  standard: false,\n  build: '',\n  major: -1,\n  numbers: [-1, -1, -1],\n  version: -1,\n};\n\n/**\n * devices object\n * `device/index.js`\n * ```\n * @import device from './device';\n * const property = Object.assign({}, device);\n * ```\n * @type {{\n *  ua: string,\n *  app: string,\n *  props: {ios: boolean, ipad: boolean, ipod: boolean, iphone: boolean, windows: boolean, android: boolean, standard: boolean, phone: boolean, tablet: boolean, hd: boolean, webView: boolean, standalone: boolean, version: number, major: number, build: number, numbers: Array.<number>},\n *  safari: boolean\n * }}\n */\n\n/**\n * devices object\n * `device/index.js`\n * ```\n * @import device from './device';\n * const property = Object.assign({}, device);\n * ```\n * @type {{\n *    ua: string,\n *    app: string,\n *    props: {ios: boolean, ipad: boolean, ipod: boolean, iphone: boolean, windows: boolean, android: boolean, standard: boolean, phone: boolean, tablet: boolean, hd: boolean, webView: boolean, standalone: boolean, version: number, major: number, build: string, numbers: (number|number|number)[]},\n *    safari: boolean,\n *    browsers: {\n *      safari: boolean,\n *      chrome: boolean,\n *      firefox: boolean,\n *      ie: boolean,\n *      ie6: boolean,\n *      ie7: boolean,\n *      ie8: boolean,\n *      ie9: boolean,\n *      ie10: boolean,\n *      ie11: boolean,\n *      edge: boolean,\n *      crios: boolean,\n *      fxios: boolean,\n *      standard: boolean,\n *      build: string,\n *      major: number,\n *      numbers: [null,null,null],\n *      version: number\n *    }\n * }}\n */\nconst devices = {\n  ua,\n  app,\n  props,\n  safari,\n  browsers,\n};\n\nexport default devices;\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/devices.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "ua",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~ua",
    "access": "public",
    "export": false,
    "importPath": "./src/device/devices.js",
    "importStyle": null,
    "description": "[native code] userAgent\n`device/index.js`",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "name": "app",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~app",
    "access": "public",
    "export": false,
    "importPath": "./src/device/devices.js",
    "importStyle": null,
    "description": "[native code] appVersion\n`device/index.js`",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "safari",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~safari",
    "access": "public",
    "export": false,
    "importPath": "./src/device/devices.js",
    "importStyle": null,
    "description": "Safari - userAgent に `Safari` が含まれる\n- 【注意】Safari browser を保証しない",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "props",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~props",
    "access": "public",
    "export": false,
    "importPath": "./src/device/devices.js",
    "importStyle": null,
    "description": "device property\n`device/index.js`",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "{\nios: boolean,\nipad: boolean,\nipod: boolean,\niphone: boolean,\nwindows: boolean,\nandroid: boolean,\nstandard: boolean,\nphone: boolean,\ntablet: boolean,\nhd: boolean,\nwebView: boolean,\nstandalone: boolean,\nversion: number,\nmajor: number,\nbuild: string,\nnumbers: [?number,?number,?number]\n}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "browsers",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~browsers",
    "access": "public",
    "export": false,
    "importPath": "./src/device/devices.js",
    "importStyle": null,
    "description": "browser property\n`device/index.js`",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "{\n  safari: boolean,\n  chrome: boolean,\n  firefox: boolean,\n  ie: boolean,\n  ie6: boolean,\n  ie7: boolean,\n  ie8: boolean,\n  ie9: boolean,\n  ie10: boolean,\n  ie11: boolean,\n  edge: boolean,\n  crios: boolean,\n  fxios: boolean,\n  standard: boolean,\n  build: string,\n  major: number,\n  numbers: [null,null,null],\n  version: number\n}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "devices",
    "memberof": "src/device/devices.js",
    "static": true,
    "longname": "src/device/devices.js~devices",
    "access": "public",
    "export": true,
    "importPath": "./src/device/devices.js",
    "importStyle": "devices",
    "description": "devices object\n`device/index.js`\n```\n@import device from './device';\nconst property = Object.assign({}, device);\n```",
    "lineNumber": 167,
    "type": {
      "nullable": null,
      "types": [
        "{\n   ua: string,\n   app: string,\n   props: {ios: boolean, ipad: boolean, ipod: boolean, iphone: boolean, windows: boolean, android: boolean, standard: boolean, phone: boolean, tablet: boolean, hd: boolean, webView: boolean, standalone: boolean, version: number, major: number, build: string, numbers: (number|number|number)[]},\n   safari: boolean,\n   browsers: {\n     safari: boolean,\n     chrome: boolean,\n     firefox: boolean,\n     ie: boolean,\n     ie6: boolean,\n     ie7: boolean,\n     ie8: boolean,\n     ie9: boolean,\n     ie10: boolean,\n     ie11: boolean,\n     edge: boolean,\n     crios: boolean,\n     fxios: boolean,\n     standard: boolean,\n     build: string,\n     major: number,\n     numbers: [null,null,null],\n     version: number\n   "
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "src/device/os/Android.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 16:36\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\nimport Windows from './Windows';\n\n/**\n * {@link devices}.props\n * {@link Android}\n * @type {?object}\n */\nlet props = null;\n\n/**\n * version 情報を計算します\n * {@link Android}\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/android (\\d+)\\.(\\d+)\\.?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // 先頭の Android 4.3 削除\n  numbers.shift();\n  const versions = numbers.map((number, index) => {\n    const int = parseInt(number, 10);\n    if (index < 3) {\n      return isNaN(int) ? 0 : int;\n    }\n    return null;\n  });\n  props.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  props.major = major;\n  props.version = parseFloat(`${major}.${minor}${build}`);\n  props.numbers = versions;\n};\n\n/**\n * {@link Android}\n * - Android standard browser\n *   - `Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13`,\n *   - `Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\n * - Windows phone\n *   - `Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; DEVICE INFO) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Mobile Safari/537.36 Edge/12.OS_BUILD_NUMBER`\n * - #ref: `https://msdn.microsoft.com/ja-jp/library/hh869301(v=vs.85).aspx`\n * - @see http://googlewebmastercentral.blogspot.jp/2011/03/mo-better-to-also-detect-mobile-user.html\n */\nconst init = () => {\n  if (props) {\n    return;\n  }\n  props = Object.assign({}, devices.props);\n  const ua = devices.ua;\n  // windows phone ua に `Android` が入っている\n  const android = !Windows.phone() && !!ua.match(/android/i);\n  if (android) {\n    props.android = true;\n    props.phone = !!ua.match(/mobile/i);\n    // phone / tablet\n    if (!props.phone) {\n      props.tablet = true;\n    }\n    // Android 標準 browser\n    props.standard = devices.safari && (!!ua.match(/version/i) || !!ua.match(/samsungbrowser/i));\n    // hd\n    props.hd = Math.max(window.innerWidth, window.innerHeight) > 1024;\n    // version check\n    version();\n  }\n};\n\n/**\n * Android OS detector\n */\nexport default class Android {\n  /**\n   * Android OS\n   * @returns {boolean} true: Android OS\n   */\n  static is() {\n    init();\n    return props.android;\n  }\n  /**\n   * Android OS && standard browser\n   * @returns {boolean} true: Android standard browser\n   */\n  static standard() {\n    init();\n    return props.standard;\n  }\n  /**\n   * Android OS && phone\n   * @returns {boolean} true: Android phone\n   */\n  static phone() {\n    init();\n    return props.phone;\n  }\n  /**\n   * Android OS && tablet\n   * @returns {boolean} true: Android tablet\n   */\n  static tablet() {\n    init();\n    return props.tablet;\n  }\n  /**\n   * Android OS && HD window\n   * @returns {boolean} true: Android HD window\n   */\n  static hd() {\n    init();\n    return props.hd;\n  }\n  /**\n   * Android OS version\n   * @returns {number} Android OS version, not Android -1\n   */\n  static version() {\n    init();\n    return props.version;\n  }\n  /**\n   * Android OS major version\n   * @returns {number} Android OS major version, not Android -1\n   */\n  static major() {\n    init();\n    return props.major;\n  }\n  /**\n   * Android OS version `major.minor.build`\n   * @returns {string} Android OS version NN.NN.NN 型（文字）で返します, not Android ''\n   */\n  static build() {\n    init();\n    return props.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return props.numbers;\n  }\n  /**\n   * Android 4.3 ~ 4.4 && standard browser\n   * - touchend が未実装\n   * @returns {boolean} true: Android 4.3 ~ 4.4\n   */\n  static kitKat() {\n    // no touchend - standard browser 4.3 ~ 4.4\n    const v = Android.version();\n    return Android.standard() && (v > 4.2 && v < 4.5);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/os/Android.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "props",
    "memberof": "src/device/os/Android.js",
    "static": true,
    "longname": "src/device/os/Android.js~props",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/Android.js",
    "importStyle": null,
    "description": "{@link devices}.props\n{@link Android}",
    "lineNumber": 21,
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/os/Android.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/Android.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link Android}",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/os/Android.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/Android.js",
    "importStyle": null,
    "description": "{@link Android}\n- Android standard browser\n  - `Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13`,\n  - `Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\n- Windows phone\n  - `Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; DEVICE INFO) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Mobile Safari/537.36 Edge/12.OS_BUILD_NUMBER`\n- #ref: `https://msdn.microsoft.com/ja-jp/library/hh869301(v=vs.85).aspx`\n- @see http://googlewebmastercentral.blogspot.jp/2011/03/mo-better-to-also-detect-mobile-user.html",
    "lineNumber": 67,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "Android",
    "memberof": "src/device/os/Android.js",
    "static": true,
    "longname": "src/device/os/Android.js~Android",
    "access": "public",
    "export": true,
    "importPath": "./src/device/os/Android.js",
    "importStyle": "Android",
    "description": "Android OS detector",
    "lineNumber": 94,
    "interface": false
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.is",
    "access": "public",
    "description": "Android OS ",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android OS "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android OS"
    },
    "params": []
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "standard",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.standard",
    "access": "public",
    "description": "Android OS && standard browser ",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android standard browser "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android standard browser"
    },
    "params": []
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "phone",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.phone",
    "access": "public",
    "description": "Android OS && phone ",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android phone "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android phone"
    },
    "params": []
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "tablet",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.tablet",
    "access": "public",
    "description": "Android OS && tablet ",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android tablet "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android tablet"
    },
    "params": []
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "hd",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.hd",
    "access": "public",
    "description": "Android OS && HD window ",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android HD window "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android HD window"
    },
    "params": []
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.version",
    "access": "public",
    "description": "Android OS version ",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Android OS version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Android OS version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.major",
    "access": "public",
    "description": "Android OS major version ",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Android OS major version, not Android -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Android OS major version, not Android -1"
    },
    "params": []
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.build",
    "access": "public",
    "description": "Android OS version `major.minor.build` ",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Android OS version NN.NN.NN 型（文字）で返します, not Android '' "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Android OS version NN.NN.NN 型（文字）で返します, not Android ''"
    },
    "params": []
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "kitKat",
    "memberof": "src/device/os/Android.js~Android",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Android.js~Android.kitKat",
    "access": "public",
    "description": "Android 4.3 ~ 4.4 && standard browser\n- touchend が未実装 ",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: Android 4.3 ~ 4.4 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: Android 4.3 ~ 4.4"
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "src/device/os/Windows.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 16:50\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.props\n * {@link Windows}\n * @type {?object}\n */\nlet props = null;\n\n/**\n * `userAgent` を解析します\n * {@link Windows}\n * @private\n */\nconst init = () => {\n  if (props) {\n    return;\n  }\n  props = Object.assign({}, devices.props);\n  const ua = devices.ua;\n  const windows = !!ua.match(/windows/i);\n  if (windows) {\n    props.windows = true;\n    props.phone = !!ua.match(/windows phone/i);\n  }\n};\n\n/**\n * windows phone detector\n */\nexport default class Windows {\n  /**\n   * windows OS\n   * @returns {boolean} true; windows OS\n   */\n  static is() {\n    init();\n    return props.windows;\n  }\n  /**\n   * windows phone\n   * @returns {boolean} true: windows phone\n   */\n  static phone() {\n    init();\n    return props.phone;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/os/Windows.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "props",
    "memberof": "src/device/os/Windows.js",
    "static": true,
    "longname": "src/device/os/Windows.js~props",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/Windows.js",
    "importStyle": null,
    "description": "{@link devices}.props\n{@link Windows}",
    "lineNumber": 20,
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/os/Windows.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Windows.js~init",
    "access": "private",
    "export": false,
    "importPath": "./src/device/os/Windows.js",
    "importStyle": null,
    "description": "`userAgent` を解析します\n{@link Windows}",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Windows",
    "memberof": "src/device/os/Windows.js",
    "static": true,
    "longname": "src/device/os/Windows.js~Windows",
    "access": "public",
    "export": true,
    "importPath": "./src/device/os/Windows.js",
    "importStyle": "Windows",
    "description": "windows phone detector",
    "lineNumber": 43,
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/os/Windows.js~Windows",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Windows.js~Windows.is",
    "access": "public",
    "description": "windows OS ",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true; windows OS "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true; windows OS"
    },
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "phone",
    "memberof": "src/device/os/Windows.js~Windows",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/Windows.js~Windows.phone",
    "access": "public",
    "description": "windows phone ",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: windows phone "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: windows phone"
    },
    "params": []
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "src/device/os/iOS.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 17:39\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport devices from '../devices';\n\n/**\n * {@link devices}.props\n * {@link iOS}\n * @type {?object}\n */\nlet props = null;\n\n/**\n * version 情報を計算します\n * {@link iOS}\n */\nconst version = () => {\n  const app = devices.app;\n  const numbers = app.match(/os (\\d+)_(\\d+)_?(\\d+)?/i);\n  if (!Array.isArray(numbers)) {\n    return;\n  }\n  // iOS N.N.N 削除\n  numbers.shift();\n  const versions = numbers.map((number) => {\n    const int = parseInt(number, 10);\n    return isNaN(int) ? 0 : int;\n  });\n  props.build = versions.join('.');\n  const major = parseInt(versions[0], 10);\n  let minor = 0;\n  if (versions.length >= 2) {\n    minor = versions[1];\n  }\n  let build = '';\n  if (versions.length >= 3) {\n    build = versions[2];\n  }\n  props.major = major;\n  props.version = parseFloat(`${major}.${minor}${build}`);\n  props.numbers = versions;\n};\n\n/**\n * iOS 判定を行います\n * {@link iOS}\n */\nconst init = () => {\n  if (props) {\n    return;\n  }\n  props = Object.assign({}, devices.props);\n  const ua = devices.ua;\n  const ipad = !!ua.match(/ipad/i);\n  const ipod = !!ua.match(/ipod/i);\n  const iphone = !!ua.match(/iphone/i) && !ipad && !ipod;\n  const ios = ipad || ipod || iphone;\n  if (!ios) {\n    return;\n  }\n  const standalone = !!navigator.standalone;\n  props.stanalone = standalone;\n  props.ios = ios;\n  props.ipad = ipad;\n  props.ipod = ipod;\n  props.iphone = iphone;\n  props.phone = iphone || ipod;\n  props.tablet = ipad;\n  // アプリ内コンテンツ\n  props.webView = ios && !standalone && !devices.safari;\n  // version check\n  version();\n};\n\n/**\n * iOS detector\n */\nexport default class iOS {\n  /**\n   * iOS\n   * @returns {boolean} true: iOS\n   */\n  static is() {\n    init();\n    return props.android;\n  }\n  /**\n   * iOS && iPhone or iPod\n   * @returns {boolean} true: iOS && iPhone or iPod\n   */\n  static phone() {\n    init();\n    return props.phone;\n  }\n  /**\n   * iOS && iPad\n   * @returns {boolean} true: iOS && iPad\n   */\n  static tablet() {\n    init();\n    return props.tablet;\n  }\n  /**\n   * iOS && iPhone\n   * @returns {boolean} true: iOS && iPhone\n   */\n  static iphone() {\n    init();\n    return props.iphone;\n  }\n  /**\n   * iOS && iPad\n   * @returns {boolean} true: iOS && iPad\n   */\n  static ipad() {\n    init();\n    return props.ipad;\n  }\n  /**\n   * iOS && iPod\n   * @returns {boolean} true: iOS && iPod\n   */\n  static ipod() {\n    init();\n    return props.ipod;\n  }\n  /**\n   * iOS version\n   * @returns {number} iOS version, not iOS -1\n   */\n  static version() {\n    init();\n    return props.version;\n  }\n  /**\n   * iOS major version\n   * @returns {number} iOS major version, not iOS -1\n   */\n  static major() {\n    init();\n    return props.major;\n  }\n  /**\n   * iOS version `major.minor.build`\n   * @returns {string} iOS version NN.NN.NN 型（文字）で返します, not iOS 空文字列\n   */\n  static build() {\n    init();\n    return props.build;\n  }\n  /**\n   * version を配列形式で取得します\n   * @returns {Array.<number>} {{major: int, minor: int, build: int}} 形式で返します\n   */\n  static numbers() {\n    init();\n    return props.numbers;\n  }\n  /**\n   * iOS webView - 標準 UA のみ対応\n   * @returns {boolean} true: iOS webView\n   */\n  static webView() {\n    init();\n    return props.webView;\n  }\n  /**\n   * iOS standalone - app mode\n   * @returns {boolean} true: iOS app mode\n   */\n  static standalone() {\n    return props.standalone;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/device/os/iOS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "props",
    "memberof": "src/device/os/iOS.js",
    "static": true,
    "longname": "src/device/os/iOS.js~props",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/iOS.js",
    "importStyle": null,
    "description": "{@link devices}.props\n{@link iOS}",
    "lineNumber": 20,
    "type": {
      "nullable": true,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "version",
    "memberof": "src/device/os/iOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~version",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/iOS.js",
    "importStyle": null,
    "description": "version 情報を計算します\n{@link iOS}",
    "lineNumber": 26,
    "params": [],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "init",
    "memberof": "src/device/os/iOS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~init",
    "access": "public",
    "export": false,
    "importPath": "./src/device/os/iOS.js",
    "importStyle": null,
    "description": "iOS 判定を行います\n{@link iOS}",
    "lineNumber": 57,
    "params": [],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "class",
    "name": "iOS",
    "memberof": "src/device/os/iOS.js",
    "static": true,
    "longname": "src/device/os/iOS.js~iOS",
    "access": "public",
    "export": true,
    "importPath": "./src/device/os/iOS.js",
    "importStyle": "iOS",
    "description": "iOS detector",
    "lineNumber": 87,
    "interface": false
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "is",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.is",
    "access": "public",
    "description": "iOS ",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS"
    },
    "params": []
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "phone",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.phone",
    "access": "public",
    "description": "iOS && iPhone or iPod ",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS && iPhone or iPod "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS && iPhone or iPod"
    },
    "params": []
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "tablet",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.tablet",
    "access": "public",
    "description": "iOS && iPad ",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS && iPad "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS && iPad"
    },
    "params": []
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "iphone",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.iphone",
    "access": "public",
    "description": "iOS && iPhone ",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS && iPhone "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS && iPhone"
    },
    "params": []
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "ipad",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.ipad",
    "access": "public",
    "description": "iOS && iPad ",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS && iPad "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS && iPad"
    },
    "params": []
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "ipod",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.ipod",
    "access": "public",
    "description": "iOS && iPod ",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS && iPod "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS && iPod"
    },
    "params": []
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "version",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.version",
    "access": "public",
    "description": "iOS version ",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} iOS version, not iOS -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "iOS version, not iOS -1"
    },
    "params": []
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "major",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.major",
    "access": "public",
    "description": "iOS major version ",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} iOS major version, not iOS -1 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "iOS major version, not iOS -1"
    },
    "params": []
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "build",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.build",
    "access": "public",
    "description": "iOS version `major.minor.build` ",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} iOS version NN.NN.NN 型（文字）で返します, not iOS 空文字列 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "iOS version NN.NN.NN 型（文字）で返します, not iOS 空文字列"
    },
    "params": []
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "numbers",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.numbers",
    "access": "public",
    "description": "version を配列形式で取得します ",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<number>} {{major: int, minor: int, build: int}} 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "{{major: int, minor: int, build: int}} 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "webView",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.webView",
    "access": "public",
    "description": "iOS webView - 標準 UA のみ対応 ",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS webView "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS webView"
    },
    "params": []
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "standalone",
    "memberof": "src/device/os/iOS.js~iOS",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/device/os/iOS.js~iOS.standalone",
    "access": "public",
    "description": "iOS standalone - app mode ",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: iOS app mode "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: iOS app mode"
    },
    "params": []
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "src/dom/Bounding.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 22:02\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Element の ClientRect 取得します\n * - bottom: float\n * - height: float\n * - left: float\n * - right: float\n * - top: float\n * - width: float\n * - x: float\n * - y: float\n *\n * #ref: MSDN `https://msdn.microsoft.com/ja-jp/library/hh826029(v=vs.85).aspx`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n */\nexport default class Bounding {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * `getBoundingClientRect` を使用し引数 element の offset 値を取得します\n   *\n   * ```\n   * {{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n   * ```\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n   *\n   * @param {Element} element 調査対象 Element\n   * @return {ClientRect} 引数 element の offset 値を返します\n   */\n  static offset(element) {\n    return element.getBoundingClientRect();\n  }\n  /**\n   * ClientRect の複製を Object 化し writable にします\n   * @param {DOMRect|ClientRect} offset 複製元 ClientRect\n   * @return {{\n   *  top: number,\n   *  right: number,\n   *  bottom: number,\n   *  left: number,\n   *  width: number,\n   *  height: number}} ClientRect の複製 (Object) を返します\n   *  @see https://developer.mozilla.org/en-US/docs/Web/API/DOMRect\n   *  @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n   */\n  static clone(offset) {\n    return {\n      top: offset.top,\n      right: offset.right,\n      bottom: offset.bottom,\n      left: offset.left,\n      width: offset.width,\n      height: offset.height,\n    };\n  }\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 操作対象 Element を保存します\n   * @param {Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * `getBoundingClientRect` を使用しプロパティ element の offset 値を取得します\n   * @return {ClientRect} read only ClientRect を返します\n   */\n  offset() {\n    return Bounding.offset(this.element);\n  }\n  /**\n   * writable な element の offset 値を取得します\n   * @return {{\n   *  top: number,\n   *  right: number,\n   *  bottom: number,\n   *  left: number,\n   *  width: number,\n   *  height: number}} writable な element の offset\n   *  */\n  clone() {\n    return Bounding.clone(this.offset());\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/dom/Bounding.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "class",
    "name": "Bounding",
    "memberof": "src/dom/Bounding.js",
    "static": true,
    "longname": "src/dom/Bounding.js~Bounding",
    "access": "public",
    "export": true,
    "importPath": "./src/dom/Bounding.js",
    "importStyle": "Bounding",
    "description": "Element の ClientRect 取得します\n- bottom: float\n- height: float\n- left: float\n- right: float\n- top: float\n- width: float\n- x: float\n- y: float\n\n#ref: MSDN `https://msdn.microsoft.com/ja-jp/library/hh826029(v=vs.85).aspx`",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"
    ],
    "lineNumber": 28,
    "interface": false
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "offset",
    "memberof": "src/dom/Bounding.js~Bounding",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Bounding.js~Bounding.offset",
    "access": "public",
    "description": "`getBoundingClientRect` を使用し引数 element の offset 値を取得します\n\n```\n{{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n``` ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect "
    ],
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "調査対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "引数 element の offset 値を返します"
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "clone",
    "memberof": "src/dom/Bounding.js~Bounding",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Bounding.js~Bounding.clone",
    "access": "public",
    "description": "ClientRect の複製を Object 化し writable にします ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/DOMRect ",
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect "
    ],
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "DOMRect",
          "ClientRect"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "複製元 ClientRect"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\n top: number,\n right: number,\n bottom: number,\n left: number,\n width: number,\n height: number}"
      ],
      "spread": false,
      "description": "ClientRect の複製 (Object) を返します"
    }
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dom/Bounding.js~Bounding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Bounding.js~Bounding#constructor",
    "access": "public",
    "description": "操作対象 Element を保存します",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ]
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "element",
    "memberof": "src/dom/Bounding.js~Bounding",
    "static": false,
    "longname": "src/dom/Bounding.js~Bounding#element",
    "access": "public",
    "description": "操作対象 Element",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "offset",
    "memberof": "src/dom/Bounding.js~Bounding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Bounding.js~Bounding#offset",
    "access": "public",
    "description": "`getBoundingClientRect` を使用しプロパティ element の offset 値を取得します ",
    "lineNumber": 91,
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "read only ClientRect を返します"
    },
    "params": []
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "clone",
    "memberof": "src/dom/Bounding.js~Bounding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Bounding.js~Bounding#clone",
    "access": "public",
    "description": "writable な element の offset 値を取得します ",
    "lineNumber": 104,
    "return": {
      "nullable": null,
      "types": [
        "{\n top: number,\n right: number,\n bottom: number,\n left: number,\n width: number,\n height: number}"
      ],
      "spread": false,
      "description": "writable な element の offset"
    },
    "params": []
  },
  {
    "__docId__": 217,
    "kind": "file",
    "name": "src/dom/Classes.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 11:38\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Element の CSS class を操作します\n */\nexport default class Classes {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * 1. `classList` && `Array.from` - `Array.from(element.classList)`\n   * 2. {@link Classes.convert}\n   * @param {Element} element 操作対象 Element\n   * @returns {Array.<string>} 引数 `element` の class を配列変換し返します\n   */\n  static get(element) {\n    return element.classList && Array.from ?\n      Array.from(element.classList) :\n      Classes.convert(element);\n  }\n  /**\n   * Elementが引数 className を有するかを調べます\n   * @param {Element} element 操作対象 Element\n   * @param {string} className 調査対象 CSS class name\n   * @returns {boolean} 存在すると true を返します\n   */\n  static has(element, className) {\n    const elementClasses = Classes.get(element);\n    return elementClasses.indexOf(className) !== -1;\n  }\n  /**\n   * Element へ引数 className を追加します\n   * - className 存在チェック\n   * -\n   * @param {Element} node 操作対象 Element\n   * @param {string} className 追加対象 CSS class name\n   * @returns {boolean} 追加に成功すると true を返します\n   */\n  static add(node, className) {\n    // CSS class の存在チェック\n    if (Classes.has(node, className)) {\n      return false;\n    }\n    // argument copy\n    const element = node;\n    // @type {Array<string>} - element class を取得し配列へ変換\n    const elementClasses = Classes.get(element);\n    // 置換え配列最後尾に新規 `className` を追加します\n    elementClasses.push(className);\n    // 配列を ' '（ワンスペース）でつなぎ文字列変換後に設定します\n    element.className = elementClasses.join(' ');\n    return true;\n  }\n  /**\n   * Element から引数 className を削除します\n   * @param {Element} node 操作対象 Element\n   * @param {string} className 削除対象 CSS class name\n   * @returns {boolean} 削除に成功すると true を返します\n   */\n  static remove(node, className) {\n    if (!Classes.has(node, className)) {\n      return false;\n    }\n    // argument copy\n    const element = node;\n    // @type {Array<string>} - element class を取得し配列へ変換\n    const elementClasses = Classes.get(element);\n    // 配列での削除対象 class の位置を取得します\n    const index = elementClasses.indexOf(className);\n    // 配列位置を元に削除実行します\n    elementClasses.splice(index, 1);\n    // 削除後配列を ' '（ワンスペース）でつなぎ文字列変換後に設定します\n    element.className = elementClasses.join(' ');\n    return true;\n  }\n  /**\n   * 可哀相な IE のための配列コンバーター, `.classList` 代用します\n   * @param {Element} element 操作対象 NodeList\n   * @returns {Array} 配列にコンバートして返します\n   */\n  static convert(element) {\n    const arr = element.className.split(' ');\n    let i = 0;\n    const limit = arr.length;\n    const empty = [];\n    for (;i < limit; i += 1) {\n      const className = arr[i];\n      if (!!className && className !== ' ') {\n        empty.push(className);\n      }\n    }\n    return empty;\n  }\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 操作対象 Element を保持します\n   * @param {Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * className を有するかを調べます\n   * @param {string} className 調査対象 CSS class name\n   * @returns {boolean} 存在すると true を返します\n   */\n  has(className) {\n    return Classes.has(this.element, className);\n  }\n  /**\n   * className を追加します\n   * @param {string} className 追加対象 CSS class name\n   * @returns {boolean} 追加に成功すると true を返します\n   */\n  add(className) {\n    return Classes.add(this.element, className);\n  }\n  /**\n   * className を削除します\n   * @param {string} className 削除対象 CSS class name\n   * @returns {boolean} 削除に成功すると true を返します\n   */\n  remove(className) {\n    return Classes.remove(this.element, className);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/dom/Classes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 218,
    "kind": "class",
    "name": "Classes",
    "memberof": "src/dom/Classes.js",
    "static": true,
    "longname": "src/dom/Classes.js~Classes",
    "access": "public",
    "export": true,
    "importPath": "./src/dom/Classes.js",
    "importStyle": "Classes",
    "description": "Element の CSS class を操作します",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "get",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Classes.js~Classes.get",
    "access": "public",
    "description": "1. `classList` && `Array.from` - `Array.from(element.classList)`\n2. {@link Classes.convert} ",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<string>} 引数 `element` の class を配列変換し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": "引数 `element` の class を配列変換し返します"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "has",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Classes.js~Classes.has",
    "access": "public",
    "description": "Elementが引数 className を有するかを調べます ",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "調査対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在すると true を返します"
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "add",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Classes.js~Classes.add",
    "access": "public",
    "description": "Element へ引数 className を追加します\n- className 存在チェック\n- ",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 追加に成功すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "追加対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "追加に成功すると true を返します"
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "remove",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Classes.js~Classes.remove",
    "access": "public",
    "description": "Element から引数 className を削除します ",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 削除に成功すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "削除対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "削除に成功すると true を返します"
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "convert",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Classes.js~Classes.convert",
    "access": "public",
    "description": "可哀相な IE のための配列コンバーター, `.classList` 代用します ",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} 配列にコンバートして返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 NodeList"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "配列にコンバートして返します"
    }
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Classes.js~Classes#constructor",
    "access": "public",
    "description": "操作対象 Element を保持します",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ]
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "element",
    "memberof": "src/dom/Classes.js~Classes",
    "static": false,
    "longname": "src/dom/Classes.js~Classes#element",
    "access": "public",
    "description": "操作対象 Element",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "has",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Classes.js~Classes#has",
    "access": "public",
    "description": "className を有するかを調べます ",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "調査対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在すると true を返します"
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "add",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Classes.js~Classes#add",
    "access": "public",
    "description": "className を追加します ",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 追加に成功すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "追加対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "追加に成功すると true を返します"
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "remove",
    "memberof": "src/dom/Classes.js~Classes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Classes.js~Classes#remove",
    "access": "public",
    "description": "className を削除します ",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 削除に成功すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "削除対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "削除に成功すると true を返します"
    }
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/dom/Elements.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 21:49\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// css\nimport Style from '../css/Style';\n\n// don\nimport Bounding from './Bounding';\nimport Classes from './Classes';\n\n// util\nimport Type from '../util/Type';\n\n/**\n * HTMLElement の操作を行います。\n * 操作のために各種インスタンスを保持します\n * - {@link Classes}\n * - {@link Style}\n * - {@link Bounding}\n */\nexport default class Elements {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * 引数の id attribute value で HTMLElement を `document.getElementById` で取得します\n   * @param {string} idName id attribute value\n   * @return {?Element} Element を返します, 取得できない時は null を返します\n   */\n  static id(idName) {\n    const element = self.document.getElementById(idName);\n    // 存在チェックを行います\n    return Type.exist(element) ? element : null;\n  }\n  /**\n   * querySelector を使用し Element を探します\n   * @param {string} selector 探索 selector\n   * @param {Element|*} [parentNode=document] 親 Node|Element\n   * @return {?Element} Element or null\n   */\n  static select(selector, parentNode = self.document) {\n    return parentNode.querySelector(selector);\n  }\n  /**\n   * querySelectorAll を使用し Element を探します\n   * @param {string} selector 探索 selector\n   * @param {Element|*} [parentNode=document] 親 Node|Element\n   * @return {?NodeList} NodeList or null\n   */\n  static selects(selector, parentNode = self.document) {\n    const elements = parentNode.querySelectorAll(selector);\n    return elements.length > 0 ? elements : null;\n  }\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 操作対象 Element を保存します\n   * @param {Element|Node} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 対象 Element の CSS 操作を行う Style instance\n     * @type {Style}\n     */\n    this.style = new Style(element);\n    /**\n     * Element class 操作のために instance を作成します - Classes instance\n     * @type {Classes}\n     */\n    this.classes = new Classes(element);\n    /**\n     * 操作対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * Element class `ClientRect` 取得のために instance を作成します\n     * @type {Bounding}\n     */\n    this.bounding = new Bounding(element);\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * `getBoundingClientRect` を使用し引数 element の offset 値を取得します\n   *\n   * ```\n   * {{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n   * ```\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n   *\n   * @return {ClientRect} プロパティ element の offset 値を返します\n   */\n  offset() {\n    return this.bounding.offset();\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/dom/Elements.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "Elements",
    "memberof": "src/dom/Elements.js",
    "static": true,
    "longname": "src/dom/Elements.js~Elements",
    "access": "public",
    "export": true,
    "importPath": "./src/dom/Elements.js",
    "importStyle": "Elements",
    "description": "HTMLElement の操作を行います。\n操作のために各種インスタンスを保持します\n- {@link Classes}\n- {@link Style}\n- {@link Bounding}",
    "lineNumber": 30,
    "interface": false
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "id",
    "memberof": "src/dom/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Elements.js~Elements.id",
    "access": "public",
    "description": "引数の id attribute value で HTMLElement を `document.getElementById` で取得します ",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "idName",
        "description": "id attribute value"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Element を返します, 取得できない時は null を返します"
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "select",
    "memberof": "src/dom/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Elements.js~Elements.select",
    "access": "public",
    "description": "querySelector を使用し Element を探します ",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "探索 selector"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "document",
        "defaultRaw": "document",
        "name": "parentNode",
        "description": "親 Node|Element"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Element or null"
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "selects",
    "memberof": "src/dom/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dom/Elements.js~Elements.selects",
    "access": "public",
    "description": "querySelectorAll を使用し Element を探します ",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "探索 selector"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "document",
        "defaultRaw": "document",
        "name": "parentNode",
        "description": "親 Node|Element"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "NodeList"
      ],
      "spread": false,
      "description": "NodeList or null"
    }
  },
  {
    "__docId__": 234,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dom/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Elements.js~Elements#constructor",
    "access": "public",
    "description": "操作対象 Element を保存します",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ]
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "style",
    "memberof": "src/dom/Elements.js~Elements",
    "static": false,
    "longname": "src/dom/Elements.js~Elements#style",
    "access": "public",
    "description": "対象 Element の CSS 操作を行う Style instance",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Style"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "classes",
    "memberof": "src/dom/Elements.js~Elements",
    "static": false,
    "longname": "src/dom/Elements.js~Elements#classes",
    "access": "public",
    "description": "Element class 操作のために instance を作成します - Classes instance",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Classes"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "element",
    "memberof": "src/dom/Elements.js~Elements",
    "static": false,
    "longname": "src/dom/Elements.js~Elements#element",
    "access": "public",
    "description": "操作対象 Element",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "bounding",
    "memberof": "src/dom/Elements.js~Elements",
    "static": false,
    "longname": "src/dom/Elements.js~Elements#bounding",
    "access": "public",
    "description": "Element class `ClientRect` 取得のために instance を作成します",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "Bounding"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "offset",
    "memberof": "src/dom/Elements.js~Elements",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dom/Elements.js~Elements#offset",
    "access": "public",
    "description": "`getBoundingClientRect` を使用し引数 element の offset 値を取得します\n\n```\n{{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n``` ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect "
    ],
    "lineNumber": 106,
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "プロパティ element の offset 値を返します"
    },
    "params": []
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/event/EventDispatcher.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/06/30 - 20:09\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport Type from '../util/Type';\n\n// /**\n//  * private property key, listeners Object\n//  * @type {Symbol}\n//  * @private\n//  */\n// const listenersKey = Symbol('event listeners object');\n\n/**\n * <p>Custom Event を作成し Event 通知を行います</p>\n *\n * ```\n * const callback = (event) => {\n *  console.log(event);\n * };\n *\n * const event = new EventDispatcher();\n * event.on('abc', callback);\n *\n * console.log(event.has('abc', callback));// true\n *\n * event.dispatch(new Events('abc'));\n *\n * event.off('abc', callback);\n * console.log(event.has('abc', callback));// false\n * ```\n *\n * {@link Events}\n */\nexport default class EventDispatcher {\n  /**\n   * listener property をイニシャライズします\n   */\n  constructor() {\n    // // @type {Object}\n    // let listeners = {};\n    // /**\n    //  * リスナーリストを取得します\n    //  * @returns {Object} リスナーリストを返します\n    //  */\n    // this.listeners = () => listeners;\n    // /**\n    //  * 全てのリスナーを破棄します\n    //  * @returns {boolean} 成功・不成功の真偽値を返します\n    //  */\n    // this.destroy = () => {\n    //   listeners = Object.create({});\n    //   return true;\n    // };\n    /**\n     * リスナーリスト object,\n     * event type {string} を key, 値は Array.<function> になります\n     * @type {Object}\n     */\n    this.listeners = Object.create({});\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 全てのリスナーを破棄します\n   */\n  destroy() {\n    this.listeners = Object.create({});\n  }\n  /**\n   * event type に リスナー関数を bind します\n   * @param {string} type event type（種類）\n   * @param {Function} listener callback関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  on(type, listener) {\n    if (!Type.exist(type)) {\n      // type が有効値ではないので処理しない\n      return false;\n    }\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // type {Object} - {{eventType: array [listener: Function...]...}}\n    const listeners = this.listeners;\n\n    if (!Type.has(listeners, type)) {\n      // listeners.type が存在しない場合は\n      // listeners.type をキーに新規配列を作成し\n      // listener {function} を配列へ追加（登録）します\n      listeners[type] = [];\n    }\n    // すでに listeners.type が存在する\n    listeners[type].push(listener);\n    return true;\n  }\n  /**\n   * <p>event type からリスナー関数を remove します<br>\n   * 内部処理は一時的に null 設定にします</p>\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  off(type, listener) {\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // @type {Object} - events.type:String: [listener:Function...]\n    const listeners = this.listeners;\n    if (!Type.has(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // @type {Array} - listener list\n    const types = listeners[type];\n\n    // listener の配列位置を調べる\n    // @type {number}\n    const index = types.indexOf(listener);\n\n    if (index === -1) {\n      // 配列位置が -1, 見つからなかった\n      // 処理しない\n      return false;\n    }\n\n    // すぐに削除するのでは無く null 代入\n    // loop(iterator) の中で off すると index 位置が変わりまずい\n    types[index] = null;\n\n    this.clean(type, types);\n\n    return true;\n  }\n  /**\n   * <p>リスナー配列を調べ可能なら空にします<br>\n   * リスナーリストが全て null の時に 空配列にします</p>\n   * @param {string} type event type（種類）\n   * @param {Array<Function>} types event type に登録されている配列（関数）\n   * @returns {boolean} 成功・不成功の真偽値を返します, true: 空にした\n   */\n  clean(type, types) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n    // Array.some は 戻り値が true の時に走査を止めます\n    // types 配列に null 以外があるかを調べます\n    // @type {boolean} - listener list に 関数(typeof 'function')が存在すると true になります\n    const hasFunction = types.some(listener => Type.method(listener));\n\n    if (!hasFunction) {\n      // null 以外が無いので空にする\n      this.listeners[type] = [].slice(0);\n    }\n\n    // 空配列にしたかを hasFunction flag を反転させることで知らせます\n    return !hasFunction;\n  }\n  /**\n   * event type にリスナー関数が登録されているかを調べます\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} event type にリスナー関数が登録されているかの真偽値を返します\n   */\n  has(type, listener) {\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // @type {Object} - events.type:String: [listener:Function...]\n    const listeners = this.listeners;\n\n    if (!Type.has(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // @type {boolean} - 存在チェック\n    return listeners[type].indexOf(listener) !== -1;\n  }\n  /**\n   * イベントを発生させリスナー関数を call します\n   * @param {Events|*} events 送信される Event Object.<br>\n   *   type キーにイベント種類が設定されています、dispatch 時に target プロパティを追加し this を設定します\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  dispatch(events) {\n    // @type {Object} - events.type:string: [listener:Function...]\n    const listeners = this.listeners;\n    // @type {string} - event type\n    const type = events.type;\n\n    if (!Type.has(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // event.target = this しようとすると\n    // Assignment to property of function parameter 'event'  no-param-reassign\n    // になるのでコピーし使用します\n    const eventObject = events;\n    // target プロパティに発生元を設定する\n    eventObject.target = this;\n\n    // callback を実行する\n    listeners[type]\n      .map(\n        // @param listener {Function}\n        (listener) => {\n          // null が混じっているのでタイプチェックを行い listener 関数を実行します\n          if (Type.method(listener)) {\n            return listener.call(this, eventObject);\n          }\n          return null;\n        },\n      );\n\n    return true;\n  }\n  /**\n   * **alias on**\n   * <p>event type に リスナー関数を bind します</p>\n   * @deprecated instead use on\n   * @param {string} type event type（種類）\n   * @param {Function} listener callback関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  addEventListener(type, listener) {\n    return this.on(type, listener);\n  }\n  /**\n   * **alias off**\n   * <p>event type からリスナー関数を remove します</p>\n   * @deprecated instead use off\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  removeEventListener(type, listener) {\n    return this.off(type, listener);\n  }\n  /**\n   * **alias has**\n   * <p>event type にリスナー関数が登録されているかを調べます</p>\n   * @deprecated instead use has\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} event type にリスナー関数が登録されているかの真偽値を返します\n   */\n  hasEventListener(type, listener) {\n    return this.has(type, listener);\n  }\n  /**\n   * **alias dispatch**\n   * <p>イベントを発生させリスナー関数を call します</p>\n   * @deprecated instead use dispatch\n   * @param {Events} events typeキー が必須です\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  dispatchEvent(events) {\n    return this.dispatch(events);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/EventDispatcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "EventDispatcher",
    "memberof": "src/event/EventDispatcher.js",
    "static": true,
    "longname": "src/event/EventDispatcher.js~EventDispatcher",
    "access": "public",
    "export": true,
    "importPath": "./src/event/EventDispatcher.js",
    "importStyle": "EventDispatcher",
    "description": "<p>Custom Event を作成し Event 通知を行います</p>\n\n```\nconst callback = (event) => {\n console.log(event);\n};\n\nconst event = new EventDispatcher();\nevent.on('abc', callback);\n\nconsole.log(event.has('abc', callback));// true\n\nevent.dispatch(new Events('abc'));\n\nevent.off('abc', callback);\nconsole.log(event.has('abc', callback));// false\n```\n\n{@link Events}",
    "lineNumber": 44,
    "interface": false
  },
  {
    "__docId__": 242,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#constructor",
    "access": "public",
    "description": "listener property をイニシャライズします",
    "lineNumber": 48
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "listeners",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#listeners",
    "access": "public",
    "description": "リスナーリスト object,\nevent type {string} を key, 値は Array.<function> になります",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#destroy",
    "access": "public",
    "description": "全てのリスナーを破棄します ",
    "lineNumber": 77,
    "params": [],
    "return": null
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "on",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#on",
    "access": "public",
    "description": "event type に リスナー関数を bind します ",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "callback関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "off",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#off",
    "access": "public",
    "description": "<p>event type からリスナー関数を remove します<br>\n内部処理は一時的に null 設定にします</p> ",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "clean",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#clean",
    "access": "public",
    "description": "<p>リスナー配列を調べ可能なら空にします<br>\nリスナーリストが全て null の時に 空配列にします</p> ",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します, true: 空にした "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Array<Function>"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": "event type に登録されている配列（関数）"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します, true: 空にした"
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "has",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#has",
    "access": "public",
    "description": "event type にリスナー関数が登録されているかを調べます ",
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event type にリスナー関数が登録されているかの真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event type にリスナー関数が登録されているかの真偽値を返します"
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "dispatch",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#dispatch",
    "access": "public",
    "description": "イベントを発生させリスナー関数を call します ",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events",
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "送信される Event Object.<br>\n  type キーにイベント種類が設定されています、dispatch 時に target プロパティを追加し this を設定します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#addEventListener",
    "access": "public",
    "description": "**alias on**\n<p>event type に リスナー関数を bind します</p> ",
    "lineNumber": 245,
    "deprecated": "instead use on ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "callback関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "removeEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#removeEventListener",
    "access": "public",
    "description": "**alias off**\n<p>event type からリスナー関数を remove します</p> ",
    "lineNumber": 256,
    "deprecated": "instead use off ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "hasEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#hasEventListener",
    "access": "public",
    "description": "**alias has**\n<p>event type にリスナー関数が登録されているかを調べます</p> ",
    "lineNumber": 267,
    "deprecated": "instead use has ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event type にリスナー関数が登録されているかの真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event type にリスナー関数が登録されているかの真偽値を返します"
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "dispatchEvent",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#dispatchEvent",
    "access": "public",
    "description": "**alias dispatch**\n<p>イベントを発生させリスナー関数を call します</p> ",
    "lineNumber": 277,
    "deprecated": "instead use dispatch ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "typeキー が必須です"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/event/Events.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/12 - 19:07\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * custom Event のリスナー関数引数に送られる Event Object\n *\n * EventDispatcher.dispatch する時の引数として使用します\n *\n * 3つのプロパティは必須項目です、イベントにあわせプロパティを追加します\n *\n * - type: string, イベント種類\n * - target: *, イベント発生インスタンス\n * - currentTarget: *, current イベント発生インスタンス\n */\nexport default class Events {\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} [currentTarget=this] current イベント発生インスタンス\n   * @param {*} [target=this] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget = this, target = this) {\n    /**\n     * イベント種類\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * target instance\n     * @type {*}\n     */\n    this.target = target;\n    /**\n     * currentTarget instance\n     * @type {*}\n     */\n    this.currentTarget = currentTarget;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 複製を作成します\n   * @returns {Events|*} 複製を返します\n   */\n  clone() {\n    // return new Events(this.type, this.currentTarget, this.target);\n    return Object.assign({}, this);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "Events",
    "memberof": "src/event/Events.js",
    "static": true,
    "longname": "src/event/Events.js~Events",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Events.js",
    "importStyle": "Events",
    "description": "custom Event のリスナー関数引数に送られる Event Object\n\nEventDispatcher.dispatch する時の引数として使用します\n\n3つのプロパティは必須項目です、イベントにあわせプロパティを追加します\n\n- type: string, イベント種類\n- target: *, イベント発生インスタンス\n- currentTarget: *, current イベント発生インスタンス",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 257,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Events.js~Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Events.js~Events#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "type",
    "memberof": "src/event/Events.js~Events",
    "static": false,
    "longname": "src/event/Events.js~Events#type",
    "access": "public",
    "description": "イベント種類",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "target",
    "memberof": "src/event/Events.js~Events",
    "static": false,
    "longname": "src/event/Events.js~Events#target",
    "access": "public",
    "description": "target instance",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "currentTarget",
    "memberof": "src/event/Events.js~Events",
    "static": false,
    "longname": "src/event/Events.js~Events#currentTarget",
    "access": "public",
    "description": "currentTarget instance",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "clone",
    "memberof": "src/event/Events.js~Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Events.js~Events#clone",
    "access": "public",
    "description": "複製を作成します ",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events|*} 複製を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events",
        "*"
      ],
      "spread": false,
      "description": "複製を返します"
    },
    "params": []
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "src/event/NativeResizing.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/29 - 15:34\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport Scroll from './Scroll';\nimport EventDispatcher from './EventDispatcher';\nimport Resizing from './Resizing';\n\n// event/events\nimport ResizingEvents from './events/ResizingEvents';\n\n/**\n * requestAnimationFrame が使えない奴のための resize 監視クラス\n * - {@link Scrolling}, {@link Resizing} class 代替します\n */\nexport default class NativeResizing extends EventDispatcher {\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * events instance を準備します\n   */\n  constructor() {\n    super();\n    // ------\n    /**\n     * Resizing event を準備します\n     * @type {ScrollEvents}\n     */\n    this.events = new ResizingEvents(Resizing.UPDATE, this, this);\n    // console.log('Resizing events', this.events);\n    /**\n     * document.body size - clientWidth / clientHeight\n     * @type {{width: number, height: number}}\n     */\n    this.body = {\n      width: -1,\n      height: -1,\n    };\n    /**\n     * window innerWidth / innerHeight\n     * @type {{width: number, height: number}}\n     */\n    this.window = {\n      width: -1,\n      height: -1,\n    };\n    /**\n     * 前回スクロールトップ値\n     * @type {number}\n     */\n    this.previous = -1;\n    /**\n     * 500ms timeout timer id\n     * @type {number}\n     */\n    this.timer = 0;\n    /**\n     * bind onUpdate - scroll / resize / timer handler\n     * @type {function}\n     */\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 監視を開始します\n   * - 常時監視します - document.body.onresize が作動しないため\n   * @returns {*} method chain 可能なように instance を返します\n   */\n  start() {\n    this.stop();\n    window.addEventListener('scroll', this.onUpdate, false);\n    window.addEventListener('resize', this.onUpdate, false);\n    this.timer = setTimeout(() => {\n      this.onUpdate();\n    }, 500);\n    return this;\n  }\n  /**\n   * 監視を停止します\n   * @returns {*} method chain 可能なように instance を返します\n   */\n  stop() {\n    clearTimeout(this.timer);\n    window.removeEventListener('scroll', this.onUpdate);\n    window.removeEventListener('resize', this.onUpdate);\n    return this;\n  }\n  /**\n   * 下記のプロパティをイベント・インスタンスに追加します\n   * - original {Events} - Rate Events instance\n   * - y {number} - scroll top\n   * - height {number} - window height\n   * - width {number} - window width\n   * - bottom {number} - window bottom 位置 (y + height)\n   * - previous {number} - 前回の scroll top\n   * - moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n   * - wide {boolean} - width が 768 以上の時に true\n   * - changed {boolean} - scroll top が前回と変わっていたら true\n   * @param {?Event} [event] scroll / resize Event\n   */\n  onUpdate(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - previous scroll top\n    const previous = this.previous;\n    // --- [window]\n    // @type {number} - window width\n    const width = window.innerWidth;\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // --- [body]\n    const bodyWidth = document.body.clientWidth;\n    const bodyHeight = document.body.clientHeight;\n    // @type {boolean} - 移動したかを表します,\n    const changed = event === null ||\n      previous !== y ||\n      height !== this.window.height ||\n      width !== this.window.width ||\n      bodyWidth !== this.body.width ||\n      bodyHeight !== this.body.height;\n    // ----------------------------------------------\n    // @type {ScrollEvents} - events\n    const events = this.events.clone();\n    // @type {Event} - Rate Events instance\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window width\n    events.width = width;\n    // -- body\n    events.bodyWidth = bodyWidth;\n    events.bodyHeight = bodyHeight;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    // @type {boolean} - 移動したかを表します,\n    // event が null の時は強制発火なので移動量 0 （scroll top 位置に変更がない）でも changed を true にします\n    events.changed = changed;\n    // @type {number} - 前回の y 位置\n    events.previous = previous;\n    // @type {number} - 移動量 +: down, -: up\n    events.moving = y - previous;\n    // event fire\n    // console.log('Resizing.onUpdate', events);\n    this.dispatch(events);\n    // ----------------------------------------------\n    this.window.width = width;\n    this.window.height = height;\n    this.body.width = bodyWidth;\n    this.body.height = bodyHeight;\n    // save scroll top -> previous\n    this.previous = y;\n  }\n  /**\n   * 強制 update\n   */\n  fire() {\n    this.onUpdate(null);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/NativeResizing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "class",
    "name": "NativeResizing",
    "memberof": "src/event/NativeResizing.js",
    "static": true,
    "longname": "src/event/NativeResizing.js~NativeResizing",
    "access": "public",
    "export": true,
    "importPath": "./src/event/NativeResizing.js",
    "importStyle": "NativeResizing",
    "description": "requestAnimationFrame が使えない奴のための resize 監視クラス\n- {@link Scrolling}, {@link Resizing} class 代替します",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 264,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#constructor",
    "access": "public",
    "description": "events instance を準備します",
    "lineNumber": 32
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#events",
    "access": "public",
    "description": "Resizing event を準備します",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "body",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#body",
    "access": "public",
    "description": "document.body size - clientWidth / clientHeight",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "{width: number, height: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "window",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#window",
    "access": "public",
    "description": "window innerWidth / innerHeight",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "{width: number, height: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "previous",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#previous",
    "access": "public",
    "description": "前回スクロールトップ値",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "timer",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#timer",
    "access": "public",
    "description": "500ms timeout timer id",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#start",
    "access": "public",
    "description": "監視を開始します\n- 常時監視します - document.body.onresize が作動しないため ",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#stop",
    "access": "public",
    "description": "監視を停止します ",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#onUpdate",
    "access": "public",
    "description": "下記のプロパティをイベント・インスタンスに追加します\n- original {Events} - Rate Events instance\n- y {number} - scroll top\n- height {number} - window height\n- width {number} - window width\n- bottom {number} - window bottom 位置 (y + height)\n- previous {number} - 前回の scroll top\n- moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n- wide {boolean} - width が 768 以上の時に true\n- changed {boolean} - scroll top が前回と変わっていたら true ",
    "lineNumber": 113,
    "params": [
      {
        "nullable": true,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "scroll / resize Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "fire",
    "memberof": "src/event/NativeResizing.js~NativeResizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/NativeResizing.js~NativeResizing#fire",
    "access": "public",
    "description": "強制 update ",
    "lineNumber": 170,
    "params": [],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/event/NativeResizingSingle.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/09 - 18:47\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport NativeResizing from './NativeResizing';\n\n/**\n * singleton Resizing instance\n * @type {?NativeResizing}\n */\nlet instance = null;\n\n/**\n * Resizing instance を singleton 提供します\n */\nexport default class ResizingSingle {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * NativeResizing instance を singleton 提供します\n   * @returns {NativeResizing} NativeResizing instance\n   */\n  static factory() {\n    if (!instance) {\n      instance = new NativeResizing();\n    }\n    return instance;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/NativeResizingSingle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/event/NativeResizingSingle.js",
    "static": true,
    "longname": "src/event/NativeResizingSingle.js~instance",
    "access": "public",
    "export": false,
    "importPath": "./src/event/NativeResizingSingle.js",
    "importStyle": null,
    "description": "singleton Resizing instance",
    "lineNumber": 19,
    "type": {
      "nullable": true,
      "types": [
        "NativeResizing"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "class",
    "name": "ResizingSingle",
    "memberof": "src/event/NativeResizingSingle.js",
    "static": true,
    "longname": "src/event/NativeResizingSingle.js~ResizingSingle",
    "access": "public",
    "export": true,
    "importPath": "./src/event/NativeResizingSingle.js",
    "importStyle": "ResizingSingle",
    "description": "Resizing instance を singleton 提供します",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "factory",
    "memberof": "src/event/NativeResizingSingle.js~ResizingSingle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/NativeResizingSingle.js~ResizingSingle.factory",
    "access": "public",
    "description": "NativeResizing instance を singleton 提供します ",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{NativeResizing} NativeResizing instance "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NativeResizing"
      ],
      "spread": false,
      "description": "NativeResizing instance"
    },
    "params": []
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/event/Resizing.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/03 - 19:33\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport Scrolling from './Scrolling';\nimport Scroll from './Scroll';\n\n// event/events\nimport ResizingEvents from './events/ResizingEvents';\n\n/**\n * resize のみを監視します\n */\nexport default class Resizing extends Scrolling {\n  // ----------------------------------------\n  // STATIC PROPERTY\n  // ----------------------------------------\n  /**\n   * Resizing event type - resizingUpdate\n   * @event UPDATE\n   * @type {string}\n   */\n  static UPDATE = 'resizingUpdate';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * events instance を準備します\n   */\n  constructor() {\n    super();\n    // ------\n    /**\n     * Resizing event を準備します\n     * @type {ScrollEvents}\n     */\n    this.events = new ResizingEvents(Resizing.UPDATE, this, this);\n    // console.log('Resizing events', this.events);\n    /**\n     * document.body size - clientWidth / clientHeight\n     * @type {{width: number, height: number}}\n     */\n    this.body = {\n      width: -1,\n      height: -1,\n    };\n    /**\n     * window innerWidth / innerHeight\n     * @type {{width: number, height: number}}\n     */\n    this.window = {\n      width: -1,\n      height: -1,\n    };\n    /**\n     * 前回スクロールトップ値\n     * @type {number}\n     */\n    this.previous = -1;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 監視を開始します\n   * - 常時監視します - document.body.onresize が作動しないため\n   * @returns {*} method chain 可能なように instance を返します\n   */\n  start() {\n    this.watch();\n    return this;\n  }\n  /**\n   * 監視を停止します\n   * @returns {*} method chain 可能なように instance を返します\n   */\n  stop() {\n    this.unwatch();\n    return this;\n  }\n  /**\n   * 指定 rate(fps) 毎にスクロール位置を<br>\n   * scroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n   *\n   * 下記のプロパティをイベント・インスタンスに追加します\n   *\n   * - original {Events} - Rate Events instance\n   * - y {number} - scroll top\n   * - height {number} - window height\n   * - width {number} - window width\n   * - bottom {number} - window bottom 位置 (y + height)\n   * - previous {number} - 前回の scroll top\n   * - moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n   * - wide {boolean} - width が 768 以上の時に true\n   * - changed {boolean} - scroll top が前回と変わっていたら true\n   *\n   * @param {?Events} event {@link Rate.UPDATE} Events instance\n   */\n  onUpdate(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - previous scroll top\n    const previous = this.previous;\n    // --- [window]\n    // @type {number} - window width\n    const width = window.innerWidth;\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // --- [body]\n    const bodyWidth = document.body.clientWidth;\n    const bodyHeight = document.body.clientHeight;\n    // @type {boolean} - 移動したかを表します,\n    const changed = event === null || previous !== y ||\n      height !== this.window.height || width !== this.window.width ||\n      bodyWidth !== this.body.width || bodyHeight !== this.body.height;\n    // ----------------------------------------------\n    // @type {ScrollEvents} - events\n    const events = this.events.clone();\n    // @type {Event} - Rate Events instance\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window width\n    events.width = width;\n    // -- body\n    events.bodyWidth = bodyWidth;\n    events.bodyHeight = bodyHeight;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    // @type {boolean} - 移動したかを表します,\n    // event が null の時は強制発火なので移動量 0 （scroll top 位置に変更がない）でも changed を true にします\n    events.changed = changed;\n    // @type {number} - 前回の y 位置\n    events.previous = previous;\n    // @type {number} - 移動量 +: down, -: up\n    events.moving = y - previous;\n    // event fire\n    // console.log('Resizing.onUpdate', events);\n    this.dispatch(events);\n    // ----------------------------------------------\n    this.window.width = width;\n    this.window.height = height;\n    this.body.width = bodyWidth;\n    this.body.height = bodyHeight;\n    // save scroll top -> previous\n    this.previous = y;\n    // // 移動量 0 の時は rate 監視を停止する\n    // if (!changed) {\n    //   this.unwatch();\n    // }\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Resizing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "class",
    "name": "Resizing",
    "memberof": "src/event/Resizing.js",
    "static": true,
    "longname": "src/event/Resizing.js~Resizing",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Resizing.js",
    "importStyle": "Resizing",
    "description": "resize のみを監視します",
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/event/Scrolling.js~Scrolling"
    ]
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/event/Resizing.js~Resizing",
    "static": true,
    "longname": "src/event/Resizing.js~Resizing.UPDATE",
    "access": "public",
    "description": "Resizing event type - resizingUpdate",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Resizing.js~Resizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#constructor",
    "access": "public",
    "description": "events instance を準備します",
    "lineNumber": 39
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Resizing.js~Resizing",
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#events",
    "access": "public",
    "description": "Resizing event を準備します",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "body",
    "memberof": "src/event/Resizing.js~Resizing",
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#body",
    "access": "public",
    "description": "document.body size - clientWidth / clientHeight",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "{width: number, height: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "window",
    "memberof": "src/event/Resizing.js~Resizing",
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#window",
    "access": "public",
    "description": "window innerWidth / innerHeight",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "{width: number, height: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "previous",
    "memberof": "src/event/Resizing.js~Resizing",
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#previous",
    "access": "public",
    "description": "前回スクロールトップ値",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Resizing.js~Resizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#start",
    "access": "public",
    "description": "監視を開始します\n- 常時監視します - document.body.onresize が作動しないため ",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Resizing.js~Resizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#stop",
    "access": "public",
    "description": "監視を停止します ",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/event/Resizing.js~Resizing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Resizing.js~Resizing#onUpdate",
    "access": "public",
    "description": "指定 rate(fps) 毎にスクロール位置を<br>\nscroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n\n下記のプロパティをイベント・インスタンスに追加します\n\n- original {Events} - Rate Events instance\n- y {number} - scroll top\n- height {number} - window height\n- width {number} - window width\n- bottom {number} - window bottom 位置 (y + height)\n- previous {number} - 前回の scroll top\n- moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n- wide {boolean} - width が 768 以上の時に true\n- changed {boolean} - scroll top が前回と変わっていたら true ",
    "lineNumber": 108,
    "params": [
      {
        "nullable": true,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "{@link Rate.UPDATE} Events instance"
      }
    ],
    "return": null
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "src/event/ResizingSingle.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/09 - 18:47\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Resizing from './Resizing';\n\n/**\n * singleton Resizing instance\n * @type {?Resizing}\n */\nlet instance = null;\n\n/**\n * Resizing instance を singleton 提供します\n */\nexport default class ResizingSingle {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Resizing instance を singleton 提供します\n   * @returns {Resizing} Resizing instance\n   */\n  static factory() {\n    if (!instance) {\n      instance = new Resizing();\n    }\n    return instance;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/ResizingSingle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/event/ResizingSingle.js",
    "static": true,
    "longname": "src/event/ResizingSingle.js~instance",
    "access": "public",
    "export": false,
    "importPath": "./src/event/ResizingSingle.js",
    "importStyle": null,
    "description": "singleton Resizing instance",
    "lineNumber": 19,
    "type": {
      "nullable": true,
      "types": [
        "Resizing"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "class",
    "name": "ResizingSingle",
    "memberof": "src/event/ResizingSingle.js",
    "static": true,
    "longname": "src/event/ResizingSingle.js~ResizingSingle",
    "access": "public",
    "export": true,
    "importPath": "./src/event/ResizingSingle.js",
    "importStyle": "ResizingSingle",
    "description": "Resizing instance を singleton 提供します",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "factory",
    "memberof": "src/event/ResizingSingle.js~ResizingSingle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/ResizingSingle.js~ResizingSingle.factory",
    "access": "public",
    "description": "Resizing instance を singleton 提供します ",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Resizing} Resizing instance "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Resizing"
      ],
      "spread": false,
      "description": "Resizing instance"
    },
    "params": []
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "src/event/Rising.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 14:37\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport Scrolling from './Scrolling';\n// import Events from './Events';\nimport EventDispatcher from './EventDispatcher';\nimport RisingEvents from './events/RisingEvents';\n\n// hit\nimport Hit from '../util/Hit';\n\n/**\n * {@link Scrolling} class を使用しスクロールトップ位置をチェクし対象 element と window の衝突判定を {@link Hit.test} で行います\n */\nexport default class Rising extends EventDispatcher {\n  // ----------------------------------------\n  // STATIC EVENT\n  // ----------------------------------------\n  /**\n   * 衝突イベント - risingCollision\n   * @event COLLISION\n   * @type {string}\n   */\n  static COLLISION = 'risingCollision';\n  /**\n   * 衝突「していない」イベント - risingAlien\n   * @event ALIEN\n   * @type {string}\n   */\n  static ALIEN = 'risingAlien';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * elements instance と scrolling instance を保存します\n   * @param {Elements} elements 対象 element を Elements インスタンスに変換します\n   * @param {Scrolling} scrolling スクロールトップ監視インスタンス\n   */\n  constructor(elements, scrolling = new Scrolling()) {\n    super();\n    /**\n     * 対象 element を Elements インスタンスに変換します\n     * @type {elements}\n     */\n    this.elements = elements;\n    /**\n     * スクロールトップ監視インスタンス\n     * @type {Scrolling}\n     */\n    this.scrolling = scrolling;\n    // const boundScroll = this.scroll.bind(this);\n    /**\n     * bound onUpdate, Rate.UPDATE event handler\n     * @type {function}\n     */\n    this.onUpdate = this.onUpdate.bind(this);\n    // this.boundScroll = boundScroll;\n    // /**\n    //  * start 済みフラッグ\n    //  * @type {boolean}\n    //  * @default false\n    //  */\n    // this.started = false;\n    /**\n     * Rising.[COLLISION|ALIEN] event instance\n     * @type {RisingEvents}\n     */\n    this.events = new RisingEvents(Rising.COLLISION, this, this);\n  }\n  // // ----------------------------------------\n  // // EVENT\n  // // ----------------------------------------\n  // /**\n  //  * 衝突イベント\n  //  * @event COLLISION\n  //  * @return {string} risingCollision を返します\n  //  */\n  // static get COLLISION() {\n  //   return 'risingCollision';\n  // }\n  // /**\n  //  * 衝突「していない」イベント\n  //  * @event ALIEN\n  //  * @return {string} risingAlien を返します\n  //  */\n  // static get ALIEN() {\n  //   return 'risingAlien';\n  // }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * scroll を監視します\n   * @returns {Rising} method chain 可能なように instance を返します\n   */\n  start() {\n    // // flag check\n    // if (this.started) {\n    //   return this;\n    // }\n    // this.started = true;\n    // // scrolling\n    // const scrolling = this.scrolling;\n    // scrolling.on(Scrolling.UPDATE, this.onUpdate);\n    // scrolling.start();\n    this.stop();\n    this.scrolling.on(Scrolling.UPDATE, this.onUpdate);\n    return this;\n  }\n  /**\n   * scroll 監視を止めます\n   * @returns {Rising} method chain 可能なように instance を返します\n   */\n  stop() {\n    // if (!this.started) {\n    //   return this;\n    // }\n    // this.started = false;\n    // const scrolling = this.scrolling;\n    this.scrolling.off(Scrolling.UPDATE, this.onUpdate);\n    return this;\n  }\n  /**\n   * Scrolling.UPDATE event handler - {link Hit.test} 衝突判定を行います\n   * @param {ScrollEvents} scrollEvents scroll events object\n   * @return {boolean} 衝突時に true を返します\n   */\n  onUpdate(scrollEvents) {\n    if (!scrollEvents.changed) {\n      return false;\n    }\n    // element offset\n    const offset = this.elements.offset();\n    // hit result\n    const hit = Hit.test(scrollEvents.height, offset);\n    // // @type {?Elements}\n    // let events = null;\n    // if (hit.result) {\n    //   events = new Events(Rising.COLLISION, this, this);\n    // } else {\n    //   events = new Events(Rising.ALIEN, this, this);\n    // }\n    const events = this.events;\n    events.type = hit.result ? Rising.COLLISION : Rising.ALIEN;\n    // hit / original / offset を追加します\n    events.hit = hit;\n    events.original = scrollEvents;\n    events.offset = offset;\n    // 発火\n    this.dispatch(events);\n    return hit.result;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Rising.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "Rising",
    "memberof": "src/event/Rising.js",
    "static": true,
    "longname": "src/event/Rising.js~Rising",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Rising.js",
    "importStyle": "Rising",
    "description": "{@link Scrolling} class を使用しスクロールトップ位置をチェクし対象 element と window の衝突判定を {@link Hit.test} で行います",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "COLLISION",
    "memberof": "src/event/Rising.js~Rising",
    "static": true,
    "longname": "src/event/Rising.js~Rising.COLLISION",
    "access": "public",
    "description": "衝突イベント - risingCollision",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "COLLISION"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "ALIEN",
    "memberof": "src/event/Rising.js~Rising",
    "static": true,
    "longname": "src/event/Rising.js~Rising.ALIEN",
    "access": "public",
    "description": "衝突「していない」イベント - risingAlien",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "ALIEN"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 301,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Rising.js~Rising",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Rising.js~Rising#constructor",
    "access": "public",
    "description": "elements instance と scrolling instance を保存します",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Elements"
        ],
        "spread": false,
        "optional": false,
        "name": "elements",
        "description": "対象 element を Elements インスタンスに変換します"
      },
      {
        "nullable": null,
        "types": [
          "Scrolling"
        ],
        "spread": false,
        "optional": false,
        "name": "scrolling",
        "description": "スクロールトップ監視インスタンス"
      }
    ]
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "elements",
    "memberof": "src/event/Rising.js~Rising",
    "static": false,
    "longname": "src/event/Rising.js~Rising#elements",
    "access": "public",
    "description": "対象 element を Elements インスタンスに変換します",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "elements"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "scrolling",
    "memberof": "src/event/Rising.js~Rising",
    "static": false,
    "longname": "src/event/Rising.js~Rising#scrolling",
    "access": "public",
    "description": "スクロールトップ監視インスタンス",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Rising.js~Rising",
    "static": false,
    "longname": "src/event/Rising.js~Rising#events",
    "access": "public",
    "description": "Rising.[COLLISION|ALIEN] event instance",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "RisingEvents"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Rising.js~Rising",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Rising.js~Rising#start",
    "access": "public",
    "description": "scroll を監視します ",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rising} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rising"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Rising.js~Rising",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Rising.js~Rising#stop",
    "access": "public",
    "description": "scroll 監視を止めます ",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rising} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Rising"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/event/Rising.js~Rising",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Rising.js~Rising#onUpdate",
    "access": "public",
    "description": "Scrolling.UPDATE event handler - {link Hit.test} 衝突判定を行います ",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScrollEvents"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollEvents",
        "description": "scroll events object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "衝突時に true を返します"
    }
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "src/event/Scroll.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/26 - 21:05\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport EventDispatcher from './EventDispatcher';\nimport ScrollEvents from './events/ScrollEvents';\n\n// util\nimport Freeze from '../util/Freeze';\n\n/**\n * new を許可しないための Symbol\n * @type {Symbol}\n * @private\n */\nconst singletonSymbol = Symbol('Scroll singleton symbol');\n/**\n * singleton instance, nullable\n * @type {?Scroll}\n * @private\n */\nlet instance = null;\n\n/**\n * window scroll event を監視し通知を行います\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const instance = Scroll.factory();\n * ```\n */\nexport default class Scroll extends EventDispatcher {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * y 位置に scroll top を即座に移動させます\n   * @param {number} [y=0] scroll top 目標値\n   * @param {number} [delay=0] time out 遅延 ms\n   * @returns {number} time out id\n   */\n  static jump(y = 0, delay = 0) {\n    return setTimeout(() => { window.scrollTo(0, y); }, delay);\n  }\n  /**\n   * {@link Freeze}.freeze を実行し scroll 操作を一定期間不能にします\n   * @returns {number} time out ID\n   */\n  static freeze() {\n    return Freeze.freeze();\n  }\n  /**\n   * scroll top 位置\n   * @returns {number} scroll top 位置を返します\n   * @see https://developer.mozilla.org/ja/docs/Web/API/Window/scrollY\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset\n   */\n  static y() {\n    return (typeof window.pageYOffset !== 'undefined') ?\n      window.pageYOffset :\n      (document.documentElement || document.body.parentNode || document.body).scrollTop;\n  }\n  // ----------------------------------------\n  /**\n   * Scroll instance を singleton を保証し作成します\n   * @returns {Scroll} Scroll instance を返します\n   */\n  static factory() {\n    if (instance === null) {\n      instance = new Scroll(singletonSymbol);\n    }\n    return instance;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * scroll で発生するイベントを取得します\n   * @event SCROLL\n   * @returns {string} event, scrollScroll を返します\n   * @default scrollScroll\n   */\n  static get SCROLL() {\n    return 'scrollScroll';\n  }\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n  /**\n   * singleton です\n   * @param {Symbol} checkSymbol singleton を保証するための private instance\n   * @returns {Scroll} singleton instance を返します\n   */\n  constructor(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('don\\'t use new, instead use static factory method.');\n    }\n    // instance 作成済みかをチェックし instance が null の時 this を設定します\n    if (instance !== null) {\n      return instance;\n    }\n    // onetime setting\n    super();\n    // instance = this;\n\n    // event handler\n    // const boundScroll = this.scroll.bind(this);\n    /**\n     * bound onScroll, window.onscroll event handler\n     * @type {function}\n     */\n    // this.boundScroll = this.scroll.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    // this.boundScroll = () => boundScroll;\n    // @type {Events} - events instance\n    // const events = new ScrollEvents(Scroll.SCROLL, this, this);\n    /**\n     * ScrollEvents instance, 発火時に使用します\n     * @type {ScrollEvents}\n     */\n    this.events = new ScrollEvents(Scroll.SCROLL, this, this);\n    // this.events = () => events;\n    /**\n     * 前回 scroll top 位置\n     * @type {number}\n     * @default -1\n     */\n    this.previous = -1;\n    // /**\n    //  * start 済みフラッグ\n    //  * @type {boolean}\n    //  * @default false\n    //  */\n    // this.started = false;\n\n    // 設定済み instance を返します\n    return this;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * scroll event を監視します\n   * @returns {Scroll} method chain 可能なように instance を返します\n   */\n  start() {\n    // if (this.started) {\n    //   return this;\n    // }\n    // this.started = true;\n    this.stop();\n    window.addEventListener('scroll', this.onScroll, false);\n    return this;\n  }\n  /**\n   * scroll event を監視を止めます\n   * @returns {Scroll} method chain 可能なように instance を返します\n   */\n  stop() {\n    // if (!this.started) {\n    //   return this;\n    // }\n    // this.started = false;\n    window.removeEventListener('scroll', this.onScroll);\n    return this;\n  }\n  /**\n   * window scroll event handler<br>\n   * window scroll event 発生後に scroll top 位置をもたせた Scroll.SCROLL custom event を発火します\n   * @param {?Event} event window scroll event, nullable\n   * @returns {void}\n   */\n  onScroll(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // @type {number} - 前回の scroll top\n    const previous = this.previous;\n\n    // @type {Events} - events\n    const events = this.events;\n    // @type {Event} - scroll event\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    events.previous = previous;\n    // @type {boolean} - 前回の scroll top と比較し移動したかを真偽値で取得します, true: 移動した\n    events.changed = previous !== y;\n    // @type {number} - 移動量 +（正）: down, -（負）: up\n    events.moving = y - previous;\n    // event fire\n    this.dispatch(events);\n    this.previous = y;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Scroll.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "singletonSymbol",
    "memberof": "src/event/Scroll.js",
    "static": true,
    "longname": "src/event/Scroll.js~singletonSymbol",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Scroll.js",
    "importStyle": null,
    "description": "new を許可しないための Symbol",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 311,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/event/Scroll.js",
    "static": true,
    "longname": "src/event/Scroll.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Scroll.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 31,
    "type": {
      "nullable": true,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 312,
    "kind": "class",
    "name": "Scroll",
    "memberof": "src/event/Scroll.js",
    "static": true,
    "longname": "src/event/Scroll.js~Scroll",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Scroll.js",
    "importStyle": "Scroll",
    "description": "window scroll event を監視し通知を行います\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst instance = Scroll.factory();\n```",
    "lineNumber": 41,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "jump",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Scroll.js~Scroll.jump",
    "access": "public",
    "description": "y 位置に scroll top を即座に移動させます ",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out id "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "y",
        "description": "scroll top 目標値"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "delay",
        "description": "time out 遅延 ms"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out id"
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "freeze",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Scroll.js~Scroll.freeze",
    "access": "public",
    "description": "{@link Freeze}.freeze を実行し scroll 操作を一定期間不能にします ",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out ID "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out ID"
    },
    "params": []
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "y",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Scroll.js~Scroll.y",
    "access": "public",
    "description": "scroll top 位置 ",
    "see": [
      "https://developer.mozilla.org/ja/docs/Web/API/Window/scrollY ",
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset "
    ],
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} scroll top 位置を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "scroll top 位置を返します"
    },
    "params": []
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "factory",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Scroll.js~Scroll.factory",
    "access": "public",
    "description": "Scroll instance を singleton を保証し作成します ",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} Scroll instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "Scroll instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 317,
    "kind": "get",
    "name": "SCROLL",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Scroll.js~Scroll.SCROLL",
    "access": "public",
    "description": "scroll で発生するイベントを取得します",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "SCROLL"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, scrollScroll を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "scrollScroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, scrollScroll を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#constructor",
    "access": "public",
    "description": "/**\nsingleton です",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "singleton を保証するための private instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Scroll.js~Scroll",
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#events",
    "access": "public",
    "description": "ScrollEvents instance, 発火時に使用します",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "previous",
    "memberof": "src/event/Scroll.js~Scroll",
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#previous",
    "access": "public",
    "description": "前回 scroll top 位置",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#start",
    "access": "public",
    "description": "scroll event を監視します ",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#stop",
    "access": "public",
    "description": "scroll event を監視を止めます ",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "onScroll",
    "memberof": "src/event/Scroll.js~Scroll",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scroll.js~Scroll#onScroll",
    "access": "public",
    "description": "window scroll event handler<br>\nwindow scroll event 発生後に scroll top 位置をもたせた Scroll.SCROLL custom event を発火します ",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window scroll event, nullable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "src/event/Scrolling.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/04\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport Scroll from './Scroll';\nimport EventDispatcher from './EventDispatcher';\nimport ScrollEvents from './events/ScrollEvents';\n\n// tick\nimport Rate from '../tick/Rate';\n\n/**\n * fps: {@link Rate} new Rate(Rate.RATE_5)` で Scroll 位置を計算します\n *\n * @example\n * // 途中で rate を変更する\n * const scrolling = new Scrolling();\n * scrolling\n *    .start()\n *    .rate.setRate(Rate.RATE_12);\n * */\nexport default class Scrolling extends EventDispatcher {\n  // ---------------------------------------------------\n  //  CONSTANT / EVENT\n  // ---------------------------------------------------\n  /**\n   * fps: {@link Rate} で発生するイベント - scrollingUpdate\n   * @event UPDATE\n   */\n  static UPDATE = 'scrollingUpdate';\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * @param {Rate} [rate=new Rate(Rate.Rate_5)] Rate instance, scroll 監視 fps を設定します\n   */\n  constructor(rate = new Rate(Rate.RATE_5)) {\n    super();\n    // @type {function}\n    // const onUpdate = this.scroll.bind(this);\n    /**\n     * bound onUpdate, Rate.UPDATE event handler\n     * @type {function}\n     */\n    this.onUpdate = this.onUpdate.bind(this);\n    // this.onUpdate = onUpdate;\n    // @type {ScrollEvents}\n    // const events = new ScrollEvents(Scrolling.UPDATE, this, this);\n    /**\n     * ScrollEvents instance, 発火時に使用します\n     * @type {ScrollEvents}\n     */\n    this.events = new ScrollEvents(Scrolling.UPDATE, this, this);\n    // this.events = events;\n    /**\n     * 前回 scroll top 位置\n     * @type {number}\n     * @default -1\n     */\n    this.previous = -1;\n    // /**\n    //  * start 済みフラッグ\n    //  * @type {boolean}\n    //  * @default false\n    //  */\n    // this.started = false;\n    /**\n     * Rate instance\n     * @type {?Rate}\n     */\n    this.rate = rate;\n    /**\n     * scrolling 監視開始 flag\n     * @type {boolean}\n     * @since 0.3.8\n     */\n    this.watching = false;\n    /**\n     * bind onNativeEvent - window.onscroll|onresize event handler\n     * @type {function}\n     */\n    this.onNativeEvent = this.onNativeEvent.bind(this);\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  // /**\n  //  * fps で発生するイベントを取得します\n  //  * @event SCROLL\n  //  * @returns {string} event, scrollingScroll を返します\n  //  * @default scrollingScroll\n  //  */\n  // static get UPDATE() {\n  //   return 'scrollingUpdate';\n  // }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * window.onscroll / window.onresize event handler,\n   * `this.watching` flag を確認し `watch` を call します\n   * @since 0.3.8\n   */\n  onNativeEvent() {\n    if (!this.watching) {\n      this.watch();\n    }\n  }\n  /**\n   * window.onscroll / window.onresize 監視を開始します\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   */\n  start() {\n    window.addEventListener('scroll', this.onNativeEvent, false);\n    window.addEventListener('resize', this.onNativeEvent, false);\n    return this;\n  }\n  /**\n   * window.onscroll / window.onresize 監視を停止します\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   */\n  stop() {\n    window.removeEventListener('scroll', this.onNativeEvent);\n    window.removeEventListener('resize', this.onNativeEvent);\n    return this;\n  }\n  /**\n   * fps を監視しスクロール位置を知らせます\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   * @since 0.3.8\n   */\n  watch() {\n    this.unwatch();\n    this.watching = true;\n    this.rate.on(Rate.UPDATE, this.onUpdate);\n    // rate.start();\n    return this;\n  }\n  /**\n   * fps 監視を止めます\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   * @since 0.3.8\n   */\n  unwatch() {\n    this.rate.off(Rate.UPDATE, this.onUpdate);\n    this.watching = false;\n    return this;\n  }\n  /**\n   * 指定 rate(fps) 毎にスクロール位置を<br>\n   * scroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n   *\n   * 下記のプロパティをイベント・インスタンスに追加します\n   *\n   * - original {Events} - Rate Events instance\n   * - y {number} - scroll top\n   * - height {number} - window height\n   * - width {number} - window width\n   * - bottom {number} - window bottom 位置 (y + height)\n   * - previous {number} - 前回の scroll top\n   * - moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n   * - wide {boolean} - width が 768 以上の時に true\n   * - changed {boolean} - scroll top が前回と変わっていたら true\n   *\n   * @param {?Events} event {@link Rate.UPDATE} Events instance\n   */\n  onUpdate(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - previous scroll top\n    const previous = this.previous;\n    // @type {boolean} - 移動したかを表します,\n    const changed = event === null || previous !== y;\n    // 移動量 0 の時は rate 監視を停止する\n    if (!changed) {\n      this.unwatch();\n    }\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // @type {number} - window width\n    const width = window.innerWidth;\n\n    // @type {ScrollEvents} - events\n    const events = this.events;\n\n    // @type {Event} - Rate Events instance\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window width\n    events.width = width;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    // @type {boolean} - 移動したかを表します,\n    // event が null の時は強制発火なので移動量 0 （scroll top 位置に変更がない）でも changed を true にします\n    events.changed = changed;\n    // @type {number} - 前回の y 位置\n    events.previous = previous;\n    // @type {number} - 移動量 +: down, -: up\n    events.moving = y - previous;\n    // event fire\n    // console.log('Scrolling.scroll', events);\n    this.dispatch(events);\n\n    // save scroll top -> previous\n    this.previous = y;\n  }\n  /**\n   * 強制的に Scrolling.SCROLL event を発火させます\n   */\n  fire() {\n    this.onUpdate(null);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Scrolling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "class",
    "name": "Scrolling",
    "memberof": "src/event/Scrolling.js",
    "static": true,
    "longname": "src/event/Scrolling.js~Scrolling",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Scrolling.js",
    "importStyle": "Scrolling",
    "description": "fps: {@link Rate} new Rate(Rate.RATE_5)` で Scroll 位置を計算します",
    "examples": [
      "// 途中で rate を変更する\nconst scrolling = new Scrolling();\nscrolling\n   .start()\n   .rate.setRate(Rate.RATE_12);"
    ],
    "lineNumber": 32,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "static": true,
    "longname": "src/event/Scrolling.js~Scrolling.UPDATE",
    "access": "public",
    "description": "fps: {@link Rate} で発生するイベント - scrollingUpdate",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Rate"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "new Rate(Rate.Rate_5)",
        "defaultRaw": "new Rate(Rate.Rate_5)",
        "name": "rate",
        "description": "Rate instance, scroll 監視 fps を設定します"
      }
    ]
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#events",
    "access": "public",
    "description": "ScrollEvents instance, 発火時に使用します",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "previous",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#previous",
    "access": "public",
    "description": "前回 scroll top 位置",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 333,
    "kind": "member",
    "name": "rate",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#rate",
    "access": "public",
    "description": "Rate instance",
    "lineNumber": 81,
    "type": {
      "nullable": true,
      "types": [
        "Rate"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "watching",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#watching",
    "access": "public",
    "description": "scrolling 監視開始 flag",
    "lineNumber": 87,
    "since": "0.3.8",
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "onNativeEvent",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#onNativeEvent",
    "access": "public",
    "description": "window.onscroll / window.onresize event handler,\n`this.watching` flag を確認し `watch` を call します ",
    "lineNumber": 114,
    "since": "0.3.8 ",
    "params": [],
    "return": null
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#start",
    "access": "public",
    "description": "window.onscroll / window.onresize 監視を開始します ",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#stop",
    "access": "public",
    "description": "window.onscroll / window.onresize 監視を停止します ",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "watch",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#watch",
    "access": "public",
    "description": "fps を監視しスクロール位置を知らせます ",
    "lineNumber": 142,
    "since": "0.3.8 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "unwatch",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#unwatch",
    "access": "public",
    "description": "fps 監視を止めます ",
    "lineNumber": 154,
    "since": "0.3.8 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#onUpdate",
    "access": "public",
    "description": "指定 rate(fps) 毎にスクロール位置を<br>\nscroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n\n下記のプロパティをイベント・インスタンスに追加します\n\n- original {Events} - Rate Events instance\n- y {number} - scroll top\n- height {number} - window height\n- width {number} - window width\n- bottom {number} - window bottom 位置 (y + height)\n- previous {number} - 前回の scroll top\n- moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n- wide {boolean} - width が 768 以上の時に true\n- changed {boolean} - scroll top が前回と変わっていたら true ",
    "lineNumber": 177,
    "params": [
      {
        "nullable": true,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "{@link Rate.UPDATE} Events instance"
      }
    ],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "fire",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Scrolling.js~Scrolling#fire",
    "access": "public",
    "description": "強制的に Scrolling.SCROLL event を発火させます ",
    "lineNumber": 223,
    "params": [],
    "return": null
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "src/event/ScrollingSingle.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 15:16\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Scrolling from './Scrolling';\n\n/**\n * singleton instance, nullable\n * @type {?Scrolling}\n * @private\n */\nlet instance = null;\n\n/**\n * Scrolling instance を singleton 提供します\n */\nexport default class ScrollingSingle {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Scrolling instance を singleton を保証し作成します\n   * @returns {Scrolling} Scrolling instance を返します\n   */\n  static factory() {\n    if (instance === null) {\n      instance = new Scrolling();\n    }\n    return instance;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/ScrollingSingle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/event/ScrollingSingle.js",
    "static": true,
    "longname": "src/event/ScrollingSingle.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/event/ScrollingSingle.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 20,
    "type": {
      "nullable": true,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 348,
    "kind": "class",
    "name": "ScrollingSingle",
    "memberof": "src/event/ScrollingSingle.js",
    "static": true,
    "longname": "src/event/ScrollingSingle.js~ScrollingSingle",
    "access": "public",
    "export": true,
    "importPath": "./src/event/ScrollingSingle.js",
    "importStyle": "ScrollingSingle",
    "description": "Scrolling instance を singleton 提供します",
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "factory",
    "memberof": "src/event/ScrollingSingle.js~ScrollingSingle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/ScrollingSingle.js~ScrollingSingle.factory",
    "access": "public",
    "description": "Scrolling instance を singleton を保証し作成します ",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} Scrolling instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "Scrolling instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "src/event/Swipe.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/30 - 18:21\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport EventDispatcher from './EventDispatcher';\nimport Events from './Events';\n\n// event/events\nimport DragEvents from './events/DragEvents';\nimport Touching from './Touching';\n\n/**\n * touch 端末 swipe 監視を行います\n * @since v0.4.4\n */\nexport default class Swipe extends EventDispatcher {\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * LEFT - left\n   * @type {string}\n   */\n  static LEFT = 'left';\n  /**\n   * RIGHT - right\n   * @type {string}\n   */\n  static RIGHT = 'right';\n  /**\n   * END - end\n   * @type {string}\n   */\n  static END = 'end';\n  /**\n   * DRAG - drag'\n   * @type {string}\n   */\n  static DRAG = 'drag';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * touch event 管理を行います\n   * @param {Element} element touch target Element\n   * @param {Touching} touching - 設定済み {@link Touching} instance\n   * @param {number} [marginal=10] 閾値 X 方向 - 絶対値が超えると swipe event 発火します\n   */\n  constructor(element, touching, marginal = 10) {\n    super();\n    // ---`\n    /**\n     * drag / swipe target Element\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * touch event 管理\n     * @type {Touching}\n     */\n    this.touching = touching;\n    /**\n     * 閾値 X 方向\n     * @type {number}\n     */\n    this.marginal = marginal;\n    /**\n     * bound onStart - touchstart event handler\n     * @type {function}\n     */\n    this.onStart = this.onStart.bind(this);\n    /**\n     * bound onMove - touchmove event handler\n     * @type {function}\n     */\n    this.onMove = this.onMove.bind(this);\n    /**\n     * bound onEnd - touchend event handler\n     * @type {function}\n     */\n    this.onEnd = this.onEnd.bind(this);\n    /**\n     * bound onCancel - touchcancel event handler\n     * @type {function}\n     */\n    this.onCancel = this.onCancel.bind(this);\n    /**\n     * X 移動量を累積加算します\n     * @type {number}\n     */\n    this.dragging = 0;\n    /**\n     * Swipe Events\n     * - left - swipe left\n     * - right - swipe right\n     * - end - drag end\n     * - drag - dragging\n     * @type {{left: Events, right: Events, end: Events, drag: DragEvents}}\n     */\n    this.events = {\n      left: new Events(Swipe.LEFT, this, this),\n      right: new Events(Swipe.RIGHT, this, this),\n      end: new Events(Swipe.END, this, this),\n      drag: new DragEvents(Swipe.DRAG, this, this, 0),\n    };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * touchstart - event handler\n   */\n  onStart() {\n    this.dispose();\n    this.reset();\n    // ----\n    const touching = this.touching;\n    touching.on(Touching.MOVE, this.onMove);\n    touching.on(Touching.END, this.onEnd);\n    touching.on(Touching.CANCEL, this.onCancel);\n  }\n  /**\n   * touchmove {@link Touching}.MOVE - event handler\n   * @param {TouchingEvents} events events.between.y で移動量を計算します\n   */\n  onMove(events) {\n    // 移動量を累積する\n    this.dragging += events.between.x;\n    this.drag(this.dragging);\n    if (this.swipeCheck()) {\n      this.dispose();\n      this.reset();\n    }\n  }\n  /**\n   * touchend {@link Touching}.END - event handler\n   * @param {TouchingEvents} events events.between.y で移動量を計算します\n   */\n  onEnd(events) {\n    // 移動量を累積する\n    this.dragging += events.between.x;\n    this.drag(this.dragging);\n    // ---\n    const move = this.swipeCheck();\n    if (!move) {\n      this.dispatch(this.events.end);\n    }\n    // ---\n    this.dispose();\n    this.reset();\n  }\n  /**\n   * touchend {@link Touching}.CANCEL - event handler\n   * - 処理を中止します\n   */\n  onCancel() {\n    this.dispose();\n    this.reset();\n    this.dispatch(this.events.end);\n  }\n  /**\n   * x 方向閾値(`marginal`)超えているかをチェックします\n   * - 超えているときは swipe 方向を check し `swipe` event を発火します\n   *   - 負数 - swipe left\n   *   - 正数 - swipe right\n   * @return {boolean} true: 超えている\n   */\n  swipeCheck() {\n    const move = Math.abs(this.dragging) > this.marginal;\n    if (move) {\n      if (this.dragging < 0) {\n        this.dispatch(this.events.left);\n      } else {\n        this.dispatch(this.events.right);\n      }\n    }\n    return move;\n  }\n  /**\n   * {@link Touching}.[MOVE|END|CANCEL] unbind します\n   */\n  dispose() {\n    const touching = this.touching;\n    touching.off(Touching.MOVE, this.onMove);\n    touching.off(Touching.END, this.onEnd);\n    touching.off(Touching.CANCEL, this.onCancel);\n  }\n  /**\n   * drag 量を `0` にします\n   */\n  reset() {\n    this.dragging = 0;\n  }\n  /**\n   * drag `x` value と共に通知します\n   * @param {number} x 移動(px)\n   */\n  drag(x) {\n    const events = this.events.drag;\n    events.x = x;\n    this.dispatch(events);\n  }\n  /**\n   * {@link Touching}.START 監視を始めます\n   */\n  start() {\n    this.stop();\n    const touching = this.touching;\n    touching.on(Touching.START, this.onStart);\n    touching.start();\n  }\n  /**\n   * {@link Touching}.START 監視を停止します\n   */\n  stop() {\n    const touching = this.touching;\n    touching.off(Touching.START, this.onStart);\n    touching.stop();\n    this.dispose();\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Swipe.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "Swipe",
    "memberof": "src/event/Swipe.js",
    "static": true,
    "longname": "src/event/Swipe.js~Swipe",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Swipe.js",
    "importStyle": "Swipe",
    "description": "touch 端末 swipe 監視を行います",
    "lineNumber": 25,
    "since": "v0.4.4",
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "LEFT",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": true,
    "longname": "src/event/Swipe.js~Swipe.LEFT",
    "access": "public",
    "description": "LEFT - left",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 353,
    "kind": "member",
    "name": "RIGHT",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": true,
    "longname": "src/event/Swipe.js~Swipe.RIGHT",
    "access": "public",
    "description": "RIGHT - right",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "END",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": true,
    "longname": "src/event/Swipe.js~Swipe.END",
    "access": "public",
    "description": "END - end",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "DRAG",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": true,
    "longname": "src/event/Swipe.js~Swipe.DRAG",
    "access": "public",
    "description": "DRAG - drag'",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#constructor",
    "access": "public",
    "description": "touch event 管理を行います",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "touch target Element"
      },
      {
        "nullable": null,
        "types": [
          "Touching"
        ],
        "spread": false,
        "optional": false,
        "name": "touching",
        "description": "設定済み {@link Touching} instance"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "marginal",
        "description": "閾値 X 方向 - 絶対値が超えると swipe event 発火します"
      }
    ]
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "element",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#element",
    "access": "public",
    "description": "drag / swipe target Element",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "touching",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#touching",
    "access": "public",
    "description": "touch event 管理",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Touching"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "marginal",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#marginal",
    "access": "public",
    "description": "閾値 X 方向",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "dragging",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#dragging",
    "access": "public",
    "description": "X 移動量を累積加算します",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Swipe.js~Swipe",
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#events",
    "access": "public",
    "description": "Swipe Events\n- left - swipe left\n- right - swipe right\n- end - drag end\n- drag - dragging",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "{left: Events, right: Events, end: Events, drag: DragEvents}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "onStart",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#onStart",
    "access": "public",
    "description": "touchstart - event handler ",
    "lineNumber": 122,
    "params": [],
    "return": null
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "onMove",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#onMove",
    "access": "public",
    "description": "touchmove {@link Touching}.MOVE - event handler ",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchingEvents"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "events.between.y で移動量を計算します"
      }
    ],
    "return": null
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "onEnd",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#onEnd",
    "access": "public",
    "description": "touchend {@link Touching}.END - event handler ",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "TouchingEvents"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "events.between.y で移動量を計算します"
      }
    ],
    "return": null
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "onCancel",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#onCancel",
    "access": "public",
    "description": "touchend {@link Touching}.CANCEL - event handler\n- 処理を中止します ",
    "lineNumber": 165,
    "params": [],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "swipeCheck",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#swipeCheck",
    "access": "public",
    "description": "x 方向閾値(`marginal`)超えているかをチェックします\n- 超えているときは swipe 方向を check し `swipe` event を発火します\n  - 負数 - swipe left\n  - 正数 - swipe right ",
    "lineNumber": 177,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 超えている"
    },
    "params": []
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#dispose",
    "access": "public",
    "description": "{@link Touching}.[MOVE|END|CANCEL] unbind します ",
    "lineNumber": 191,
    "params": [],
    "return": null
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "reset",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#reset",
    "access": "public",
    "description": "drag 量を `0` にします ",
    "lineNumber": 200,
    "params": [],
    "return": null
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "drag",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#drag",
    "access": "public",
    "description": "drag `x` value と共に通知します ",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "移動(px)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#start",
    "access": "public",
    "description": "{@link Touching}.START 監視を始めます ",
    "lineNumber": 215,
    "params": [],
    "return": null
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Swipe.js~Swipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Swipe.js~Swipe#stop",
    "access": "public",
    "description": "{@link Touching}.START 監視を停止します ",
    "lineNumber": 224,
    "params": [],
    "return": null
  },
  {
    "__docId__": 379,
    "kind": "file",
    "name": "src/event/Touching.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * f\n */\n\n// event\nimport EventDispatcher from './EventDispatcher';\nimport TouchingEvents from './events/TouchingEvents';\n\n// util\nimport Vectors from '../util/Vectors';\nimport Type from '../util/Type';\n\n// device\nimport Can from '../device/Can';\n\n// device/os\nimport Android from '../device/os/Android';\n\n// // touchevent 3rd argument\n// /**\n//  * addEventListener 第三引数 - { passive: true } | false\n//  * {@link Touching}\n//  * @private\n//  * @type {*}\n//  * @since 0.3.2\n//  */\n// const event3rd = Can.passive() ? { passive: true } : false;\n\n\n/**\n * Touch event を監視し y方向移動が `threshold` 以内の時に `TOUCH` event を発火します\n */\nexport default class Touching extends EventDispatcher {\n  /**\n   * addEventListener 第三引数 - { passive: true } | false\n   * {@link Touching}\n   * @private\n   * @type {*}\n   * @since 0.3.2\n   */\n  static event3rd = Can.passive() ? { passive: true } : false;\n  // ---------------------------------------------------\n  //  CONSTANT / EVENT\n  // ---------------------------------------------------\n  /**\n   * touchstart event type - touchingStart\n   * @constant START\n   * @type {string}\n   */\n  static START = 'touchingStart';\n  /**\n   * touchend event type - touchingEnd\n   * @constant END\n   * @type {string}\n   */\n  static END = 'touchingEnd';\n  /**\n   * touchcancel event type - touchingCancel\n   * @constant CANCEL\n   * @type {string}\n   */\n  static CANCEL = 'touchingCancel';\n  /**\n   * touchmove event type - touchingMove\n   * @constant MOVE\n   * @type {string}\n   */\n  static MOVE = 'touchingMove';\n  /**\n   * touch event type - touchingTouch\n   * @constant TOUCH\n   * @type {string}\n   */\n  static TOUCH = 'touchingTouch';\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * y 方向移動が threshold 以内か判定します\n   * @param {Vectors} pointA スタートポイント(Vectors)\n   * @param {Vectors} pointB エンドポイント(Vectors)\n   * @param {number} threshold 閾値\n   * @returns {boolean} true の時は閾値以上なのでスクロール判定になります\n   */\n  static scrolling(pointA, pointB, threshold) {\n    const y = pointA.betweenY(pointB);\n    // 正数値にし閾値と比較\n    return Math.abs(y) >= threshold;\n  }\n  /**\n   * MouseEvent|TouchEvent から pageX / pageY 座標を取得します\n   * @param {Event|MouseEvent|TouchEvent} event down / move / up event object\n   * @returns {{x: number, y: number}} pageX / pageY 座標を返します\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches\n   */\n  static point(event) {\n    const x = event.pageX;\n    const y = event.pageY;\n\n    // event.pageX / pageY があればそのまま値を返します\n    // Android で pageX / pageY 存在しても 0, 0 しか返さない端末あり\n    if (Type.number(x) && Type.number(y) && (x !== 0 && y !== 0)) {\n      return { x, y };\n    }\n\n    // event.pageX / pageY がない時は TouchEvent の changedTouches から取得します\n    // touch event\n    // @type {TouchList}\n    const touches = event.changedTouches || event.touches;\n    // touches が取得できない時は 0 をセットし返します\n    if (!Type.exist(touches) || touches.length === 0) {\n      return { x: 0, y: 0 };\n    }\n\n    // changedTouches list の先頭データを取り出し pageX / pageY を取得します\n    // @type {Touch}\n    const touch = touches[0];\n    return { x: touch.pageX, y: touch.pageY };\n  }\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * 処理対象 element などを保存します\n   * @param {Element} element 処理対象 Element\n   * @param {boolean} [canceling=false] touchmove 中に `preventDefault` を行うフラッグ\n   * false の時は {@link Can.passive} を調べ可能なら `{ passive: true }` します - since 0.3.2\n   * @param {number} [threshold=10] y 方向閾値\n   */\n  constructor(element, canceling = false, threshold = 10) {\n    super();\n    /**\n     * 処理対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * touchmove 中に `preventDefault` を行うかのフラッグ\n     * @type {boolean}\n     * @default false\n     */\n    this.canceling = canceling;\n    /**\n     * y 方向閾値, default: 10px\n     * @type {number}\n     * @default 10\n     */\n    this.threshold = threshold;\n    /**\n     * bound onStart\n     * @type {function}\n     */\n    this.onStart = this.onStart.bind(this);\n    /**\n     * bound onMove\n     * @type {function}\n     */\n    this.onMove = this.onMove.bind(this);\n    /**\n     * bound onEnd\n     * @type {function}\n     */\n    this.onEnd = this.onEnd.bind(this);\n    /**\n     * bound onCancel\n     * @type {function}\n     */\n    this.onCancel = this.onCancel.bind(this);\n    /**\n     * bound onBlur\n     * @type {function}\n     */\n    this.onBlur = this.onBlur.bind(this);\n    /**\n     * 位置管理を行う Vectors instance を含む object\n     * @type {{start: Vectors, end: Vectors, moving: Array.<Vectors>}}\n     */\n    this.vectors = {\n      start: new Vectors(),\n      end: new Vectors(),\n      moving: [].slice(0),\n    };\n    /**\n     * TouchEvent listener 3rd argument, option | useCapture\n     * @type {boolean}\n     * @since 0.3.2\n     */\n    this.eventOption = canceling ? false : Touching.event3rd;\n    /**\n     * [native code] - document.body\n     * @type {HTMLElement}\n     */\n    this.body = document.body;\n    /**\n     * timer ID\n     * - kitkat - touchend 強制実行\n     * @type {{kitkat: number}}\n     * @since v0.4.4\n     */\n    this.timer = {\n      kitkat: 0,\n    };\n    /**\n     * Android 4.3 ~ 4.4 && standard browser (webview) flag\n     * @type {boolean}\n     */\n    this.kitkat = Android.kitKat();\n  }\n  // ---------------------------------------------------\n  //  METHOD\n  // ---------------------------------------------------\n  // event handlers\n  // ---------------------------------------------------\n  /**\n   * touchstart event handler\n   * @param {Event|TouchEvent} event touchstart event\n   * @returns {void}\n   */\n  onStart(event) {\n    // event unbind <- 二重 bind にならないように\n    this.dispose();\n    // vectors を初期化\n    this.reset();\n    // 現在 position を保存\n    const vectors = this.vectors;\n    const point = Touching.point(event);\n    vectors.start.update(point.x, point.y);\n    vectors.moving.push(vectors.start);\n\n    // キャンセル event 監視を開始\n    const eventOption = this.eventOption;\n    const body = this.body;\n    body.addEventListener('touchend', this.onEnd, eventOption);\n    body.addEventListener('touchmove', this.onMove, eventOption);\n    body.addEventListener('touchcancel', this.onCancel, eventOption);\n\n    // Touching.START 発火\n    this.dispatch(new TouchingEvents(\n      Touching.START,\n      this,\n      event,\n      vectors.start,\n    ));\n  }\n  /**\n   * touchmove event handler\n   * @param {Event} event touchmove event\n   * @returns {void}\n   */\n  onMove(event) {\n    // console.log('Touching.onMove', event);\n    const vectors = this.vectors;\n    const movingArray = vectors.moving;\n\n    // 現在 position\n    const point = Touching.point(event);\n    const position = new Vectors(point.x, point.y, Date.now());\n\n    // 前回 position <- moving 配列最後\n    const previous = movingArray.pop();\n    // 戻す\n    movingArray.push(previous);\n\n    // scroll checked\n    const scrolling = Touching.scrolling(position, previous, this.threshold);\n    position.scrolling = scrolling;\n    // 現在 position を配列後ろにセット\n    movingArray.push(position);\n\n    // global cancel と 閾値チェックで `preventDefault` を実行し scroll を止める\n    if (this.canceling && !scrolling) {\n      event.preventDefault();\n    }\n\n    // 移動量\n    const between = position.between(previous);\n\n    // Touching.MOVE 発火\n    this.dispatch(new TouchingEvents(\n      Touching.MOVE,\n      this,\n      event,\n      position,\n      between,\n      scrolling,\n    ));\n    // kitkat(Android 4.3 ~ 4.4 && standard browser) - touchend 発火しないので check\n    if (this.kitkat) {\n      this.kitkatEnd(event);\n    }\n  }\n  /**\n   * Android 4.3 ~ 4.4 && standard browser - touchend 発火しない\n   * `onEnd` を強制実行します\n   * @param {Event} event touch event\n   * @since v0.4.4\n   */\n  kitkatEnd(event) {\n    clearTimeout(this.timer.kitkat);\n    this.timer.kitkat = setTimeout(() => {\n      this.onEnd(event);\n    }, 32);\n  }\n  /**\n   * touchend event handler\n   * @param {Event} event touchend event\n   * @returns {void}\n   */\n  onEnd(event) {\n    // console.log('Touching.onEnd', event);\n    const vectors = this.vectors;\n\n    // 現在 position\n    const point = Touching.point(event);\n    const position = new Vectors(point.x, point.y, Date.now());\n\n    // 前回 position を touchstart 位置としチェックします\n    const previous = vectors.start;\n    const scrolling = Touching.scrolling(position, previous, this.threshold);\n    position.scrolling = scrolling;\n\n    // global cancel と 閾値チェックで `preventDefault` を実行し scroll を止める\n    if (this.canceling && !scrolling) {\n      event.preventDefault();\n    }\n\n    // 移動量\n    const between = position.between(previous);\n\n    // Touching.END 発火\n    this.dispatch(new TouchingEvents(\n      Touching.END,\n      this,\n      event,\n      position,\n      between,\n      scrolling,\n    ));\n\n    // Touching.Touch 発火\n    this.dispatch(new TouchingEvents(\n      Touching.TOUCH,\n      this,\n      event,\n      position,\n      between,\n      scrolling,\n    ));\n    // ---\n    this.dispose();\n  }\n  /**\n   * touchcancel event handler<br>\n   * 処理をキャンセルします\n   * @param {Event} event touchend event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  onCancel(event) {\n    return this.abort(event);\n  }\n  /**\n   * window.blur event handler<br>\n   * 処理をキャンセルします\n   * @param {Event} event window blur event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  onBlur(event) {\n    return this.abort(event);\n  }\n  // 処理\n  // ---------------------------------------------------\n  /**\n   * touch event 監視を開始します\n   * - `element`.ontouchstart\n   * - window.onblur - cancel するため\n   * @since 0.4.4\n   */\n  start() {\n    this.stop();\n    this.element.addEventListener('touchstart', this.onStart, this.eventOption);\n    window.addEventListener('blur', this.onBlur, false);\n  }\n  /**\n   * touch event 監視を停止します\n   * @since 0.4.4\n   */\n  stop() {\n    this.element.removeEventListener('touchstart', this.onStart);\n    window.removeEventListener('blur', this.onBlur);\n    this.dispose();\n  }\n  /**\n   * @deprecated instead use `start`\n   * 初期処理<br>\n   * element への `touchstart` と<br>\n   * window.blur event をそれぞれ bind します\n   * @returns {void}\n   */\n  init() {\n    // this.element.addEventListener('touchstart', this.onStart, this.eventOption);\n    // window.addEventListener('blur', this.onBlur, false);\n    this.start();\n  }\n  /**\n   * touch event での処理をキャンセルし、設定値を初期値に戻します\n   * @param {Event} event touch / window.onblur Event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  abort(event) {\n    this.dispose();\n    this.reset();\n    this.dispatch(new TouchingEvents(\n      Touching.CANCEL,\n      this,\n      event,\n    ));\n    return true;\n  }\n  /**\n   * bind した event を unbind します\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  dispose() {\n    const body = this.body;\n\n    body.removeEventListener('touchend', this.onEnd);\n    body.removeEventListener('touchmove', this.onMove);\n    body.removeEventListener('touchcancel', this.onCancel);\n    return true;\n  }\n  /**\n   * 移動監視に使用した vectors instance を全て reset します\n   * @returns {{start: Vectors, end: Vectors, moving: Array.<Vectors>}}\n   * reset 後の vectors object を返します\n   */\n  reset() {\n    const vectors = this.vectors;\n    vectors.start.reset();\n    vectors.end.reset();\n    vectors.moving = [].slice(0);\n\n    return vectors;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Touching.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 380,
    "kind": "class",
    "name": "Touching",
    "memberof": "src/event/Touching.js",
    "static": true,
    "longname": "src/event/Touching.js~Touching",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Touching.js",
    "importStyle": "Touching",
    "description": "Touch event を監視し y方向移動が `threshold` 以内の時に `TOUCH` event を発火します",
    "lineNumber": 43,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "event3rd",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.event3rd",
    "access": "private",
    "description": "addEventListener 第三引数 - { passive: true } | false\n{@link Touching}",
    "lineNumber": 51,
    "since": "0.3.2",
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "START",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.START",
    "access": "public",
    "description": "touchstart event type - touchingStart",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "START"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "END",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.END",
    "access": "public",
    "description": "touchend event type - touchingEnd",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "END"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "CANCEL",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.CANCEL",
    "access": "public",
    "description": "touchcancel event type - touchingCancel",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "CANCEL"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "MOVE",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.MOVE",
    "access": "public",
    "description": "touchmove event type - touchingMove",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "MOVE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "TOUCH",
    "memberof": "src/event/Touching.js~Touching",
    "static": true,
    "longname": "src/event/Touching.js~Touching.TOUCH",
    "access": "public",
    "description": "touch event type - touchingTouch",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@constant",
        "tagValue": "TOUCH"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "scrolling",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Touching.js~Touching.scrolling",
    "access": "public",
    "description": "y 方向移動が threshold 以内か判定します ",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true の時は閾値以上なのでスクロール判定になります "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "pointA",
        "description": "スタートポイント(Vectors)"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "pointB",
        "description": "エンドポイント(Vectors)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "threshold",
        "description": "閾値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true の時は閾値以上なのでスクロール判定になります"
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "point",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/event/Touching.js~Touching.point",
    "access": "public",
    "description": "MouseEvent|TouchEvent から pageX / pageY 座標を取得します ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent ",
      "https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches ",
      "https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches "
    ],
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{x: number, y: number}} pageX / pageY 座標を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event",
          "MouseEvent",
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "down / move / up event object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{x: number, y: number}"
      ],
      "spread": false,
      "description": "pageX / pageY 座標を返します"
    }
  },
  {
    "__docId__": 389,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#constructor",
    "access": "public",
    "description": "処理対象 element などを保存します",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "処理対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "canceling",
        "description": "touchmove 中に `preventDefault` を行うフラッグ\nfalse の時は {@link Can.passive} を調べ可能なら `{ passive: true }` します - since 0.3.2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "threshold",
        "description": "y 方向閾値"
      }
    ]
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "element",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#element",
    "access": "public",
    "description": "処理対象 Element",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 391,
    "kind": "member",
    "name": "canceling",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#canceling",
    "access": "public",
    "description": "touchmove 中に `preventDefault` を行うかのフラッグ",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "threshold",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#threshold",
    "access": "public",
    "description": "y 方向閾値, default: 10px",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "10"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 398,
    "kind": "member",
    "name": "vectors",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#vectors",
    "access": "public",
    "description": "位置管理を行う Vectors instance を含む object",
    "lineNumber": 190,
    "type": {
      "nullable": null,
      "types": [
        "{start: Vectors, end: Vectors, moving: Array.<Vectors>}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 399,
    "kind": "member",
    "name": "eventOption",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#eventOption",
    "access": "public",
    "description": "TouchEvent listener 3rd argument, option | useCapture",
    "lineNumber": 200,
    "since": "0.3.2",
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 400,
    "kind": "member",
    "name": "body",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#body",
    "access": "public",
    "description": "[native code] - document.body",
    "lineNumber": 205,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "timer",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#timer",
    "access": "public",
    "description": "timer ID\n- kitkat - touchend 強制実行",
    "lineNumber": 212,
    "since": "v0.4.4",
    "type": {
      "nullable": null,
      "types": [
        "{kitkat: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "kitkat",
    "memberof": "src/event/Touching.js~Touching",
    "static": false,
    "longname": "src/event/Touching.js~Touching#kitkat",
    "access": "public",
    "description": "Android 4.3 ~ 4.4 && standard browser (webview) flag",
    "lineNumber": 219,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "onStart",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#onStart",
    "access": "public",
    "description": "touchstart event handler ",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event",
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchstart event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "onMove",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#onMove",
    "access": "public",
    "description": "touchmove event handler ",
    "lineNumber": 262,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchmove event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "kitkatEnd",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#kitkatEnd",
    "access": "public",
    "description": "Android 4.3 ~ 4.4 && standard browser - touchend 発火しない\n`onEnd` を強制実行します ",
    "lineNumber": 310,
    "since": "v0.4.4 ",
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touch event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "onEnd",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#onEnd",
    "access": "public",
    "description": "touchend event handler ",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchend event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "onCancel",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#onCancel",
    "access": "public",
    "description": "touchcancel event handler<br>\n処理をキャンセルします ",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchend event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    }
  },
  {
    "__docId__": 408,
    "kind": "method",
    "name": "onBlur",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#onBlur",
    "access": "public",
    "description": "window.blur event handler<br>\n処理をキャンセルします ",
    "lineNumber": 379,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window blur event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    }
  },
  {
    "__docId__": 409,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#start",
    "access": "public",
    "description": "touch event 監視を開始します\n- `element`.ontouchstart\n- window.onblur - cancel するため ",
    "lineNumber": 390,
    "since": "0.4.4 ",
    "params": [],
    "return": null
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#stop",
    "access": "public",
    "description": "touch event 監視を停止します ",
    "lineNumber": 399,
    "since": "0.4.4 ",
    "params": [],
    "return": null
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "init",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#init",
    "access": "public",
    "description": " ",
    "lineNumber": 411,
    "deprecated": "instead use `start`\n初期処理<br>\nelement への `touchstart` と<br>\nwindow.blur event をそれぞれ bind します ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "abort",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#abort",
    "access": "public",
    "description": "touch event での処理をキャンセルし、設定値を初期値に戻します ",
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touch / window.onblur Event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    }
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#dispose",
    "access": "public",
    "description": "bind した event を unbind します ",
    "lineNumber": 435,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    },
    "params": []
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "reset",
    "memberof": "src/event/Touching.js~Touching",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Touching.js~Touching#reset",
    "access": "public",
    "description": "移動監視に使用した vectors instance を全て reset します ",
    "lineNumber": 448,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{start: Vectors, end: Vectors, moving: Array.<Vectors>}}\nreset 後の vectors object を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{start: Vectors, end: Vectors, moving: Array.<Vectors>}"
      ],
      "spread": false,
      "description": "reset 後の vectors object を返します"
    },
    "params": []
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "src/event/Wheel.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/26 - 19:12\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport EventDispatcher from './EventDispatcher';\nimport WheelEvents from './events/WheelEvents';\n\n// /**\n//  * new を許可しないための Symbol\n//  * @type {Symbol}\n//  * @private\n//  */\n// const singletonSymbol = Symbol('Scroll singleton symbol');\n// /**\n//  * singleton instance, nullable\n//  * @type {?Wheel}\n//  * @private\n//  */\n// let instance = null;\n\n/**\n * mousewheel event を監視し通知を行います\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const wheel = new Wheel();\n * wheel.threshold = 500;\n * wheel.start();\n * ```\n */\nexport default class Wheel extends EventDispatcher {\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * wheel up で発生するイベント - wheelUp\n   * @type {string}\n   */\n  static UP = 'wheelUp';\n  /**\n   * wheel down で発生するイベント - wheelDown\n   * @type {string}\n   */\n  static DOWN = 'wheelDown';\n  /**\n   * wheel move で発生するイベント - wheelUpdate\n   * @type {string}\n   */\n  static UPDATE = 'wheelUpdate';\n  // // ----------------------------------------\n  // // STATIC METHOD\n  // // ----------------------------------------\n  // /**\n  //  * Wheel instance を singleton を保証し作成します\n  //  * @returns {Wheel} Wheel instance を返します\n  //  */\n  // static factory() {\n  //   if (instance === null) {\n  //     instance = new Wheel(singletonSymbol);\n  //   }\n  //   return instance;\n  // }\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  // /**\n  //  * singleton です\n  //  * @param {Symbol} checkSymbol singleton を保証するための private instance\n  //  * @returns {Wheel} singleton instance を返します\n  //  */\n  /**\n   * wheel event を管理します\n   * @param {number} [threshold=200] 閾値 - event を発生させる移動量(px)\n   */\n  constructor(threshold = 200) {\n    // // checkSymbol と singleton が等価かをチェックします\n    // if (checkSymbol !== singletonSymbol) {\n    //   throw new Error('don\\'t use new, instead use static factory method.');\n    // }\n    // // instance 作成済みかをチェックし instance が null の時 this を設定します\n    // if (instance !== null) {\n    //   return instance;\n    // }\n    super();\n    // onetime setting\n    // instance = this;\n\n    // event handler\n    // const onMouseWheel = this.onMouseWheel.bind(this);\n    /**\n     * bound onMouseWheel\n     * @type {function}\n     */\n    this.onMouseWheel = this.onMouseWheel.bind(this);\n    // this.onMouseWheel = () => onMouseWheel;\n    /**\n     * 閾値, wheel 移動量が閾値を超えたときにイベントを発生させます\n     * @type {number}\n     * @default 200\n     */\n    this.threshold = threshold;\n    /**\n     * wheelDelta 移動量が閾値を超えるかをチェックするための積算計算変数\n     * @type {number}\n     */\n    this.moved = 0;\n    // /**\n    //  * start flag\n    //  * @type {boolean}\n    //  */\n    // this.started = false;\n    // const events = {\n    //   up: new WheelEvents(Wheel.UP, this),\n    //   down: new WheelEvents(Wheel.DOWN, this),\n    // };\n    /**\n     * UP / DOWN Events instance\n     * @returns {{up: WheelEvents, down: WheelEvents, update: WheelEvents}} UP / DOWN Events instance\n     */\n    this.events = {\n      up: new WheelEvents(Wheel.UP, this, this),\n      down: new WheelEvents(Wheel.DOWN, this, this),\n      update: new WheelEvents(Wheel.UPDATE, this, this),\n    };\n\n    // 設定済み instance を返します\n    // return this;\n  }\n  // // ----------------------------------------\n  // // EVENT\n  // // ----------------------------------------\n  // /**\n  //  * wheel up で発生するイベントを取得します\n  //  * @event UP\n  //  * @returns {string} event, wheelUp を返します\n  //  * @default wheelUp\n  //  */\n  // static get UP() {\n  //   return 'wheelUp';\n  // }\n  // /**\n  //  * wheel  で発生するイベントを取得します\n  //  * @event DOWN\n  //  * @returns {string} event, wheelUp を返します\n  //  * @default wheelUp\n  //  */\n  // static get DOWN() {\n  //   return 'wheelDown';\n  // }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 移動量積算 property を `0` にします\n   */\n  reset() {\n    this.moved = 0;\n  }\n  /**\n   * mousewheel event を監視します\n   * @returns {Wheel} method chain 可能なように instance を返します\n   */\n  start() {\n    // if (this.started) {\n    //   return this;\n    // }\n    // this.started = true;\n    // this.unwatch();\n    this.stop();\n    this.reset();\n    window.addEventListener('wheel', this.onMouseWheel, false);\n    return this;\n  }\n  /**\n   * mousewheel event を監視を止めます\n   * @returns {Wheel} method chain 可能なように instance を返します\n   */\n  stop() {\n    // if (!this.started) {\n    //   return this;\n    // }\n    // this.started = false;\n    window.removeEventListener('wheel', this.onMouseWheel);\n    return this;\n  }\n  /**\n   * window mousewheel event handler\n   * <p>delta 値を取得し `this.moving` を実行します</p>\n   *\n   * @listens {WheelEvent} WheelEvent.wheel\n   * @param {WheelEvent} event window wheel event\n   * @returns {number} 前回移動量に delta 値 を加算した値を返します\n   */\n  onMouseWheel(event) {\n    const wheelDelta = event.deltaY;\n    return this.moving(wheelDelta);\n  }\n  /**\n   * mouse delta から移動量を計算します\n   * @param {number} delta mouse delta 値\n   * @returns {number} 前回移動量に delta 値 を加算した値を返します\n   */\n  moving(delta) {\n    /**\n     * 移動量が閾値を超えるかをチェックするための計算変数\n     * @type {number}\n     */\n    this.moved += delta;\n    // @type {number}\n    const moved = this.moved;\n\n    // 0 check\n    if (moved === 0) {\n      // 移動量が 0 なので処理をしない\n      return moved;\n    }\n\n    // 閾値チェック\n    if (Math.abs(moved) >= this.threshold) {\n      // scroll event を発火します\n      this.update(moved);\n      // down / up\n      if (moved > 0) {\n        // scroll up\n        this.up(moved);\n      } else {\n        this.down(moved);\n      }\n\n      // initialize moved, 発火後に積算移動変数を初期化します\n      // this.moved = 0;\n      this.reset();\n      return moved;\n    }\n    // 閾値を超えていないので処理をしない\n    return moved;\n  }\n  /**\n   * scroll up イベントを発火します\n   * @param {number} moved 移動量\n   * @returns {number} 加算移動量を返します\n   */\n  up(moved) {\n    // @type {Events}\n    const events = this.events.up;\n    events.moved = moved;\n    this.dispatch(events);\n\n    return moved;\n  }\n  /**\n   * scroll down イベントを発火します\n   * @param {number} moved 移動量\n   * @returns {number} 加算移動量を返します\n   */\n  down(moved) {\n    // @type {Events}\n    const events = this.events.down;\n    events.moved = moved;\n    this.dispatch(events);\n\n    return moved;\n  }\n  /**\n   * scroll update イベントを発火します\n   * @param {number} moved 移動量\n   * @returns {number} 加算移動量を返します\n   */\n  update(moved) {\n    // @type {Events}\n    const events = this.events.update;\n    events.moved = moved;\n    this.dispatch(events);\n\n    return moved;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/Wheel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "class",
    "name": "Wheel",
    "memberof": "src/event/Wheel.js",
    "static": true,
    "longname": "src/event/Wheel.js~Wheel",
    "access": "public",
    "export": true,
    "importPath": "./src/event/Wheel.js",
    "importStyle": "Wheel",
    "description": "mousewheel event を監視し通知を行います\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst wheel = new Wheel();\nwheel.threshold = 500;\nwheel.start();\n```",
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 417,
    "kind": "member",
    "name": "UP",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": true,
    "longname": "src/event/Wheel.js~Wheel.UP",
    "access": "public",
    "description": "wheel up で発生するイベント - wheelUp",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 418,
    "kind": "member",
    "name": "DOWN",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": true,
    "longname": "src/event/Wheel.js~Wheel.DOWN",
    "access": "public",
    "description": "wheel down で発生するイベント - wheelDown",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": true,
    "longname": "src/event/Wheel.js~Wheel.UPDATE",
    "access": "public",
    "description": "wheel move で発生するイベント - wheelUpdate",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 420,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#constructor",
    "access": "public",
    "description": "wheel event を管理します",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "200",
        "defaultRaw": 200,
        "name": "threshold",
        "description": "閾値 - event を発生させる移動量(px)"
      }
    ]
  },
  {
    "__docId__": 422,
    "kind": "member",
    "name": "threshold",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#threshold",
    "access": "public",
    "description": "閾値, wheel 移動量が閾値を超えたときにイベントを発生させます",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "200"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "moved",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#moved",
    "access": "public",
    "description": "wheelDelta 移動量が閾値を超えるかをチェックするための積算計算変数",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 424,
    "kind": "member",
    "name": "events",
    "memberof": "src/event/Wheel.js~Wheel",
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#events",
    "access": "public",
    "description": "UP / DOWN Events instance",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{up: WheelEvents, down: WheelEvents, update: WheelEvents}} UP / DOWN Events instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{up: WheelEvents, down: WheelEvents, update: WheelEvents}"
      ],
      "spread": false,
      "description": "UP / DOWN Events instance"
    },
    "type": {
      "types": [
        "{\"up\": *, \"down\": *, \"update\": *}"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "reset",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#reset",
    "access": "public",
    "description": "移動量積算 property を `0` にします ",
    "lineNumber": 165,
    "params": [],
    "return": null
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "start",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#start",
    "access": "public",
    "description": "mousewheel event を監視します ",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "stop",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#stop",
    "access": "public",
    "description": "mousewheel event を監視を止めます ",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} method chain 可能なように instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 429,
    "kind": "method",
    "name": "onMouseWheel",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#onMouseWheel",
    "access": "public",
    "description": "window mousewheel event handler\n<p>delta 値を取得し `this.moving` を実行します</p> ",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 前回移動量に delta 値 を加算した値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "WheelEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window wheel event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "前回移動量に delta 値 を加算した値を返します"
    },
    "listens": [
      {
        "types": [
          "WheelEvent"
        ],
        "description": "WheelEvent.wheel"
      }
    ]
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "moving",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#moving",
    "access": "public",
    "description": "mouse delta から移動量を計算します ",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 前回移動量に delta 値 を加算した値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "mouse delta 値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "前回移動量に delta 値 を加算した値を返します"
    }
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "up",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#up",
    "access": "public",
    "description": "scroll up イベントを発火します ",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 加算移動量を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "移動量"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "加算移動量を返します"
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "down",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#down",
    "access": "public",
    "description": "scroll down イベントを発火します ",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 加算移動量を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "移動量"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "加算移動量を返します"
    }
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "update",
    "memberof": "src/event/Wheel.js~Wheel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Wheel.js~Wheel#update",
    "access": "public",
    "description": "scroll update イベントを発火します ",
    "lineNumber": 278,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 加算移動量を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "移動量"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "加算移動量を返します"
    }
  },
  {
    "__docId__": 435,
    "kind": "file",
    "name": "src/event/events/DragEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/09/30 - 18:19\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../Events';\n\n/**\n * drag events\n * @since v0.4.4\n */\nexport default class DragEvents extends Events {\n  /**\n   * drag events\n   * @param {string} type event type\n   * @param {*} currentTarget currentTarget instance\n   * @param {*} target target instance\n   * @param {number} x drag px\n   */\n  constructor(type, currentTarget, target, x) {\n    super(type, currentTarget, target);\n    /**\n     * drag px\n     * @type {number}\n     */\n    this.x = x;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/DragEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 436,
    "kind": "class",
    "name": "DragEvents",
    "memberof": "src/event/events/DragEvents.js",
    "static": true,
    "longname": "src/event/events/DragEvents.js~DragEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/DragEvents.js",
    "importStyle": "DragEvents",
    "description": "drag events",
    "lineNumber": 19,
    "since": "v0.4.4",
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 437,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/DragEvents.js~DragEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/DragEvents.js~DragEvents#constructor",
    "access": "public",
    "description": "drag events",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "currentTarget instance"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "target instance"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "drag px"
      }
    ]
  },
  {
    "__docId__": 438,
    "kind": "member",
    "name": "x",
    "memberof": "src/event/events/DragEvents.js~DragEvents",
    "static": false,
    "longname": "src/event/events/DragEvents.js~DragEvents#x",
    "access": "public",
    "description": "drag px",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "src/event/events/ResizingEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/04 - 18:02\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\nimport ScrollEvents from './ScrollEvents';\n\n/**\n * {@link Resizing} Events\n */\nexport default class ResizingEvents extends ScrollEvents {\n  /**\n   * {@link Resizing} Events\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    // -----\n    /**\n     * body clientWidth\n     * @type {number}\n     */\n    this.bodyWidth = 0;\n    /**\n     * body clientHeight\n     * @type {number}\n     */\n    this.bodyHeight = 0;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/ResizingEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "class",
    "name": "ResizingEvents",
    "memberof": "src/event/events/ResizingEvents.js",
    "static": true,
    "longname": "src/event/events/ResizingEvents.js~ResizingEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/ResizingEvents.js",
    "importStyle": "ResizingEvents",
    "description": "{@link Resizing} Events",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/event/events/ScrollEvents.js~ScrollEvents"
    ]
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/ResizingEvents.js~ResizingEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/ResizingEvents.js~ResizingEvents#constructor",
    "access": "public",
    "description": "{@link Resizing} Events",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "bodyWidth",
    "memberof": "src/event/events/ResizingEvents.js~ResizingEvents",
    "static": false,
    "longname": "src/event/events/ResizingEvents.js~ResizingEvents#bodyWidth",
    "access": "public",
    "description": "body clientWidth",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "bodyHeight",
    "memberof": "src/event/events/ResizingEvents.js~ResizingEvents",
    "static": false,
    "longname": "src/event/events/ResizingEvents.js~ResizingEvents#bodyHeight",
    "access": "public",
    "description": "body clientHeight",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 444,
    "kind": "file",
    "name": "src/event/events/RisingEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/02 - 15:02\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../Events';\n\n/**\n * {@link Rising} Events\n */\nexport default class RisingEvents extends Events {\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    // ---\n    /**\n     * 衝突判定, true: 衝突\n     * @type {boolean}\n     */\n    this.hit = false;\n    /**\n     * original event\n     * @type {?Event|*}\n     */\n    this.original = null;\n    /**\n     * ClientRect\n     * @type {?ClientRect}\n     */\n    this.offset = null;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/RisingEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "class",
    "name": "RisingEvents",
    "memberof": "src/event/events/RisingEvents.js",
    "static": true,
    "longname": "src/event/events/RisingEvents.js~RisingEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/RisingEvents.js",
    "importStyle": "RisingEvents",
    "description": "{@link Rising} Events",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 446,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/RisingEvents.js~RisingEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/RisingEvents.js~RisingEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 447,
    "kind": "member",
    "name": "hit",
    "memberof": "src/event/events/RisingEvents.js~RisingEvents",
    "static": false,
    "longname": "src/event/events/RisingEvents.js~RisingEvents#hit",
    "access": "public",
    "description": "衝突判定, true: 衝突",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 448,
    "kind": "member",
    "name": "original",
    "memberof": "src/event/events/RisingEvents.js~RisingEvents",
    "static": false,
    "longname": "src/event/events/RisingEvents.js~RisingEvents#original",
    "access": "public",
    "description": "original event",
    "lineNumber": 40,
    "type": {
      "nullable": true,
      "types": [
        "Event",
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 449,
    "kind": "member",
    "name": "offset",
    "memberof": "src/event/events/RisingEvents.js~RisingEvents",
    "static": false,
    "longname": "src/event/events/RisingEvents.js~RisingEvents#offset",
    "access": "public",
    "description": "ClientRect",
    "lineNumber": 45,
    "type": {
      "nullable": true,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 450,
    "kind": "file",
    "name": "src/event/events/ScrollEvents.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/20 - 10:54\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../Events';\n\n/**\n * {@link Scroll} Events\n */\nexport default class ScrollEvents extends Events {\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    /**\n     * scroll top 前回位置(px)\n     * @type {number}\n     */\n    this.previous = -1;\n    /**\n     * オリジナルイベント(window.onscroll)\n     * @type {?Events|Event}\n     */\n    this.original = null;\n    /**\n     * scroll top 現在位置(px)\n     * @type {number}\n     */\n    this.y = 0;\n    /**\n     * window innerHeight\n     * @type {number}\n     */\n    this.height = 0;\n    /**\n     * window innerWidth\n     * @type {number}\n     */\n    this.width = 0;\n    /**\n     * window 下端位置(scroll top + window height)\n     * @type {number}\n     */\n    this.bottom = 0;\n    /**\n     * scroll top 位置が前回と違うかを表すフラッグ, true: 違う\n     * @type {boolean}\n     */\n    this.changed = false;\n    /**\n     * UP / DOWN と前回からの移動距離(px), 正(+): scroll down\n     * @type {number}\n     */\n    this.moving = 0;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/ScrollEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 451,
    "kind": "class",
    "name": "ScrollEvents",
    "memberof": "src/event/events/ScrollEvents.js",
    "static": true,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/ScrollEvents.js",
    "importStyle": "ScrollEvents",
    "description": "{@link Scroll} Events",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 452,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "previous",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#previous",
    "access": "public",
    "description": "scroll top 前回位置(px)",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "original",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#original",
    "access": "public",
    "description": "オリジナルイベント(window.onscroll)",
    "lineNumber": 39,
    "type": {
      "nullable": true,
      "types": [
        "Events",
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "y",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#y",
    "access": "public",
    "description": "scroll top 現在位置(px)",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "height",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#height",
    "access": "public",
    "description": "window innerHeight",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "width",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#width",
    "access": "public",
    "description": "window innerWidth",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "bottom",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#bottom",
    "access": "public",
    "description": "window 下端位置(scroll top + window height)",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "changed",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#changed",
    "access": "public",
    "description": "scroll top 位置が前回と違うかを表すフラッグ, true: 違う",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "moving",
    "memberof": "src/event/events/ScrollEvents.js~ScrollEvents",
    "static": false,
    "longname": "src/event/events/ScrollEvents.js~ScrollEvents#moving",
    "access": "public",
    "description": "UP / DOWN と前回からの移動距離(px), 正(+): scroll down",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "src/event/events/TouchingEvents.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * TouchingEvents\n */\n\n// events\nimport Events from '../Events';\n\n// util\nimport Vectors from '../../util/Vectors';\n\n/**\n * {@link Touching} Events\n */\nexport default class TouchingEvents extends Events {\n  /**\n   * Touching events object 各プロパティを設定します\n   * @param {string} type event type\n   * @param {*} target イベント発生インスタンス\n   * @param {Event} origin 発生時のオリジナルイベント\n   * @param {Vectors} current 現在の位置\n   * @param {Vectors} between 前回位置との差\n   * @param {boolean} scrolling scroll したかの真偽値, true: scroll している\n   */\n  constructor(\n    type,\n    target,\n    origin,\n    current = new Vectors(),\n    between = new Vectors(),\n    scrolling = false) {\n    // super\n    super(type, target);\n    /**\n     * 発生時のオリジナルイベント\n     * @type {Event}\n     */\n    this.origin = origin;\n    /**\n     * 現在の位置\n     * @type {Vectors}\n     */\n    this.current = current;\n    /**\n     * 前回位置との差\n     * @type {Vectors}\n     */\n    this.between = between;\n    /**\n     * scroll したかの真偽値\n     * @type {boolean}\n     */\n    this.scrolling = scrolling;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/TouchingEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "class",
    "name": "TouchingEvents",
    "memberof": "src/event/events/TouchingEvents.js",
    "static": true,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/TouchingEvents.js",
    "importStyle": "TouchingEvents",
    "description": "{@link Touching} Events",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 463,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/TouchingEvents.js~TouchingEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents#constructor",
    "access": "public",
    "description": "Touching events object 各プロパティを設定します",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "発生時のオリジナルイベント"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "current",
        "description": "現在の位置"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "between",
        "description": "前回位置との差"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "scrolling",
        "description": "scroll したかの真偽値, true: scroll している"
      }
    ]
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "origin",
    "memberof": "src/event/events/TouchingEvents.js~TouchingEvents",
    "static": false,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents#origin",
    "access": "public",
    "description": "発生時のオリジナルイベント",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "current",
    "memberof": "src/event/events/TouchingEvents.js~TouchingEvents",
    "static": false,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents#current",
    "access": "public",
    "description": "現在の位置",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "between",
    "memberof": "src/event/events/TouchingEvents.js~TouchingEvents",
    "static": false,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents#between",
    "access": "public",
    "description": "前回位置との差",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "scrolling",
    "memberof": "src/event/events/TouchingEvents.js~TouchingEvents",
    "static": false,
    "longname": "src/event/events/TouchingEvents.js~TouchingEvents#scrolling",
    "access": "public",
    "description": "scroll したかの真偽値",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 468,
    "kind": "file",
    "name": "src/event/events/WheelEvents.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/20 - 12:11\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../Events';\n\n/**\n * {@link Wheel} Events, mouse wheel で発生するイベントを管理します\n */\nexport default class WheelEvents extends Events {\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    /**\n     * 移動距離(px)\n     * @type {number}\n     */\n    this.moved = 0;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/event/events/WheelEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 469,
    "kind": "class",
    "name": "WheelEvents",
    "memberof": "src/event/events/WheelEvents.js",
    "static": true,
    "longname": "src/event/events/WheelEvents.js~WheelEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/event/events/WheelEvents.js",
    "importStyle": "WheelEvents",
    "description": "{@link Wheel} Events, mouse wheel で発生するイベントを管理します",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 470,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/events/WheelEvents.js~WheelEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/events/WheelEvents.js~WheelEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "moved",
    "memberof": "src/event/events/WheelEvents.js~WheelEvents",
    "static": false,
    "longname": "src/event/events/WheelEvents.js~WheelEvents#moved",
    "access": "public",
    "description": "移動距離(px)",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "src/moku.js",
    "content": "/*!\n * Copyright (c) inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/06/30 - 17:54\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * @@version\n * @@buildTime\n */\n// use strict は本来不要でエラーになる\n// 無いと webpack.optimize.UglifyJsPlugin がコメントを全部削除するので記述する\n/* eslint strict: [0, \"global\"] */\n\n'use strict';\n\n// // fetch / promise\n// import 'whatwg-fetch';\n// import Promise from 'promise-polyfill';\n// // for IE\n// import 'babel-polyfill';\n\n// polyfill\n// - babel-polyfill\n// - requestAnimationFrame\n// - promise-polyfill\n// - whatwg-fetch\nimport './polyfill/';\n\n// event\nimport EventDispatcher from './event/EventDispatcher';\nimport Events from './event/Events';\nimport Rising from './event/Rising';\nimport Scroll from './event/Scroll';\nimport Scrolling from './event/Scrolling';\nimport Touching from './event/Touching';\nimport Wheel from './event/Wheel';\nimport Resizing from './event/Resizing';\nimport ResizingSingle from './event/ResizingSingle';\nimport Swipe from './event/Swipe';\nimport NativeResizing from './event/NativeResizing';\nimport NativeResizingSingle from './event/NativeResizingSingle';\n\n// net\nimport Ajax from './net/Ajax';\nimport Cookie from './net/Cookie';\nimport Queries from './net/Queries';\nimport AjaxThunk from './net/AjaxThunk';\n\n// tick\nimport Cycle from './tick/Cycle';\nimport Fps from './tick/Fps';\nimport Polling from './tick/Polling';\nimport Rate from './tick/Rate';\n\n// util\nimport Type from './util/Type';\nimport Hit from './util/Hit';\nimport List from './util/List';\nimport Text from './util/Text';\nimport Times from './util/Times';\nimport Vectors from './util/Vectors';\nimport Iro from './util/Iro';\n\n// css\nimport Patterns from './css/Patterns';\nimport Style from './css/Style';\n\n// device\nimport Can from './device/Can';\nimport devices from './device/devices';\n\n// device/os\nimport Android from './device/os/Android';\nimport Windows from './device/os/Windows';\nimport iOS from './device/os/iOS';\n\n// device/browser\nimport Chrome from './device/browser/Chrome';\nimport CriOS from './device/browser/CriOS';\nimport Edge from './device/browser/Edge';\nimport Firefox from './device/browser/Firefox';\nimport FxiOS from './device/browser/FxiOS';\nimport IE from './device/browser/IE';\nimport Safari from './device/browser/Safari';\n\n// dom\nimport Bounding from './dom/Bounding';\nimport Classes from './dom/Classes';\nimport Elements from './dom/Elements';\n\n// // ----------------------------------------------\n// // promise\n// // Promise: To add to window\n// if (!window.Promise) {\n//   window.Promise = Promise;\n// }\n\n/**\n * **MOKU**\n * <p>global Object</p>\n * <p>public な Class はここからアクセス可能です</p>\n * @type {Object}\n */\nconst MOKU = {};\n/**\n * version number を取得します\n * @returns {string} version number を返します\n */\nMOKU.version = () => '@@version';\n/**\n * build 日時を取得します\n * @returns {string}  build 日時を返します\n */\nMOKU.build = () => '@@buildTime';\n/**\n * MOKU.event\n * @type {Object} MOKU.event object を返します\n */\nMOKU.event = {\n  EventDispatcher,\n  Events,\n  Rising,\n  Scroll,\n  Wheel,\n  Scrolling,\n  Touching,\n  Resizing,\n  ResizingSingle,\n  Swipe,\n  NativeResizing,\n  NativeResizingSingle,\n};\n/**\n * MOKU.net\n * @type {Object} MOKU.net object を返します\n */\nMOKU.net = {\n  Ajax,\n  Cookie,\n  Queries,\n  AjaxThunk,\n};\n/**\n * MOKU.tick\n * @type {Object} MOKU.tick object を返します\n */\nMOKU.tick = {\n  Cycle,\n  Fps,\n  Polling,\n  Rate,\n};\n/**\n * MOKU.util\n * @type {Object} MOKU.util object を返します\n */\nMOKU.util = {\n  Type,\n  List,\n  Text,\n  Times,\n  Vectors,\n  Hit,\n  Iro,\n};\n/**\n * MOKU.util\n * @type {Object} MOKU.css object を返します\n */\nMOKU.css = {\n  Patterns,\n  Style,\n  Can,\n};\n/**\n * MOKU.util\n * @type {Object} MOKU.dom object を返します\n */\nMOKU.dom = {\n  Bounding,\n  Classes,\n  Elements,\n};\n\nMOKU.device = {\n  Can,\n  devices,\n  os: {\n    Android,\n    Windows,\n    iOS,\n  },\n  browser: {\n    Chrome,\n    CriOS,\n    Edge,\n    Firefox,\n    FxiOS,\n    IE,\n    Safari,\n  },\n};\n\n// export\n/**\n * global object `MOKU`\n * @type {Object}\n */\nwindow.MOKU = MOKU;\n\nexport default MOKU;\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/moku.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "variable",
    "name": "MOKU",
    "memberof": "src/moku.js",
    "static": true,
    "longname": "src/moku.js~MOKU",
    "access": "public",
    "export": true,
    "importPath": "./src/moku.js",
    "importStyle": "MOKU",
    "description": "**MOKU**\n<p>global Object</p>\n<p>public な Class はここからアクセス可能です</p>",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 474,
    "kind": "file",
    "name": "src/net/Ajax.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/01 - 19:41\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport Type from '../util/Type';\n\n// built-in function\n// Safari, IE はサポートしていないのでライブラリを使用すること\n/**\n * fetch [native code]\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\n * @type {fetch}\n * @private\n * @static\n */\nconst fetch = self.fetch;\n/**\n * fetch request instance を作成します\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n * @type {Request}\n * @private\n * @static\n */\nconst Request = self.Request;\n\n/**\n * <p>fetch API を使用し Ajax request を行います</p>\n * <p>Safari, IE はサポートしていないので polyfill ライブラリを使用します<br>\n * また、 fetch は Promise も必要としています。</p>\n *\n * ```\n * $ bower install fetch\n *\n * $ bower install es6-promise\n * ```\n *\n * thunk friendly - ES2017 async / await するために\n * - fetch Promise を返すように変更\n * - resolve / reject argument をオプション\n * - fetch.then から result / error を return\n *\n * [caution] resolve / reject を使用しない場合は {@link AjaxThunk} を使用する方が効率的です\n * @example\n * const ajax = new Ajax();\n * // async / await 1\n * async function request() {\n *  const json = await thunk.start('https://jsonplaceholder.typicode.com/posts');\n *  const pre = document.getElementById('pre');\n *  pre.innerHTML = JSON.stringify(json);\n * }\n * request();\n * // async / await 2\n * async function request() {\n *  return await thunk.start('https://jsonplaceholder.typicode.com/posts');\n * }\n * request()\n *  .then(json => {\n *    const pre = document.getElementById('pre');\n *    pre.innerHTML = JSON.stringify(json);\n *  });\n * // resolve / reject\n * const resolve = (json) => {\n *  const pre = document.getElementById('pre');\n *  pre.innerHTML = JSON.stringify(json);\n * };\n * const reject = (error) => {};\n * const ajax = new Ajax(resolve, reject);\n * ajax.start('https://jsonplaceholder.typicode.com/posts');\n *\n * @see http://caniuse.com/#feat=fetch\n * @see https://github.com/github/fetch\n * @see https://github.com/taylorhakes/promise-polyfill\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Headers\n * @see https://developer.mozilla.org/ja/docs/Web/API/Body\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n * @see http://getmesh.io/Blog/Make%20AJAX-Requests%20Great%20Again\n * @since 0.3.4 - Thunk friendly\n */\nexport default class Ajax {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * <p>fetch API へ送るオプションを作成します</p>\n   *\n   * 必ず設定します\n   * - method: GET, POST, PUT, DELETE...etc\n   * - cache: 'no-cache'\n   * - credentials: 'same-origin'\n   *\n   * headers, formData は存在すれば option に追加されます\n   *\n   * ```\n   * var myRequest = new Request(input, init);\n   * ```\n   * <blockquote>\n   * リクエストに適用するカスタム設定を含むオプションオブジェクト。設定可能なオプションは：\n   *   method：リクエストメソッド、たとえば GET、POST。\n   *   headers：Headers オブジェクトか ByteString を含む、リクエストに追加するヘッダー。\n   *   body： リクエストに追加するボディー：Blob か BufferSource、FormData、URLSearchParams、USVString オブジェクトが使用できる。リクエストが GET か HEAD メソッドを使用している場合、ボディーを持てないことに注意。\n   *   mode：リクエストで使用するモード。たとえば、cors か no-cors、same-origin。既定値は cors。Chrome では、47 以前は no-cors が既定値であり、 same-origin は 47 から使用できるようになった。\n   *   credentials：リクエストで使用するリクエスト credential：omit か same-origin、include が使用できる。 既定値は omit。Chrome では、47 以前は same-origin が既定値であり、include は 47 から使用できるようになった。\n   *   cache：リクエストで使用する cache モード：default か no-store、reload、no-cache、force-cache、only-if-cached が設定できる。\n   *   redirect：使用するリダイレクトモード：follow か error、manual が使用できる。Chrome では、47 以前は既定値が follow であり、manual は 47 から使用できるようになった。\n   *   referrer：no-referrer か client、URL を指定する USVString。既定値は client。\n   * </blockquote>\n   * @param {string|USVString|Request} path Ajax request path\n   * @param {string} method GET, POST, PUT, DELETE...etc request method\n   * @param {Headers|Object|null} headers Headers option\n   * @param {FormData|null} formData 送信フォームデータオプション\n   * @returns {*|Request} fetch API へ送る Request instance を返します\n   *\n   * @see https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n   * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n   * @see https://developer.mozilla.org/ja/docs/Web/API/Request/Request\n   */\n  option(path, method, headers, formData) {\n    // request option\n    const option = Object.assign({}, this.props);\n    // const option = Object.create({\n    //   method,\n    //   cache: 'no-cache',\n    //   // https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n    //   credentials: 'same-origin',\n    // });\n    option.method = method;\n\n    // headers option\n    if (Type.exist(headers)) {\n      option.headers = headers;\n    }\n\n    // body へ FormData をセット\n    if (Type.exist(formData)) {\n      option.body = formData;\n    }\n\n    // https://developer.mozilla.org/ja/docs/Web/API/Request\n    return new Request(path, option);\n  }\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * request 可能 / 不可能 flag を true に設定します\n   * @param {?function} [resolve=null] Promise success callback\n   * @param {?function} [reject=null] Promise fail callback\n   */\n  constructor(resolve = null, reject = null) {\n    /**\n     * request 可能 / 不可能 flag, true: 実行可能\n     * @type {boolean}\n     */\n    this.can = true;\n    /**\n     * Promise success callback\n     * @type {Function}\n     */\n    this.resolve = resolve;\n    /**\n     * Promise fail callback\n     * @type {Function}\n     */\n    this.reject = reject;\n    /**\n     * `Request` constructor に渡す option\n     * - method: GET|POST|PUT|DELETE...\n     * - cache: no-cache\n     * - credentials: same-origin\n     * @type {{method: ?string, cache: string, credentials: string}}\n     * @see https://developer.mozilla.org/ja/docs/Web/API/Request/Request\n     */\n    this.props = {\n      method: null,\n      cache: 'no-cache',\n      // https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n      credentials: 'same-origin',\n    };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * <p>Ajax request 開始します</p>\n   * <p>request 可能 / 不可能 flag が false の時は実行しません<br>\n   * true の時は false にしリクエストを開始します</p>\n   *\n   * from v0.3.4\n   * - resolve, reject 関数確認後実行します\n   * - Promise instance を返します\n   * - json / error を返します\n   *\n   * @param {string} path Ajax request path\n   * @param {string} [method=GET] GET, POST, PUT, DELETE...etc request method\n   * @param {?Headers} [headers=null] Headers option, token などを埋め込むのに使用します\n   * @param {?FormData} [formData=null] フォームデータを送信するのに使用します\n   * @return {Promise} ajax request を開始し fetch Promise 返します\n   */\n  start(path, method = 'GET', headers = null, formData = null) {\n    // ajax request 開始\n    if (!this.can) {\n      throw new Error(`Ajax request busy: ${this.can}`);\n    }\n\n    // flag off\n    this.disable();\n\n    // @type {Request} Request instance\n    const request = this.option(path, method, headers, formData);\n\n    // fetch start\n    return fetch(request)\n    // @param {Object} response - Ajax response\n      .then((response) => {\n        // may be success\n        if (response.status !== 200) {\n          throw new Error(`Ajax status error: (${response.status})`);\n        }\n        return response.json();\n      })\n      // @param {Object} - JSON パース済み Object\n      .then((json) => {\n        // complete event fire\n        if (Type.method(this.resolve)) {\n          this.resolve(json);\n        }\n        // flag true\n        this.enable();\n        return json;\n      })\n      // @param {Error} - Ajax something error\n      .catch((error) => {\n        // error event fire\n        if (Type.method(this.reject)) {\n          this.reject(error);\n        }\n        // flag true\n        this.enable();\n        return error;\n      });\n  }\n  /**\n   * 実行可否 flag を true にします\n   * @returns {boolean} 現在の this.can property を返します\n   */\n  enable() {\n    this.can = true;\n    return this.can;\n  }\n  /**\n   * 実行可否 flag を false にします\n   * @returns {boolean} 現在の this.can property を返します\n   */\n  disable() {\n    this.can = false;\n    return this.can;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/net/Ajax.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 475,
    "kind": "variable",
    "name": "fetch",
    "memberof": "src/net/Ajax.js",
    "static": true,
    "longname": "src/net/Ajax.js~fetch",
    "access": "private",
    "export": false,
    "importPath": "./src/net/Ajax.js",
    "importStyle": null,
    "description": "fetch [native code]",
    "see": [
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch"
    ],
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "fetch"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 476,
    "kind": "variable",
    "name": "Request",
    "memberof": "src/net/Ajax.js",
    "static": true,
    "longname": "src/net/Ajax.js~Request",
    "access": "private",
    "export": false,
    "importPath": "./src/net/Ajax.js",
    "importStyle": null,
    "description": "fetch request instance を作成します",
    "see": [
      "https://developer.mozilla.org/ja/docs/Web/API/Request"
    ],
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Request"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 477,
    "kind": "class",
    "name": "Ajax",
    "memberof": "src/net/Ajax.js",
    "static": true,
    "longname": "src/net/Ajax.js~Ajax",
    "access": "public",
    "export": true,
    "importPath": "./src/net/Ajax.js",
    "importStyle": "Ajax",
    "description": "<p>fetch API を使用し Ajax request を行います</p>\n<p>Safari, IE はサポートしていないので polyfill ライブラリを使用します<br>\nまた、 fetch は Promise も必要としています。</p>\n\n```\n$ bower install fetch\n\n$ bower install es6-promise\n```\n\nthunk friendly - ES2017 async / await するために\n- fetch Promise を返すように変更\n- resolve / reject argument をオプション\n- fetch.then から result / error を return\n\n[caution] resolve / reject を使用しない場合は {@link AjaxThunk} を使用する方が効率的です",
    "examples": [
      "const ajax = new Ajax();\n// async / await 1\nasync function request() {\n const json = await thunk.start('https://jsonplaceholder.typicode.com/posts');\n const pre = document.getElementById('pre');\n pre.innerHTML = JSON.stringify(json);\n}\nrequest();\n// async / await 2\nasync function request() {\n return await thunk.start('https://jsonplaceholder.typicode.com/posts');\n}\nrequest()\n .then(json => {\n   const pre = document.getElementById('pre');\n   pre.innerHTML = JSON.stringify(json);\n });\n// resolve / reject\nconst resolve = (json) => {\n const pre = document.getElementById('pre');\n pre.innerHTML = JSON.stringify(json);\n};\nconst reject = (error) => {};\nconst ajax = new Ajax(resolve, reject);\najax.start('https://jsonplaceholder.typicode.com/posts');"
    ],
    "see": [
      "http://caniuse.com/#feat=fetch",
      "https://github.com/github/fetch",
      "https://github.com/taylorhakes/promise-polyfill",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API",
      "https://developer.mozilla.org/ja/docs/Web/API/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Request/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Headers",
      "https://developer.mozilla.org/ja/docs/Web/API/Body",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
      "http://getmesh.io/Blog/Make%20AJAX-Requests%20Great%20Again"
    ],
    "lineNumber": 93,
    "since": "0.3.4 - Thunk friendly",
    "interface": false
  },
  {
    "__docId__": 478,
    "kind": "method",
    "name": "option",
    "memberof": "src/net/Ajax.js~Ajax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#option",
    "access": "public",
    "description": "<p>fetch API へ送るオプションを作成します</p>\n\n必ず設定します\n- method: GET, POST, PUT, DELETE...etc\n- cache: 'no-cache'\n- credentials: 'same-origin'\n\nheaders, formData は存在すれば option に追加されます\n\n```\nvar myRequest = new Request(input, init);\n```\n<blockquote>\nリクエストに適用するカスタム設定を含むオプションオブジェクト。設定可能なオプションは：\n  method：リクエストメソッド、たとえば GET、POST。\n  headers：Headers オブジェクトか ByteString を含む、リクエストに追加するヘッダー。\n  body： リクエストに追加するボディー：Blob か BufferSource、FormData、URLSearchParams、USVString オブジェクトが使用できる。リクエストが GET か HEAD メソッドを使用している場合、ボディーを持てないことに注意。\n  mode：リクエストで使用するモード。たとえば、cors か no-cors、same-origin。既定値は cors。Chrome では、47 以前は no-cors が既定値であり、 same-origin は 47 から使用できるようになった。\n  credentials：リクエストで使用するリクエスト credential：omit か same-origin、include が使用できる。 既定値は omit。Chrome では、47 以前は same-origin が既定値であり、include は 47 から使用できるようになった。\n  cache：リクエストで使用する cache モード：default か no-store、reload、no-cache、force-cache、only-if-cached が設定できる。\n  redirect：使用するリダイレクトモード：follow か error、manual が使用できる。Chrome では、47 以前は既定値が follow であり、manual は 47 から使用できるようになった。\n  referrer：no-referrer か client、URL を指定する USVString。既定値は client。\n</blockquote> ",
    "see": [
      "https://developers.google.com/web/updates/2015/03/introduction-to-fetch ",
      "https://developer.mozilla.org/ja/docs/Web/API/Request ",
      "https://developer.mozilla.org/ja/docs/Web/API/Request/Request "
    ],
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|Request} fetch API へ送る Request instance を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "USVString",
          "Request"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ajax request path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "GET, POST, PUT, DELETE...etc request method"
      },
      {
        "nullable": null,
        "types": [
          "Headers",
          "Object",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": "Headers option"
      },
      {
        "nullable": null,
        "types": [
          "FormData",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "formData",
        "description": "送信フォームデータオプション"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "Request"
      ],
      "spread": false,
      "description": "fetch API へ送る Request instance を返します"
    }
  },
  {
    "__docId__": 479,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/Ajax.js~Ajax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#constructor",
    "access": "public",
    "description": "request 可能 / 不可能 flag を true に設定します",
    "lineNumber": 163,
    "params": [
      {
        "nullable": true,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "resolve",
        "description": "Promise success callback"
      },
      {
        "nullable": true,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "reject",
        "description": "Promise fail callback"
      }
    ]
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "can",
    "memberof": "src/net/Ajax.js~Ajax",
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#can",
    "access": "public",
    "description": "request 可能 / 不可能 flag, true: 実行可能",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "resolve",
    "memberof": "src/net/Ajax.js~Ajax",
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#resolve",
    "access": "public",
    "description": "Promise success callback",
    "lineNumber": 173,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "reject",
    "memberof": "src/net/Ajax.js~Ajax",
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#reject",
    "access": "public",
    "description": "Promise fail callback",
    "lineNumber": 178,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 483,
    "kind": "member",
    "name": "props",
    "memberof": "src/net/Ajax.js~Ajax",
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#props",
    "access": "public",
    "description": "`Request` constructor に渡す option\n- method: GET|POST|PUT|DELETE...\n- cache: no-cache\n- credentials: same-origin",
    "see": [
      "https://developer.mozilla.org/ja/docs/Web/API/Request/Request"
    ],
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "{method: ?string, cache: string, credentials: string}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "start",
    "memberof": "src/net/Ajax.js~Ajax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#start",
    "access": "public",
    "description": "<p>Ajax request 開始します</p>\n<p>request 可能 / 不可能 flag が false の時は実行しません<br>\ntrue の時は false にしリクエストを開始します</p>\n\nfrom v0.3.4\n- resolve, reject 関数確認後実行します\n- Promise instance を返します\n- json / error を返します ",
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ajax request path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "GET",
        "defaultRaw": "GET",
        "name": "method",
        "description": "GET, POST, PUT, DELETE...etc request method"
      },
      {
        "nullable": true,
        "types": [
          "Headers"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "headers",
        "description": "Headers option, token などを埋め込むのに使用します"
      },
      {
        "nullable": true,
        "types": [
          "FormData"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "formData",
        "description": "フォームデータを送信するのに使用します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "ajax request を開始し fetch Promise 返します"
    }
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "enable",
    "memberof": "src/net/Ajax.js~Ajax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#enable",
    "access": "public",
    "description": "実行可否 flag を true にします ",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 現在の this.can property を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "現在の this.can property を返します"
    },
    "params": []
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "disable",
    "memberof": "src/net/Ajax.js~Ajax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Ajax.js~Ajax#disable",
    "access": "public",
    "description": "実行可否 flag を false にします ",
    "lineNumber": 268,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 現在の this.can property を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "現在の this.can property を返します"
    },
    "params": []
  },
  {
    "__docId__": 489,
    "kind": "file",
    "name": "src/net/AjaxThunk.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/05 - 21:26\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Ajax from './Ajax';\n\n/**\n * fetch API を使用し Ajax request を行います, ref: {@link Ajax}\n * @example\n * const ajax = new Ajax();\n * // async / await 1\n * async function request() {\n *  const json = await thunk.start('https://jsonplaceholder.typicode.com/posts');\n *  const pre = document.getElementById('pre');\n *  pre.innerHTML = JSON.stringify(json);\n * }\n * request();\n * // async / await 2\n * async function request() {\n *  return await thunk.start('https://jsonplaceholder.typicode.com/posts');\n * }\n * request()\n *  .then(json => {\n *    const pre = document.getElementById('pre');\n *    pre.innerHTML = JSON.stringify(json);\n *  });\n * @see http://caniuse.com/#feat=fetch\n * @see https://github.com/github/fetch\n * @see https://github.com/taylorhakes/promise-polyfill\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Headers\n * @see https://developer.mozilla.org/ja/docs/Web/API/Body\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n * @see http://getmesh.io/Blog/Make%20AJAX-Requests%20Great%20Again\n * @since 0.3.4\n */\nexport default class AjaxThunk extends Ajax {\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * <p>Ajax request 開始します</p>\n   * <p>request 可能 / 不可能 flag が false の時は実行しません<br>\n   * true の時は false にしリクエストを開始します</p>\n   *\n   * - resolve, reject 関数確認後実行します\n   * - Promise instance を返します\n   * - json / error を返します\n   *\n   * @param {string} path Ajax request path\n   * @param {string} [method=GET] GET, POST, PUT, DELETE...etc request method\n   * @param {?Headers} [headers=null] Headers option, token などを埋め込むのに使用します\n   * @param {?FormData} [formData=null] フォームデータを送信するのに使用します\n   * @return {Promise} ajax request を開始し fetch Promise 返します\n   */\n  start(path, method = 'GET', headers = null, formData = null) {\n    // ajax request 開始\n    if (!this.can) {\n      throw new Error(`Ajax request busy: ${this.can}`);\n    }\n\n    // flag off\n    this.disable();\n\n    // @type {Request} Request instance\n    const request = this.option(path, method, headers, formData);\n\n    // fetch start\n    return fetch(request)\n    // @param {Object} response - Ajax response\n      .then((response) => {\n        // may be success\n        if (response.status !== 200) {\n          throw new Error(`Ajax status error: (${response.status})`);\n        }\n        return response.json();\n      });\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/net/AjaxThunk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 490,
    "kind": "class",
    "name": "AjaxThunk",
    "memberof": "src/net/AjaxThunk.js",
    "static": true,
    "longname": "src/net/AjaxThunk.js~AjaxThunk",
    "access": "public",
    "export": true,
    "importPath": "./src/net/AjaxThunk.js",
    "importStyle": "AjaxThunk",
    "description": "fetch API を使用し Ajax request を行います, ref: {@link Ajax}",
    "examples": [
      "const ajax = new Ajax();\n// async / await 1\nasync function request() {\n const json = await thunk.start('https://jsonplaceholder.typicode.com/posts');\n const pre = document.getElementById('pre');\n pre.innerHTML = JSON.stringify(json);\n}\nrequest();\n// async / await 2\nasync function request() {\n return await thunk.start('https://jsonplaceholder.typicode.com/posts');\n}\nrequest()\n .then(json => {\n   const pre = document.getElementById('pre');\n   pre.innerHTML = JSON.stringify(json);\n });"
    ],
    "see": [
      "http://caniuse.com/#feat=fetch",
      "https://github.com/github/fetch",
      "https://github.com/taylorhakes/promise-polyfill",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API",
      "https://developer.mozilla.org/ja/docs/Web/API/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Request/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Headers",
      "https://developer.mozilla.org/ja/docs/Web/API/Body",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
      "http://getmesh.io/Blog/Make%20AJAX-Requests%20Great%20Again"
    ],
    "lineNumber": 49,
    "since": "0.3.4",
    "interface": false,
    "extends": [
      "src/net/Ajax.js~Ajax"
    ]
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "start",
    "memberof": "src/net/AjaxThunk.js~AjaxThunk",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/AjaxThunk.js~AjaxThunk#start",
    "access": "public",
    "description": "<p>Ajax request 開始します</p>\n<p>request 可能 / 不可能 flag が false の時は実行しません<br>\ntrue の時は false にしリクエストを開始します</p>\n\n- resolve, reject 関数確認後実行します\n- Promise instance を返します\n- json / error を返します ",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ajax request path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "GET",
        "defaultRaw": "GET",
        "name": "method",
        "description": "GET, POST, PUT, DELETE...etc request method"
      },
      {
        "nullable": true,
        "types": [
          "Headers"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "headers",
        "description": "Headers option, token などを埋め込むのに使用します"
      },
      {
        "nullable": true,
        "types": [
          "FormData"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "formData",
        "description": "フォームデータを送信するのに使用します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "ajax request を開始し fetch Promise 返します"
    }
  },
  {
    "__docId__": 492,
    "kind": "file",
    "name": "src/net/Cookie.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/16 - 14:45\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// --------------------------------\n// copy [native code]\n/**\n * copy [native code] - decodeURIComponent\n * @type {function}\n */\nconst decodeURIComponent = self.decodeURIComponent;\n/**\n * copy [native code] - encodeURIComponent\n * @type {function}\n */\nconst encodeURIComponent = self.encodeURIComponent;\n/**\n * copy [native code] - RegExp\n * @type {function}\n */\nconst RegExp = self.RegExp;\n\n/**\n * cookie を取得・保存・削除します\n */\nexport default class Cookie {\n  /**\n   * cookie を処理します\n   *\n   * インスタンスは key 毎に作成します\n   * @param {string} keyName cookie key\n   * @param {?Date} [endValue=null] cookie end Date instance, null の時はプラウザ `quit` で削除されます\n   * @param {string} [defaultPath='/'] cookie path\n   * @param {string} [defaultDomain=''] cookie domain\n   * @param {boolean} [secureSetting=false] true: https 通信のときのみ、クッキーが送信されます\n   */\n  constructor(\n    keyName,\n    endValue = null,\n    defaultPath = '/',\n    defaultDomain = '',\n    secureSetting = false,\n  ) {\n    let key = keyName;\n    let end = endValue;\n    let path = defaultPath;\n    let domain = defaultDomain;\n    let secure = secureSetting;\n\n    /**\n     * cookie key を取得します\n     * @returns {string} cookie key を返します\n     */\n    this.key = () => key;\n    /**\n     * cookie key を設定します\n     * @param {string} setting 設定する key name\n     */\n    this.setKey = (setting) => { key = setting; };\n    /**\n     * cookie end を取得します\n     * @returns {?Date} cookie end Date instance\n     */\n    this.end = () => end;\n    /**\n     * cookie end を設定します\n     * @param {Date} setting cookie end Date instance\n     */\n    this.setEnd = (setting) => { end = setting; };\n    /**\n     * cookie path を取得します\n     * @returns {string} cookie path を返します\n     */\n    this.path = () => path;\n    /**\n     * cookie path を設定します\n     * @param {string} setting 設定する path name\n     */\n    this.setPath = (setting) => { path = setting; };\n    /**\n     * cookie domain を取得します\n     * @returns {string} cookie domain を返します\n     */\n    this.domain = () => domain;\n    /**\n     * cookie domain を設定します\n     * @param {string} setting 設定する domain name\n     */\n    this.setDomain = (setting) => { domain = setting; };\n    /**\n     * https 通信のときのみクッキー送信を行うかのフラッグを取得します\n     * @returns {boolean} https 通信のときのみクッキー送信を行うかのフラッグ\n     */\n    this.secure = () => secure;\n    /**\n     * https 通信のときのみクッキー送信を行うかのフラッグを設定します\n     * @param {boolean} setting https 通信のときのみクッキー送信を行うかのフラッグ\n     */\n    this.setSecure = (setting) => { secure = setting; };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * cookie value を取得します\n   * @returns {string|null} cookie value を返します\n   */\n  get() {\n    return Cookie.get(this.key());\n  }\n\n  /**\n   * cookie value を設定します\n   * @param {string} value cookie value\n   * @param {?Date} [end=null] cookie end Date instance, null の時はプラウザ `quit` で削除されます\n   * @param {string} [path='/'] cookie path\n   * @param {string} [domain=''] cookie domain\n   * @param {boolean} [secure=false] true: https 通信のときのみ、クッキーが送信されます\n   * @returns {string} 設定した cookie 文字列\n   */\n  set(value, end = this.end(), path = this.path(), domain = this.domain(), secure = this.secure()) {\n    return Cookie.set(this.key(), value, end, path, domain, secure);\n  }\n  /**\n   * cookie を削除します\n   * @returns {boolean} true: cookie 削除成功\n   */\n  remove() {\n    return Cookie.remove(this.key());\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * cookie value を取得します\n   * @param {string} key 取得する cookie key 名称\n   * @returns {string|null} cookie value\n   */\n  static get(key) {\n    const cookie = document.cookie;\n    const escapeKey = encodeURIComponent(key).replace(/[-.+*]/g, '\\\\$&');\n    const exp = new RegExp(`(?:(?:^|.*;)\\\\s*${escapeKey}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`);\n    return decodeURIComponent(cookie.replace(exp, '$1')) || null;\n  }\n  /**\n   * cookie value を設定します\n   * @param {string} key cookie key\n   * @param {string} value cookie value\n   * @param {?Date} [end=null] cookie end date Date instance\n   * @param {string} [path=/] cookie path\n   * @param {string} [domain=''] cookie domain\n   * @param {boolean} [secure=false] true: https 通信のときのみ、クッキーが送信されます\n   * @returns {string} 設定した cookie 文字列\n   */\n  static set(key, value, end = null, path = '/', domain = '', secure = false) {\n    let cookie = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n    if (end) {\n      cookie += `; expires=${end.toUTCString()}`;\n    }\n    if (path) {\n      cookie += `; path=${path}`;\n    }\n    if (domain) {\n      cookie += `; domain=${domain}`;\n    }\n    if (secure) {\n      cookie += '; secure';\n    }\n    document.cookie = cookie;\n    return cookie;\n  }\n  /**\n   * cookie を削除します\n   *\n   * 現在時間より前の時刻を設定します\n   * @param {string} key cookie key\n   * @returns {boolean} true: 削除成功\n   */\n  static remove(key) {\n    if (Cookie.has(key)) {\n      Cookie.set(key, '', new Date());\n      return true;\n    }\n    return false;\n  }\n  /**\n   * cookie key が存在するかを調べます\n   * @param {string} key cookie key\n   * @returns {boolean} true: cookie key が存在します\n   */\n  static has(key) {\n    return Cookie.get(key) !== null;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/net/Cookie.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "variable",
    "name": "decodeURIComponent",
    "memberof": "src/net/Cookie.js",
    "static": true,
    "longname": "src/net/Cookie.js~decodeURIComponent",
    "access": "public",
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": "copy [native code] - decodeURIComponent",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 494,
    "kind": "variable",
    "name": "encodeURIComponent",
    "memberof": "src/net/Cookie.js",
    "static": true,
    "longname": "src/net/Cookie.js~encodeURIComponent",
    "access": "public",
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": "copy [native code] - encodeURIComponent",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 495,
    "kind": "variable",
    "name": "RegExp",
    "memberof": "src/net/Cookie.js",
    "static": true,
    "longname": "src/net/Cookie.js~RegExp",
    "access": "public",
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": "copy [native code] - RegExp",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 496,
    "kind": "class",
    "name": "Cookie",
    "memberof": "src/net/Cookie.js",
    "static": true,
    "longname": "src/net/Cookie.js~Cookie",
    "access": "public",
    "export": true,
    "importPath": "./src/net/Cookie.js",
    "importStyle": "Cookie",
    "description": "cookie を取得・保存・削除します",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 497,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#constructor",
    "access": "public",
    "description": "cookie を処理します\n\nインスタンスは key 毎に作成します",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "cookie key"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "endValue",
        "description": "cookie end Date instance, null の時はプラウザ `quit` で削除されます"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'/'",
        "defaultRaw": "'/'",
        "name": "defaultPath",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "defaultDomain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secureSetting",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ]
  },
  {
    "__docId__": 498,
    "kind": "member",
    "name": "key",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#key",
    "access": "public",
    "description": "cookie key を取得します",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie key を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie key を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "member",
    "name": "setKey",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#setKey",
    "access": "public",
    "description": "cookie key を設定します",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する key name"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "member",
    "name": "end",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#end",
    "access": "public",
    "description": "cookie end を取得します",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?Date} cookie end Date instance"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "cookie end Date instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "member",
    "name": "setEnd",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#setEnd",
    "access": "public",
    "description": "cookie end を設定します",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "cookie end Date instance"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "member",
    "name": "path",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#path",
    "access": "public",
    "description": "cookie path を取得します",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie path を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie path を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "member",
    "name": "setPath",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#setPath",
    "access": "public",
    "description": "cookie path を設定します",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する path name"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 504,
    "kind": "member",
    "name": "domain",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#domain",
    "access": "public",
    "description": "cookie domain を取得します",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie domain を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie domain を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "member",
    "name": "setDomain",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#setDomain",
    "access": "public",
    "description": "cookie domain を設定します",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する domain name"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "member",
    "name": "secure",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#secure",
    "access": "public",
    "description": "https 通信のときのみクッキー送信を行うかのフラッグを取得します",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} https 通信のときのみクッキー送信を行うかのフラッグ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "https 通信のときのみクッキー送信を行うかのフラッグ"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "member",
    "name": "setSecure",
    "memberof": "src/net/Cookie.js~Cookie",
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#setSecure",
    "access": "public",
    "description": "https 通信のときのみクッキー送信を行うかのフラッグを設定します",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "https 通信のときのみクッキー送信を行うかのフラッグ"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "get",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#get",
    "access": "public",
    "description": "cookie value を取得します ",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} cookie value を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "cookie value を返します"
    },
    "params": []
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "set",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#set",
    "access": "public",
    "description": "cookie value を設定します ",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した cookie 文字列 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "cookie value"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "end",
        "description": "cookie end Date instance, null の時はプラウザ `quit` で削除されます"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'/'",
        "defaultRaw": "'/'",
        "name": "path",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "domain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secure",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した cookie 文字列"
    }
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "remove",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Cookie.js~Cookie#remove",
    "access": "public",
    "description": "cookie を削除します ",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: cookie 削除成功 "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: cookie 削除成功"
    },
    "params": []
  },
  {
    "__docId__": 511,
    "kind": "method",
    "name": "get",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Cookie.js~Cookie.get",
    "access": "public",
    "description": "cookie value を取得します ",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} cookie value "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "取得する cookie key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "cookie value"
    }
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "set",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Cookie.js~Cookie.set",
    "access": "public",
    "description": "cookie value を設定します ",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した cookie 文字列 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "cookie value"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "end",
        "description": "cookie end date Date instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "/",
        "defaultRaw": "/",
        "name": "path",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "domain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secure",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した cookie 文字列"
    }
  },
  {
    "__docId__": 513,
    "kind": "method",
    "name": "remove",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Cookie.js~Cookie.remove",
    "access": "public",
    "description": "cookie を削除します\n\n現在時間より前の時刻を設定します ",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 削除成功 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 削除成功"
    }
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "has",
    "memberof": "src/net/Cookie.js~Cookie",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Cookie.js~Cookie.has",
    "access": "public",
    "description": "cookie key が存在するかを調べます ",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: cookie key が存在します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: cookie key が存在します"
    }
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "src/net/Queries.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/23\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\nimport Text from '../util/Text';\n\n/**\n * URL query をパースします\n */\nexport default class Queries {\n  /**\n   * URL query を受取パースします\n   * @param {string} [queryString=location.search] パースする URL 文字列\n   */\n  constructor(queryString = window.location.search) {\n    const [data, keys] = Queries.parse(queryString);\n    const naked = Queries.naked(queryString);\n    /**\n     * query key を取得します - query key array\n     * @type {Array<string>}\n     */\n    this.keys = keys;\n    /**\n     * key: value 形式を取得します - URL query を key: value 形式で返します\n     * @type {Object}\n     */\n    this.data = data;\n    /**\n     * query 文字列を取得します - パースする query 文字列\n     * @type {string}\n     */\n    this.queryString = queryString;\n    /**\n     * パースしやすいように正規化した query 文字列 - `?` 以降文字 + `&amp;` を `&` へ置換えます\n     * @type {string}\n     */\n    this.naked = naked;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * key が存在するかを調べます\n   * @param {string} keyName 調査対象 key 名称\n   * @returns {boolean} true: 存在する\n   */\n  has(keyName) {\n    return this.keys.indexOf(keyName) !== -1;\n  }\n  /**\n   * key 値を取得します\n   * @param {string} keyName 調査対象 key 名称\n   * @returns {string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します\n   */\n  get(keyName) {\n    return this.data[keyName];\n  }\n  /**\n   * key: value 形式を取得します\n   * @returns {Object} URL query を key: value 形式で返します\n   */\n  getAll() {\n    return this.data;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  // /**\n  //  * `&amp;` を `&` へ置換えます\n  //  * @param {string} targetText 操作対象文字列\n  //  * @returns {string} `&amp;` を `&` へ置換え返します\n  //  */\n  // static amp(targetText) {\n  //   return targetText.split('&amp;').join('&');\n  // }\n  /**\n   * 文字列先頭に `?` があればそれ以降の文字列を返し {@link Text.and} を実行し `&amp;` を `&` 変換します\n   * @param {string} targetText 操作対象文字列\n   * @returns {string} query を正規化します\n   */\n  static naked(targetText) {\n    // const queryString = Queries.amp(targetText);\n    const queryString = Text.and(targetText);\n    return queryString.substr(0, 1) === '?' ? queryString.substring(1) : targetText;\n  }\n  /**\n   * query を kye: value 形式にします\n   * @param {string} targetText 操作対象文字列\n   * @returns {[Object, Array]} data, keys を返します\n   */\n  static parse(targetText) {\n    const query = Queries.naked(targetText);\n    const pairs = query.split('&');\n    const data = {};\n    const keys = [];\n    pairs.map((pair) => {\n      let keyName = '';\n      if (pair && pair.indexOf('=') !== -1) {\n        // @type {Array<string>} - `key=value` を `=` で分割する\n        const keyValue = pair.split('=');\n        // @type {string} keyName\n        const key = keyValue.shift();\n        // data object へ keyName を key に値をセットする\n        data[key] = keyValue.shift();\n        keyName = key;\n        // key 名称配列へ追加する\n        keys.push(key);\n      }\n      return keyName;\n    });\n\n    return [data, keys];\n  }\n  /**\n   * 引数 targetText (query) から引数 keyName 値を取得します\n   * @param {string} keyName key 名称\n   * @param {string} targetText query\n   * @returns {string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します\n   */\n  static get(keyName, targetText = window.location.search) {\n    const [data] = Queries.parse(targetText);\n    return data[keyName];\n  }\n  /**\n   * URL query の key: value 形式を取得します\n   * @param {string} targetText query\n   * @returns {[Object, Array]} URL query を key: value 形式で返します\n   */\n  static getAll(targetText = window.location.search) {\n    // const [data] = Queries.parse(targetText);\n    return Queries.parse(targetText);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/net/Queries.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "class",
    "name": "Queries",
    "memberof": "src/net/Queries.js",
    "static": true,
    "longname": "src/net/Queries.js~Queries",
    "access": "public",
    "export": true,
    "importPath": "./src/net/Queries.js",
    "importStyle": "Queries",
    "description": "URL query をパースします",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 517,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Queries.js~Queries#constructor",
    "access": "public",
    "description": "URL query を受取パースします",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "location.search",
        "defaultRaw": "location.search",
        "name": "queryString",
        "description": "パースする URL 文字列"
      }
    ]
  },
  {
    "__docId__": 518,
    "kind": "member",
    "name": "keys",
    "memberof": "src/net/Queries.js~Queries",
    "static": false,
    "longname": "src/net/Queries.js~Queries#keys",
    "access": "public",
    "description": "query key を取得します - query key array",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 519,
    "kind": "member",
    "name": "data",
    "memberof": "src/net/Queries.js~Queries",
    "static": false,
    "longname": "src/net/Queries.js~Queries#data",
    "access": "public",
    "description": "key: value 形式を取得します - URL query を key: value 形式で返します",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 520,
    "kind": "member",
    "name": "queryString",
    "memberof": "src/net/Queries.js~Queries",
    "static": false,
    "longname": "src/net/Queries.js~Queries#queryString",
    "access": "public",
    "description": "query 文字列を取得します - パースする query 文字列",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 521,
    "kind": "member",
    "name": "naked",
    "memberof": "src/net/Queries.js~Queries",
    "static": false,
    "longname": "src/net/Queries.js~Queries#naked",
    "access": "public",
    "description": "パースしやすいように正規化した query 文字列 - `?` 以降文字 + `&amp;` を `&` へ置換えます",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "has",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Queries.js~Queries#has",
    "access": "public",
    "description": "key が存在するかを調べます ",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 存在する "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "調査対象 key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 存在する"
    }
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "get",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Queries.js~Queries#get",
    "access": "public",
    "description": "key 値を取得します ",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "調査対象 key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "見つかると文字列で返します, 見つからない時は undefined を返します"
    }
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "getAll",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/net/Queries.js~Queries#getAll",
    "access": "public",
    "description": "key: value 形式を取得します ",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} URL query を key: value 形式で返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "URL query を key: value 形式で返します"
    },
    "params": []
  },
  {
    "__docId__": 525,
    "kind": "method",
    "name": "naked",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Queries.js~Queries.naked",
    "access": "public",
    "description": "文字列先頭に `?` があればそれ以降の文字列を返し {@link Text.and} を実行し `&amp;` を `&` 変換します ",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} query を正規化します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "query を正規化します"
    }
  },
  {
    "__docId__": 526,
    "kind": "method",
    "name": "parse",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Queries.js~Queries.parse",
    "access": "public",
    "description": "query を kye: value 形式にします ",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Object, Array]} data, keys を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Object, Array]"
      ],
      "spread": false,
      "description": "data, keys を返します"
    }
  },
  {
    "__docId__": 527,
    "kind": "method",
    "name": "get",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Queries.js~Queries.get",
    "access": "public",
    "description": "引数 targetText (query) から引数 keyName 値を取得します ",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "key 名称"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "見つかると文字列で返します, 見つからない時は undefined を返します"
    }
  },
  {
    "__docId__": 528,
    "kind": "method",
    "name": "getAll",
    "memberof": "src/net/Queries.js~Queries",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/net/Queries.js~Queries.getAll",
    "access": "public",
    "description": "URL query の key: value 形式を取得します ",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Object, Array]} URL query を key: value 形式で返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Object, Array]"
      ],
      "spread": false,
      "description": "URL query を key: value 形式で返します"
    }
  },
  {
    "__docId__": 529,
    "kind": "file",
    "name": "src/polyfill/index.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 18:25\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// babel polyfill\nimport './method/babel';\n\n// promise\nimport './method/promise';\n\n// fetch\nimport './method/fetch';\n\nimport animationFrame from './method/animationFrame';\n\n// ------------------------------------------------\nanimationFrame();\n\n/**\n * 以下全てを読み込みます、一部だけ必要な時は個別に `import` します\n * - babel-polyfill - `./method/babel`\n *   - IE, Symbol 対応できない問題を解決するために...\n *   - https://babeljs.io/docs/usage/polyfill/\n *   - https://github.com/babel/babel-preset-env/issues/203\n *   - `babel-preset-env includes plugins by default. To include polyfill you need:, specify useBuiltIns: true in presets options (see more), include import \"babel-polyfill\" to your codebase.`\n * - promise-polyfill - `./method/promise`\n *   - https://github.com/taylorhakes/promise-polyfill\n *   - https://developers.google.com/web/fundamentals/getting-started/primers/promises\n *   - Chrome 32、Opera 19、Firefox 29、Safari 8、および Microsoft Edge - enabled\n * - whatwg-fetch - `./method/fetch`\n *   - https://github.com/whatwg/fetch\n *   - https://fetch.spec.whatwg.org/\n *   - https://github.github.io/fetch/\n * - animationFrame - `./method/animationFrame`\n *   - Android 4.3 以下, requestAnimationFrame 未実装なので polyfill する\n * @type {{animationFrame: function}}\n */\nconst polyfill = {\n  animationFrame,\n};\n\nexport default polyfill;\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/polyfill/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "polyfill",
    "memberof": "src/polyfill/index.js",
    "static": true,
    "longname": "src/polyfill/index.js~polyfill",
    "access": "public",
    "export": true,
    "importPath": "./src/polyfill/index.js",
    "importStyle": "polyfill",
    "description": "以下全てを読み込みます、一部だけ必要な時は個別に `import` します\n- babel-polyfill - `./method/babel`\n  - IE, Symbol 対応できない問題を解決するために...\n  - https://babeljs.io/docs/usage/polyfill/\n  - https://github.com/babel/babel-preset-env/issues/203\n  - `babel-preset-env includes plugins by default. To include polyfill you need:, specify useBuiltIns: true in presets options (see more), include import \"babel-polyfill\" to your codebase.`\n- promise-polyfill - `./method/promise`\n  - https://github.com/taylorhakes/promise-polyfill\n  - https://developers.google.com/web/fundamentals/getting-started/primers/promises\n  - Chrome 32、Opera 19、Firefox 29、Safari 8、および Microsoft Edge - enabled\n- whatwg-fetch - `./method/fetch`\n  - https://github.com/whatwg/fetch\n  - https://fetch.spec.whatwg.org/\n  - https://github.github.io/fetch/\n- animationFrame - `./method/animationFrame`\n  - Android 4.3 以下, requestAnimationFrame 未実装なので polyfill する",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "{animationFrame: function}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 531,
    "kind": "file",
    "name": "src/polyfill/method/animationFrame.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/28 - 18:26\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Android 4.3 以下\n * requestAnimationFrame 未実装なので polyfill する\n * babel-preset-env 補完しない？\n */\nconst animationFrame = () => {\n  // native code check\n  if (self.requestAnimationFrame && self.cancelAnimationFrame) {\n    return;\n  }\n  // vendor prefix\n  const vendors = ['ms', 'moz', 'webkit', 'o'];\n  // add vendor prefix\n  vendors.some((prefix) => {\n    self.requestAnimationFrame = self[`${prefix}RequestAnimationFrame`];\n    self.cancelAnimationFrame = self[`${prefix}CancelAnimationFrame`] ||\n      self[`${prefix}CancelRequestAnimationFrame`];\n    // return false;\n    return !!self.requestAnimationFrame;\n  });\n  // ------------------------------------------------\n  // still check\n  if (!self.requestAnimationFrame) {\n    let lastTime = 0;\n    self.requestAnimationFrame = (callback) => {\n      const currentTime = new Date().getTime();\n      const timeToCall = Math.max(0, 16 - (currentTime - lastTime));\n      const id = setTimeout(() => {\n        callback(currentTime + timeToCall);\n      }, timeToCall);\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n  if (!self.cancelAnimationFrame) {\n    self.cancelAnimationFrame = (id) => {\n      clearTimeout(id);\n    };\n  }\n};\n\nexport default animationFrame;\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/polyfill/method/animationFrame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 532,
    "kind": "function",
    "name": "animationFrame",
    "memberof": "src/polyfill/method/animationFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/polyfill/method/animationFrame.js~animationFrame",
    "access": "public",
    "export": true,
    "importPath": "./src/polyfill/method/animationFrame.js",
    "importStyle": "animationFrame",
    "description": "Android 4.3 以下\nrequestAnimationFrame 未実装なので polyfill する\nbabel-preset-env 補完しない？",
    "lineNumber": 18,
    "params": [],
    "return": null
  },
  {
    "__docId__": 533,
    "kind": "file",
    "name": "src/polyfill/method/babel.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/29 - 14:02\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// IE\n// Symbol 対応できない問題を解決するために...\n// @see https://babeljs.io/docs/usage/polyfill/\n// @see https://github.com/babel/babel-preset-env/issues/203\n// IE 11 Symbol is not defined #203\n// ```\n// babel-preset-env includes plugins by default. To include polyfill you need:\n// specify useBuiltIns: true in presets options (see more)\n// include import \"babel-polyfill\" to your codebase.\n// ```\nimport 'babel-polyfill';\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/polyfill/method/babel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 534,
    "kind": "file",
    "name": "src/polyfill/method/fetch.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/29 - 14:06\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// @see https://github.com/whatwg/fetch\n// @see https://fetch.spec.whatwg.org/\n// @see https://github.github.io/fetch/\nimport 'whatwg-fetch';\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/polyfill/method/fetch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 535,
    "kind": "file",
    "name": "src/polyfill/method/promise.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/08/29 - 14:05\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// @see https://github.com/taylorhakes/promise-polyfill\n// @see https://developers.google.com/web/fundamentals/getting-started/primers/promises\n// > Chrome 32、Opera 19、Firefox 29、Safari 8、および Microsoft Edge - enabled\nimport Promise from 'promise-polyfill';\n\n/**\n * Promise 未実装ブラウザへ polyfill します\n * - Chrome 32、Opera 19、Firefox 29、Safari 8、および Microsoft Edge - enabled\n * @see https://github.com/taylorhakes/promise-polyfill\n * @see https://developers.google.com/web/fundamentals/getting-started/primers/promises\n */\nconst activate = () => {\n  // Promise: To add to window\n  if (!window.Promise) {\n    window.Promise = Promise;\n  }\n};\n\nactivate();\n\nexport default activate;\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/polyfill/method/promise.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 536,
    "kind": "function",
    "name": "activate",
    "memberof": "src/polyfill/method/promise.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/polyfill/method/promise.js~activate",
    "access": "public",
    "export": true,
    "importPath": "./src/polyfill/method/promise.js",
    "importStyle": "activate",
    "description": "Promise 未実装ブラウザへ polyfill します\n- Chrome 32、Opera 19、Firefox 29、Safari 8、および Microsoft Edge - enabled",
    "see": [
      "https://github.com/taylorhakes/promise-polyfill",
      "https://developers.google.com/web/fundamentals/getting-started/primers/promises"
    ],
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 537,
    "kind": "file",
    "name": "src/tick/Cycle.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/03\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport EventDispatcher from '../event/EventDispatcher';\n// import Events from '../event/Events';\n\n// tick/events\nimport CycleEvents from './events/CycleEvents';\n\n/**\n * new を許可しないための Symbol\n * @type {Symbol}\n * @private\n */\nconst singletonSymbol = Symbol('singleton instance');\n/**\n * singleton instance, nullable\n * @type {?Cycle}\n * @private\n */\nlet instance = null;\n\n/**\n * <p>requestAnimationFrame を使用しループイベントを発生させます</p>\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const loop = Cycle.factory();\n * const update = () => {\n *  // code here, something do\n * };\n * loop.on(Cycle.UPDATE, update);\n * loop.start();\n * ```\n *\n * <p>requestAnimationFrame は tab が active(focus) な時のみ発生します</p>\n */\nexport default class Cycle extends EventDispatcher {\n  // ---------------------------------------------------\n  //  CONSTANT / EVENT\n  // ---------------------------------------------------\n  /**\n   * requestAnimationFrame 毎に発生するイベント - cycleUpdate\n   * @event UPDATE\n   * @type {string}\n   */\n  static UPDATE = 'cycleUpdate';\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Cycle instance を singleton を保証し作成します\n   * @returns {Cycle} Cycle instance を返します\n   */\n  static factory() {\n    if (instance === null) {\n      instance = new Cycle(singletonSymbol);\n    }\n    return instance;\n  }\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * singleton です\n   * @param {Symbol} checkSymbol singleton を保証するための private instance\n   * @returns {Cycle} singleton instance を返します\n   */\n  constructor(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('don\\'t use new, instead use static factory method.');\n    }\n    // instance 作成済みかをチェックし instance が null の時 this を設定します\n    if (instance !== null) {\n      return instance;\n    }\n    super();\n    // -------------------------------\n    // onetime setting\n    /**\n     * Cycle.UPDATE Events instance\n     * @type {Events}\n     */\n    this.events = new CycleEvents(Cycle.UPDATE, this, this);\n    /**\n     * bound update requestAnimationFrame callback\n     * @type {function}\n     */\n    this.onUpdate = this.onUpdate.bind(this);\n    /**\n     * requestAnimationFrame ID\n     * @type {number}\n     */\n    this.id = 0;\n    // instance 作成時に自動スタートさせる\n    this.start(checkSymbol);\n    // 設定済み instance を返します\n    return this;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * loop(requestAnimationFrame) を開始します\n   * @private\n   * @param {Symbol} checkSymbol inner method 保証する inner Symbol\n   */\n  start(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('start is private method, dont call this.');\n    }\n    this.onUpdate();\n  }\n  /**\n   * loop(cancelAnimationFrame) を止めます\n   * @param {number} [id] requestAnimationFrame id を使い cancelAnimationFrame をします\n   */\n  stop(id = this.id) {\n    cancelAnimationFrame(id);\n  }\n  // ----------------------------------------\n  // PRIVATE METHOD\n  // ----------------------------------------\n  /**\n   * loop(requestAnimationFrame)コールバック関数<br>Cycle.UPDATE event を発火します\n   * @returns {number} requestAnimationFrame ID\n   */\n  onUpdate() {\n    // @type {number} - requestAnimationFrame id\n    const id = requestAnimationFrame(this.onUpdate);\n    this.id = id;\n\n    // @type {Events} - events\n    const events = this.events;\n    events.id = id;\n    // event fire\n    this.dispatch(events);\n    return id;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/Cycle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "singletonSymbol",
    "memberof": "src/tick/Cycle.js",
    "static": true,
    "longname": "src/tick/Cycle.js~singletonSymbol",
    "access": "private",
    "export": false,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": null,
    "description": "new を許可しないための Symbol",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 539,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/tick/Cycle.js",
    "static": true,
    "longname": "src/tick/Cycle.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 32,
    "type": {
      "nullable": true,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 540,
    "kind": "class",
    "name": "Cycle",
    "memberof": "src/tick/Cycle.js",
    "static": true,
    "longname": "src/tick/Cycle.js~Cycle",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": "Cycle",
    "description": "<p>requestAnimationFrame を使用しループイベントを発生させます</p>\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst loop = Cycle.factory();\nconst update = () => {\n // code here, something do\n};\nloop.on(Cycle.UPDATE, update);\nloop.start();\n```\n\n<p>requestAnimationFrame は tab が active(focus) な時のみ発生します</p>",
    "lineNumber": 49,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 541,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/tick/Cycle.js~Cycle",
    "static": true,
    "longname": "src/tick/Cycle.js~Cycle.UPDATE",
    "access": "public",
    "description": "requestAnimationFrame 毎に発生するイベント - cycleUpdate",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "factory",
    "memberof": "src/tick/Cycle.js~Cycle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tick/Cycle.js~Cycle.factory",
    "access": "public",
    "description": "Cycle instance を singleton を保証し作成します ",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} Cycle instance を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "Cycle instance を返します"
    },
    "params": []
  },
  {
    "__docId__": 543,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/Cycle.js~Cycle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#constructor",
    "access": "public",
    "description": "singleton です",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "singleton を保証するための private instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    }
  },
  {
    "__docId__": 544,
    "kind": "member",
    "name": "events",
    "memberof": "src/tick/Cycle.js~Cycle",
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#events",
    "access": "public",
    "description": "Cycle.UPDATE Events instance",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "id",
    "memberof": "src/tick/Cycle.js~Cycle",
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#id",
    "access": "public",
    "description": "requestAnimationFrame ID",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "start",
    "memberof": "src/tick/Cycle.js~Cycle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#start",
    "access": "private",
    "description": "loop(requestAnimationFrame) を開始します ",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "inner method 保証する inner Symbol"
      }
    ],
    "return": null
  },
  {
    "__docId__": 548,
    "kind": "method",
    "name": "stop",
    "memberof": "src/tick/Cycle.js~Cycle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#stop",
    "access": "public",
    "description": "loop(cancelAnimationFrame) を止めます ",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "requestAnimationFrame id を使い cancelAnimationFrame をします"
      }
    ],
    "return": null
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/tick/Cycle.js~Cycle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Cycle.js~Cycle#onUpdate",
    "access": "public",
    "description": "loop(requestAnimationFrame)コールバック関数<br>Cycle.UPDATE event を発火します ",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} requestAnimationFrame ID "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "requestAnimationFrame ID"
    },
    "params": []
  },
  {
    "__docId__": 551,
    "kind": "file",
    "name": "src/tick/Fps.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/04 - 14:19\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\n// import Events from '../event/Events';\n\n// tick\nimport Polling from './Polling';\n\n// tick/events\nimport FpsEvents from './events/FpsEvents';\n\n/**\n * フレームレート毎に `UPDATE` イベントを発生させます\n *\n * @example\n * // 2sec. interval\n * const fps = new Fps(0.5);\n * const update = () => {\n *  // code here, something do\n * };\n * fps.on(Fps.UPDATE, update);\n * fps.start();\n * */\nexport default class Fps extends Polling {\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * フレームレート毎に発生するイベント - fpsUpdate\n   * @event UPDATE\n   * @type {string}\n   */\n  static UPDATE = 'fpsUpdate';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 引数の frame rate に合わせ UPDATE イベントを発生させます\n   * @param {number} [fps=30] frame rate, default: 30\n   */\n  constructor(fps = 30) {\n    super(1000 / fps);\n    // @type {Events} - Events\n    const events = new FpsEvents(Fps.UPDATE, this, this);\n    events.fps = fps;\n    /**\n     * Fps.UPDATE Events instance\n     * @type {Events}\n     */\n    this.events = events;\n    /**\n     * frame rate\n     * @type {number}\n     */\n    this.fps = fps;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * fps を変更します\n   * 1. プロパティ polling 変更\n   * 1. 継承 method update 実行\n   * @param {number} interval fps\n   * @returns {boolean} 継承 method `update` をコールし UPDATE event が発生すると true を返します\n   */\n  change(interval) {\n    /**\n     * polling 間隔\n     * @type {number}\n     */\n    this.interval = 1000 / interval;\n    this.fps = interval;\n    this.events.fps = interval;\n    // return this.update();\n    return this.start();\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/Fps.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 552,
    "kind": "class",
    "name": "Fps",
    "memberof": "src/tick/Fps.js",
    "static": true,
    "longname": "src/tick/Fps.js~Fps",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/Fps.js",
    "importStyle": "Fps",
    "description": "フレームレート毎に `UPDATE` イベントを発生させます",
    "examples": [
      "// 2sec. interval\nconst fps = new Fps(0.5);\nconst update = () => {\n // code here, something do\n};\nfps.on(Fps.UPDATE, update);\nfps.start();"
    ],
    "lineNumber": 34,
    "interface": false,
    "extends": [
      "src/tick/Polling.js~Polling"
    ]
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/tick/Fps.js~Fps",
    "static": true,
    "longname": "src/tick/Fps.js~Fps.UPDATE",
    "access": "public",
    "description": "フレームレート毎に発生するイベント - fpsUpdate",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 554,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/Fps.js~Fps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Fps.js~Fps#constructor",
    "access": "public",
    "description": "引数の frame rate に合わせ UPDATE イベントを発生させます",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "fps",
        "description": "frame rate, default: 30"
      }
    ]
  },
  {
    "__docId__": 555,
    "kind": "member",
    "name": "events",
    "memberof": "src/tick/Fps.js~Fps",
    "static": false,
    "longname": "src/tick/Fps.js~Fps#events",
    "access": "public",
    "description": "Fps.UPDATE Events instance",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 556,
    "kind": "member",
    "name": "fps",
    "memberof": "src/tick/Fps.js~Fps",
    "static": false,
    "longname": "src/tick/Fps.js~Fps#fps",
    "access": "public",
    "description": "frame rate",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "change",
    "memberof": "src/tick/Fps.js~Fps",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Fps.js~Fps#change",
    "access": "public",
    "description": "fps を変更します\n1. プロパティ polling 変更\n1. 継承 method update 実行 ",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 継承 method `update` をコールし UPDATE event が発生すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "fps"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "継承 method `update` をコールし UPDATE event が発生すると true を返します"
    }
  },
  {
    "__docId__": 558,
    "kind": "member",
    "name": "interval",
    "memberof": "src/tick/Fps.js~Fps",
    "static": false,
    "longname": "src/tick/Fps.js~Fps#interval",
    "access": "public",
    "description": "polling 間隔",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "src/tick/Polling.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/04 - 16:46\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport EventDispatcher from '../event/EventDispatcher';\n// import Events from '../event/Events';\n\n// tick\nimport Cycle from './Cycle';\n\n// tick/events\nimport PollingEvents from './events/PollingEvents';\n\n/**\n * 一定間隔毎に UPDATE イベントを発生させます\n *\n * @example\n * // 3sec. interval\n * const polling = new Polling(1000 * 3);\n * const update = () => {\n *  // code here, something do\n * };\n * polling.on(Polling.UPDATE, update);\n * polling.start();\n */\nexport default class Polling extends EventDispatcher {\n  // ----------------------------------------\n  // STATIC EVENT\n  // ----------------------------------------\n  /**\n   * 一定間隔(milliseconds)毎に発生するイベント - pollingUpdate\n   * @event UPDATE\n   * @type {string}\n   */\n  static UPDATE = 'pollingUpdate';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 引数の polling に合わせ UPDATE イベントを発生させます\n   * @param {number} [interval=1000] イベント発生間隔 milliseconds\n   */\n  constructor(interval = 1000) {\n    super();\n    /**\n     * Cycle instance を取得します\n     * @ty[e {Cycle}\n     */\n    this.cycle = Cycle.factory();\n    /**\n     * 間隔(ms)\n     * @type {number}\n     */\n    this.interval = interval;\n    /**\n     * bound onUpdate, Cycle.UPDATE event handler\n     * @returns {function}\n     */\n    this.onUpdate = this.onUpdate.bind(this);\n    /**\n     * Events instance - Polling.UPDATE Events object\n     * @type {Events}\n     */\n    this.events = new PollingEvents(Polling.UPDATE, this, this);\n    /**\n     * polling event 発生時間, event を発火すると 0 にリセットされます\n     * @type {number}\n     */\n    this.begin = 0;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * polling 時間を変更します<br>\n   * 1. プロパティ polling 変更\n   * 1. update 実行\n   * @param {number} interval polling 時間\n   * @returns {boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します\n   */\n  change(interval) {\n    this.interval = interval;\n    return this.start();\n  }\n  /**\n   * polling を開始します\n   * @returns {boolean} start に成功すると true を返します\n   */\n  start() {\n    // event unbind\n    this.stop();\n    // @type {number} - 開始時間\n    this.begin = Date.now();\n    this.cycle.on(Cycle.UPDATE, this.onUpdate);\n    return true;\n  }\n  /**\n   * polling を止めます\n   * @returns {boolean} stop に成功すると true を返します\n   */\n  stop() {\n    this.cycle.off(Cycle.UPDATE, this.onUpdate);\n    return true;\n  }\n  /**\n   * Cycle.UPDATE event handler, polling を計測しイベントを発火するかを判断します\n   *\n   * @listens {Cycle.UPDATE} Cycle.UPDATE が発生すると実行されます\n   * @returns {boolean} Polling.UPDATE event が発生すると true を返します\n   */\n  onUpdate() {\n    // 現在時間\n    // @type {number}\n    const present = Date.now();\n    // @type {number} - interval 間隔\n    const interval = this.interval;\n    // @type {number} - 開始時間\n    const begin = this.begin;\n    // 現在時間 が interval より大きくなったか\n    if ((present - begin) >= interval) {\n      // event 発火\n      this.fire(this.updateEvents(begin, present));\n      // 開始時間を update\n      this.begin = present;\n      // event 発生\n      return true;\n    }\n    return false;\n  }\n  // -----\n  // event create & fire\n  /**\n   * events object を発火前に作成します\n   * @param {number} begin 開始時間: 前回の発火時間\n   * @param {number} present 現在時間\n   * @returns {Events} アップデートした Events を返します\n   */\n  updateEvents(begin, present) {\n    this.begin = begin;\n    // @type {Events} - start event\n    const events = this.events;\n    events.begin = begin;\n    events.present = present;\n    events.interval = this.interval;\n    return events;\n  }\n  /**\n   * Polling.UPDATE event を発生します\n   * @param {Events} events Polling.UPDATE event object\n   * @returns {void}\n   */\n  fire(events) {\n    this.dispatch(events);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/Polling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "class",
    "name": "Polling",
    "memberof": "src/tick/Polling.js",
    "static": true,
    "longname": "src/tick/Polling.js~Polling",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/Polling.js",
    "importStyle": "Polling",
    "description": "一定間隔毎に UPDATE イベントを発生させます",
    "examples": [
      "// 3sec. interval\nconst polling = new Polling(1000 * 3);\nconst update = () => {\n // code here, something do\n};\npolling.on(Polling.UPDATE, update);\npolling.start();"
    ],
    "lineNumber": 35,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 562,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/tick/Polling.js~Polling",
    "static": true,
    "longname": "src/tick/Polling.js~Polling.UPDATE",
    "access": "public",
    "description": "一定間隔(milliseconds)毎に発生するイベント - pollingUpdate",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 563,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#constructor",
    "access": "public",
    "description": "引数の polling に合わせ UPDATE イベントを発生させます",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "interval",
        "description": "イベント発生間隔 milliseconds"
      }
    ]
  },
  {
    "__docId__": 564,
    "kind": "member",
    "name": "cycle",
    "memberof": "src/tick/Polling.js~Polling",
    "static": false,
    "longname": "src/tick/Polling.js~Polling#cycle",
    "access": "public",
    "description": "Cycle instance を取得します\n@ty[e {Cycle}",
    "lineNumber": 58,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "member",
    "name": "interval",
    "memberof": "src/tick/Polling.js~Polling",
    "static": false,
    "longname": "src/tick/Polling.js~Polling#interval",
    "access": "public",
    "description": "間隔(ms)",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 567,
    "kind": "member",
    "name": "events",
    "memberof": "src/tick/Polling.js~Polling",
    "static": false,
    "longname": "src/tick/Polling.js~Polling#events",
    "access": "public",
    "description": "Events instance - Polling.UPDATE Events object",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 568,
    "kind": "member",
    "name": "begin",
    "memberof": "src/tick/Polling.js~Polling",
    "static": false,
    "longname": "src/tick/Polling.js~Polling#begin",
    "access": "public",
    "description": "polling event 発生時間, event を発火すると 0 にリセットされます",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "change",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#change",
    "access": "public",
    "description": "polling 時間を変更します<br>\n1. プロパティ polling 変更\n1. update 実行 ",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "polling 時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`update` をコールし Polling.UPDATE event が発生すると true を返します"
    }
  },
  {
    "__docId__": 571,
    "kind": "method",
    "name": "start",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#start",
    "access": "public",
    "description": "polling を開始します ",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} start に成功すると true を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "start に成功すると true を返します"
    },
    "params": []
  },
  {
    "__docId__": 573,
    "kind": "method",
    "name": "stop",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#stop",
    "access": "public",
    "description": "polling を止めます ",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} stop に成功すると true を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "stop に成功すると true を返します"
    },
    "params": []
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#onUpdate",
    "access": "public",
    "description": "Cycle.UPDATE event handler, polling を計測しイベントを発火するかを判断します ",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Polling.UPDATE event が発生すると true を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Polling.UPDATE event が発生すると true を返します"
    },
    "listens": [
      {
        "types": [
          "Cycle.UPDATE"
        ],
        "description": "Cycle.UPDATE が発生すると実行されます"
      }
    ],
    "params": []
  },
  {
    "__docId__": 576,
    "kind": "method",
    "name": "updateEvents",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#updateEvents",
    "access": "public",
    "description": "events object を発火前に作成します ",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} アップデートした Events を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "begin",
        "description": "開始時間: 前回の発火時間"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "present",
        "description": "現在時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "アップデートした Events を返します"
    }
  },
  {
    "__docId__": 578,
    "kind": "method",
    "name": "fire",
    "memberof": "src/tick/Polling.js~Polling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Polling.js~Polling#fire",
    "access": "public",
    "description": "Polling.UPDATE event を発生します ",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "Polling.UPDATE event object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 579,
    "kind": "file",
    "name": "src/tick/Rate.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/16\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport Events from '../event/Events';\n\n// tick\nimport Polling from './Polling';\n\n/**\n * 固定値を使用し fps を決定します\n *\n * 以下のフレームレートが設定可能です\n *\n * - 60: Rate.RATE_60\n * - 30: RATE_30\n * - 20: RATE_20\n * - 15: RATE_15\n * - 12: RATE_12\n * - 10: RATE_10\n * - 6: RATE_6\n * - 5: RATE_5\n *\n * @example\n * // 1sec interval\n * const rate = new Rate(Rate.Rate_60);\n * const update = () => {\n *  // code here, something do\n * };\n * rate.on(Rate.UPDATE, update);\n * rate.start();\n */\nexport default class Rate extends Polling {\n  // ----------------------------------------\n  // CONST\n  // ----------------------------------------\n  /**\n   * fps 60 基準値\n   * @type {number}\n   */\n  static RATE_60 = 1;\n  /**\n   * fps 30 基準値\n   * @type {number}\n   */\n  static RATE_30 = 2;\n  /**\n   * fps 20 基準値\n   * @type {number}\n   */\n  static RATE_20 = 3;\n  /**\n   * fps 15 基準値\n   * @type {number}\n   */\n  static RATE_15 = 4;\n  /**\n   * fps 12 基準値\n   * @type {number}\n   */\n  static RATE_12 = 5;\n  /**\n   * fps 10 基準値\n   * @type {number}\n   */\n  static RATE_10 = 6;\n  /**\n   * fps 6 基準値\n   * @type {number}\n   */\n  static RATE_6 = 10;\n  /**\n   * fps 5 基準値\n   * @type {number}\n   */\n  static RATE_5 = 12;\n  /**\n   * fps 4 基準値\n   * @type {number}\n   */\n  static RATE_4 = 15;\n  /**\n   * fps 3 基準値\n   * @type {number}\n   */\n  static RATE_3 = 20;\n  /**\n   * fps 2 基準値\n   * @type {number}\n   */\n  static RATE_2 = 30;\n  /**\n   * fps 1 基準値\n   * @type {number}\n   */\n  static RATE_1 = 60;\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * フレームレート毎に発生するイベント - rateUpdate\n   * @event UPDATE\n   * @type {string}\n   */\n  static UPDATE = 'rateUpdate';\n  // ----------------------------------------\n  // CONSTRUCTOR\n  // ----------------------------------------\n  /**\n   * 固定値フレームレート毎に UPDATE イベントを発生させます\n   * @param {number} [rateValue=Rate.RATE_5] fps, 固定値以外設定できません\n   */\n  constructor(rateValue = Rate.RATE_5) {\n    // 60fps で polling を行う\n    super(1000 / 60);\n    // @type {Events}\n    const events = new Events(Rate.UPDATE, this, this);\n    // 設定可能な rate list\n    const rates = [\n      Rate.RATE_60,\n      Rate.RATE_30,\n      Rate.RATE_20,\n      Rate.RATE_15,\n      Rate.RATE_12,\n      Rate.RATE_10,\n      Rate.RATE_6,\n      Rate.RATE_5,\n      Rate.RATE_4,\n      Rate.RATE_3,\n      Rate.RATE_2,\n      Rate.RATE_1,\n    ];\n    /**\n     * Rate 通知 Events instance\n     * @type {Events}\n     */\n    this.events = events;\n    /**\n     * 許容可能な rate\n     * @type {Array<number>}\n     */\n    this.rates = rates;\n    /**\n     * rate count, update 毎にカウントアップします<br>\n     * 不正値の時は `Rate.RATE_5` を使用します\n     * @type {number}\n     */\n    this.count = 0;\n    // let rate = this.validate(rateValue) ? rateValue : Rate.RATE_5;\n    /**\n     * rate 値\n     * @type {?number}\n     * @default Rate.RATE_5\n     */\n    this.rate = this.validate(rateValue) ? rateValue : Rate.RATE_5;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * rate 値を設定します\n   * - 正常値: `this.rate` 更新, value を返します\n   * - 不正値: `this.rate` 更新しません, null を返します\n   * @param {number} value rate 値\n   * @returns {?number} 正しい rate は設定値を不正な時は null を返します\n   */\n  setRate(value) {\n    if (this.validate(value)) {\n      this.rate = value;\n      return value;\n    }\n    return null;\n  }\n  /**\n   * 正規な rate 値かをチェックします\n   * @param {number} rate 対象 rate\n   * @returns {boolean} 正しいと true を返します\n   */\n  validate(rate) {\n    return this.rates.indexOf(rate) !== -1;\n  }\n  /**\n   * fps 基準値を設定します\n   * @throws {Error} 引数 rate が設定可能値以外の時に例外エラーが発生します\n   * @param {number} rate fps 基準値, <br>\n   * RATE_60, RATE_30, RATE_20, RATE_15, RATE_12, RATE_10, <br>\n   * RATE_6, RATE_5, RATE_4, RATE_3, RATE_2, RATE_1 の何れかが必須です\n   * @returns {boolean} rate 設定に成功すると true を返します\n   */\n  change(rate) {\n    this.setRate(rate);\n    return this.start();\n  }\n  /**\n   * {@link Polling}.UPDATE event handler\n   *\n   * count property を `+1` 加算後設定 rate で割り算し余りが `0` の時にイベント Rate.UPDATE を発生させます\n   * @returns {boolean} Rate.UPDATE event が発生すると true を返します\n   */\n  onUpdate() {\n    // 余りが 0 の時にイベントを発火します\n    this.count += 1;\n    const reminder = this.count % this.rate;\n    if (reminder === 0) {\n      this.count = 0;\n      this.fire(this.updateEvents(0, 0));\n      return true;\n    }\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/Rate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 580,
    "kind": "class",
    "name": "Rate",
    "memberof": "src/tick/Rate.js",
    "static": true,
    "longname": "src/tick/Rate.js~Rate",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/Rate.js",
    "importStyle": "Rate",
    "description": "固定値を使用し fps を決定します\n\n以下のフレームレートが設定可能です\n\n- 60: Rate.RATE_60\n- 30: RATE_30\n- 20: RATE_20\n- 15: RATE_15\n- 12: RATE_12\n- 10: RATE_10\n- 6: RATE_6\n- 5: RATE_5",
    "examples": [
      "// 1sec interval\nconst rate = new Rate(Rate.Rate_60);\nconst update = () => {\n // code here, something do\n};\nrate.on(Rate.UPDATE, update);\nrate.start();"
    ],
    "lineNumber": 43,
    "interface": false,
    "extends": [
      "src/tick/Polling.js~Polling"
    ]
  },
  {
    "__docId__": 581,
    "kind": "member",
    "name": "RATE_60",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_60",
    "access": "public",
    "description": "fps 60 基準値",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 582,
    "kind": "member",
    "name": "RATE_30",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_30",
    "access": "public",
    "description": "fps 30 基準値",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 583,
    "kind": "member",
    "name": "RATE_20",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_20",
    "access": "public",
    "description": "fps 20 基準値",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 584,
    "kind": "member",
    "name": "RATE_15",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_15",
    "access": "public",
    "description": "fps 15 基準値",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 585,
    "kind": "member",
    "name": "RATE_12",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_12",
    "access": "public",
    "description": "fps 12 基準値",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 586,
    "kind": "member",
    "name": "RATE_10",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_10",
    "access": "public",
    "description": "fps 10 基準値",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 587,
    "kind": "member",
    "name": "RATE_6",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_6",
    "access": "public",
    "description": "fps 6 基準値",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 588,
    "kind": "member",
    "name": "RATE_5",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_5",
    "access": "public",
    "description": "fps 5 基準値",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 589,
    "kind": "member",
    "name": "RATE_4",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_4",
    "access": "public",
    "description": "fps 4 基準値",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 590,
    "kind": "member",
    "name": "RATE_3",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_3",
    "access": "public",
    "description": "fps 3 基準値",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 591,
    "kind": "member",
    "name": "RATE_2",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_2",
    "access": "public",
    "description": "fps 2 基準値",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 592,
    "kind": "member",
    "name": "RATE_1",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.RATE_1",
    "access": "public",
    "description": "fps 1 基準値",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 593,
    "kind": "member",
    "name": "UPDATE",
    "memberof": "src/tick/Rate.js~Rate",
    "static": true,
    "longname": "src/tick/Rate.js~Rate.UPDATE",
    "access": "public",
    "description": "フレームレート毎に発生するイベント - rateUpdate",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 594,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/Rate.js~Rate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Rate.js~Rate#constructor",
    "access": "public",
    "description": "固定値フレームレート毎に UPDATE イベントを発生させます",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Rate.RATE_5",
        "defaultRaw": "Rate.RATE_5",
        "name": "rateValue",
        "description": "fps, 固定値以外設定できません"
      }
    ]
  },
  {
    "__docId__": 595,
    "kind": "member",
    "name": "events",
    "memberof": "src/tick/Rate.js~Rate",
    "static": false,
    "longname": "src/tick/Rate.js~Rate#events",
    "access": "public",
    "description": "Rate 通知 Events instance",
    "lineNumber": 147,
    "type": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "rates",
    "memberof": "src/tick/Rate.js~Rate",
    "static": false,
    "longname": "src/tick/Rate.js~Rate#rates",
    "access": "public",
    "description": "許容可能な rate",
    "lineNumber": 152,
    "type": {
      "nullable": null,
      "types": [
        "Array<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "count",
    "memberof": "src/tick/Rate.js~Rate",
    "static": false,
    "longname": "src/tick/Rate.js~Rate#count",
    "access": "public",
    "description": "rate count, update 毎にカウントアップします<br>\n不正値の時は `Rate.RATE_5` を使用します",
    "lineNumber": 158,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "rate",
    "memberof": "src/tick/Rate.js~Rate",
    "static": false,
    "longname": "src/tick/Rate.js~Rate#rate",
    "access": "public",
    "description": "rate 値",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "Rate.RATE_5"
      }
    ],
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 599,
    "kind": "method",
    "name": "setRate",
    "memberof": "src/tick/Rate.js~Rate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Rate.js~Rate#setRate",
    "access": "public",
    "description": "rate 値を設定します\n- 正常値: `this.rate` 更新, value を返します\n- 不正値: `this.rate` 更新しません, null を返します ",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?number} 正しい rate は設定値を不正な時は null を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "rate 値"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "正しい rate は設定値を不正な時は null を返します"
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "validate",
    "memberof": "src/tick/Rate.js~Rate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Rate.js~Rate#validate",
    "access": "public",
    "description": "正規な rate 値かをチェックします ",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正しいと true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "対象 rate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正しいと true を返します"
    }
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "change",
    "memberof": "src/tick/Rate.js~Rate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Rate.js~Rate#change",
    "access": "public",
    "description": "fps 基準値を設定します ",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} rate 設定に成功すると true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "fps 基準値, <br>\nRATE_60, RATE_30, RATE_20, RATE_15, RATE_12, RATE_10, <br>\nRATE_6, RATE_5, RATE_4, RATE_3, RATE_2, RATE_1 の何れかが必須です"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "rate 設定に成功すると true を返します"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "引数 rate が設定可能値以外の時に例外エラーが発生します"
      }
    ]
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "onUpdate",
    "memberof": "src/tick/Rate.js~Rate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/Rate.js~Rate#onUpdate",
    "access": "public",
    "description": "{@link Polling}.UPDATE event handler\n\ncount property を `+1` 加算後設定 rate で割り算し余りが `0` の時にイベント Rate.UPDATE を発生させます ",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Rate.UPDATE event が発生すると true を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Rate.UPDATE event が発生すると true を返します"
    },
    "params": []
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "src/tick/events/CycleEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/02 - 15:42\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../../event/Events';\n\n/**\n * requestAnimationFrame を singleton 実行する {@link Cycle} Events\n */\nexport default class CycleEvents extends Events {\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    // ---\n    /**\n     * requestAnimationFrame 戻り値\n     * @type {number}\n     */\n    this.id = -1;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/events/CycleEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "class",
    "name": "CycleEvents",
    "memberof": "src/tick/events/CycleEvents.js",
    "static": true,
    "longname": "src/tick/events/CycleEvents.js~CycleEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/events/CycleEvents.js",
    "importStyle": "CycleEvents",
    "description": "requestAnimationFrame を singleton 実行する {@link Cycle} Events",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 608,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/events/CycleEvents.js~CycleEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/events/CycleEvents.js~CycleEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 609,
    "kind": "member",
    "name": "id",
    "memberof": "src/tick/events/CycleEvents.js~CycleEvents",
    "static": false,
    "longname": "src/tick/events/CycleEvents.js~CycleEvents#id",
    "access": "public",
    "description": "requestAnimationFrame 戻り値",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 610,
    "kind": "file",
    "name": "src/tick/events/FpsEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/02 - 15:42\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport PollingEvents from './PollingEvents';\n\n/**\n * {@link Fps} Events\n */\nexport default class FpsEvents extends PollingEvents {\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    // ---\n    /**\n     * fps - フレームレート値\n     * @type {number}\n     */\n    this.fps = -1;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/events/FpsEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 611,
    "kind": "class",
    "name": "FpsEvents",
    "memberof": "src/tick/events/FpsEvents.js",
    "static": true,
    "longname": "src/tick/events/FpsEvents.js~FpsEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/events/FpsEvents.js",
    "importStyle": "FpsEvents",
    "description": "{@link Fps} Events",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/tick/events/PollingEvents.js~PollingEvents"
    ]
  },
  {
    "__docId__": 612,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/events/FpsEvents.js~FpsEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/events/FpsEvents.js~FpsEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 613,
    "kind": "member",
    "name": "fps",
    "memberof": "src/tick/events/FpsEvents.js~FpsEvents",
    "static": false,
    "longname": "src/tick/events/FpsEvents.js~FpsEvents#fps",
    "access": "public",
    "description": "fps - フレームレート値",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 614,
    "kind": "file",
    "name": "src/tick/events/PollingEvents.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/02 - 15:42\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Events from '../../event/Events';\n\n/**\n * {@link Polling} Events\n */\nexport default class PollingEvents extends Events {\n  // ---------------------------------------------------\n  //  CONSTRUCTOR\n  // ---------------------------------------------------\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    // ---\n    /**\n     * polling event 発生時間\n     * @type {number}\n     */\n    this.begin = 0;\n    /**\n     * 現在時間 - Date.now\n     * @type {number}\n     */\n    this.present = 0;\n    /**\n     * イベント間隔(ms)\n     * @type {number}\n     */\n    this.interval = 0;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/tick/events/PollingEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 615,
    "kind": "class",
    "name": "PollingEvents",
    "memberof": "src/tick/events/PollingEvents.js",
    "static": true,
    "longname": "src/tick/events/PollingEvents.js~PollingEvents",
    "access": "public",
    "export": true,
    "importPath": "./src/tick/events/PollingEvents.js",
    "importStyle": "PollingEvents",
    "description": "{@link Polling} Events",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 616,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tick/events/PollingEvents.js~PollingEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tick/events/PollingEvents.js~PollingEvents#constructor",
    "access": "public",
    "description": "custom Event Object",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ]
  },
  {
    "__docId__": 617,
    "kind": "member",
    "name": "begin",
    "memberof": "src/tick/events/PollingEvents.js~PollingEvents",
    "static": false,
    "longname": "src/tick/events/PollingEvents.js~PollingEvents#begin",
    "access": "public",
    "description": "polling event 発生時間",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 618,
    "kind": "member",
    "name": "present",
    "memberof": "src/tick/events/PollingEvents.js~PollingEvents",
    "static": false,
    "longname": "src/tick/events/PollingEvents.js~PollingEvents#present",
    "access": "public",
    "description": "現在時間 - Date.now",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 619,
    "kind": "member",
    "name": "interval",
    "memberof": "src/tick/events/PollingEvents.js~PollingEvents",
    "static": false,
    "longname": "src/tick/events/PollingEvents.js~PollingEvents#interval",
    "access": "public",
    "description": "イベント間隔(ms)",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 620,
    "kind": "file",
    "name": "src/util/Freeze.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/19 - 22:10\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * scroll 操作を強制的に不可能にします\n */\nexport default class Freeze {\n  /**\n   * scroll freeze timeout id\n   * @type {number}\n   */\n  static timerId = 0;\n  /**\n   * scroll を止める時間\n   * @type {number}\n   * @default 200\n   */\n  static delay = 200;\n  /**\n   * scroll 動作を受付不能にします\n   * @returns {void}\n   */\n  static start() {\n    window.addEventListener('touchstart', Freeze.onScroll, false);\n    window.addEventListener('touchmove', Freeze.onScroll, false);\n    window.addEventListener('touchend', Freeze.onScroll, false);\n    window.addEventListener('scroll', Freeze.onScroll, false);\n    document.addEventListener('wheel', Freeze.onScroll, false);\n    document.addEventListener('mousewheel', Freeze.onScroll, false);\n    window.addEventListener('DOMMouseScroll', Freeze.onScroll, false);\n  }\n  /**\n   * scroll 動作を回復します\n   * @returns {void}\n   */\n  static stop() {\n    window.removeEventListener('touchstart', Freeze.onScroll);\n    window.removeEventListener('touchmove', Freeze.onScroll);\n    window.removeEventListener('touchend', Freeze.onScroll);\n    window.removeEventListener('scroll', Freeze.onScroll);\n    document.removeEventListener('wheel', Freeze.onScroll);\n    document.removeEventListener('mousewheel', Freeze.onScroll);\n    window.removeEventListener('DOMMouseScroll', Freeze.onScroll);\n  }\n  /**\n   * window scroll event handler, バブリング・伝播全てキャンセルします\n   * @param {Event} event window scroll event\n   * @returns {boolean} event をキャンセルするために false を返します\n   */\n  static onScroll(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n  }\n  /**\n   * scroll 操作を引数(delay)の間キャンセルします\n   * @param {number} [delay=200] 遅延時間(ms), 200\n   * @returns {number} time out id\n   */\n  static freeze(delay = Freeze.delay) {\n    clearTimeout(Freeze.timerId);\n    // timerId = 0;\n    Freeze.start();\n    if (delay > 0) {\n      Freeze.timerId = setTimeout(Freeze.stop, delay);\n    }\n    return Freeze.timerId;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Freeze.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 621,
    "kind": "class",
    "name": "Freeze",
    "memberof": "src/util/Freeze.js",
    "static": true,
    "longname": "src/util/Freeze.js~Freeze",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Freeze.js",
    "importStyle": "Freeze",
    "description": "scroll 操作を強制的に不可能にします",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 622,
    "kind": "member",
    "name": "timerId",
    "memberof": "src/util/Freeze.js~Freeze",
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.timerId",
    "access": "public",
    "description": "scroll freeze timeout id",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 623,
    "kind": "member",
    "name": "delay",
    "memberof": "src/util/Freeze.js~Freeze",
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.delay",
    "access": "public",
    "description": "scroll を止める時間",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "200"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 624,
    "kind": "method",
    "name": "start",
    "memberof": "src/util/Freeze.js~Freeze",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.start",
    "access": "public",
    "description": "scroll 動作を受付不能にします ",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 625,
    "kind": "method",
    "name": "stop",
    "memberof": "src/util/Freeze.js~Freeze",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.stop",
    "access": "public",
    "description": "scroll 動作を回復します ",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 626,
    "kind": "method",
    "name": "onScroll",
    "memberof": "src/util/Freeze.js~Freeze",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.onScroll",
    "access": "public",
    "description": "window scroll event handler, バブリング・伝播全てキャンセルします ",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event をキャンセルするために false を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window scroll event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event をキャンセルするために false を返します"
    }
  },
  {
    "__docId__": 627,
    "kind": "method",
    "name": "freeze",
    "memberof": "src/util/Freeze.js~Freeze",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Freeze.js~Freeze.freeze",
    "access": "public",
    "description": "scroll 操作を引数(delay)の間キャンセルします ",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out id "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "200",
        "defaultRaw": 200,
        "name": "delay",
        "description": "遅延時間(ms), 200"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out id"
    }
  },
  {
    "__docId__": 628,
    "kind": "file",
    "name": "src/util/Hit.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/29 - 22:06\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 衝突判定を行います\n */\nexport default class Hit {\n  /**\n   * element と window.top(0) window.bottom(height) のヒットテストを行います\n   * @param {number} height 衝突対象物の高さ window.innerHeight\n   * @param {ClientRect|Object} offset 比較対象物の element ClientRect または同等の Object\n   * @returns {{\n   *  top: boolean,\n   *  bottom: boolean,\n   *  contain: boolean,\n   *  include: boolean,\n   *  result: boolean\n   * }} hit check object を返します\n   */\n  static test(height, offset) {\n    // hit test\n    const hit = {\n      result: false,\n      top: false,\n      bottom: false,\n      contain: false,\n      include: false,\n    };\n\n    // top\n    if (offset.top <= height && offset.top >= 0) {\n      hit.top = true;\n    }\n\n    // bottom\n    if (offset.bottom <= height && offset.bottom >= 0) {\n      hit.bottom = true;\n    }\n\n    // contain check を行います\n    if (offset.top <= 0 && offset.bottom >= height) {\n      hit.contain = true;\n    }\n\n    // include check を行います\n    if (\n      (offset.top >= 0 && offset.top <= height) &&\n      (offset.bottom >= 0 && offset.bottom <= height)\n    ) {\n      hit.include = true;\n    }\n    // return\n    // return hit.top || hit.bottom || hit.contain || hit.include;\n    hit.result = hit.top || hit.bottom || hit.contain || hit.include;\n    return hit;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Hit.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 629,
    "kind": "class",
    "name": "Hit",
    "memberof": "src/util/Hit.js",
    "static": true,
    "longname": "src/util/Hit.js~Hit",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Hit.js",
    "importStyle": "Hit",
    "description": "衝突判定を行います",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "test",
    "memberof": "src/util/Hit.js~Hit",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Hit.js~Hit.test",
    "access": "public",
    "description": "element と window.top(0) window.bottom(height) のヒットテストを行います ",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{\n top: boolean,\n bottom: boolean,\n contain: boolean,\n include: boolean,\n result: boolean\n}} hit check object を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "衝突対象物の高さ window.innerHeight"
      },
      {
        "nullable": null,
        "types": [
          "ClientRect",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "比較対象物の element ClientRect または同等の Object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\n top: boolean,\n bottom: boolean,\n contain: boolean,\n include: boolean,\n result: boolean\n}"
      ],
      "spread": false,
      "description": "hit check object を返します"
    }
  },
  {
    "__docId__": 631,
    "kind": "file",
    "name": "src/util/Iro.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/01/19 - 15:13\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// --------------------------------\n// copy [native code]\n/**\n * copy [native code] - Math.floor\n * @type {function}\n * @private\n * @static\n */\nconst mathFloor = Math.floor;\n/**\n * copy [native code] - Math.max\n * @type {function}\n * @private\n * @static\n */\nconst mathMax = Math.max;\n/**\n * copy [native code] - Math.min\n * @type {function}\n * @private\n * @static\n */\nconst mathMin = Math.min;\n/**\n * copy [native code] - parseInt\n * @type {function}\n * @private\n * @static\n */\nconst mathInt = self.parseInt;\n\n// --------------------------------\n// constant for calculate\n/**\n * 計算定数\n * ```\n * 1 / 6\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneSix = 1 / 6;\n/**\n * 計算定数\n * ```\n * 0.5\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst half = 0.5;\n/**\n * 計算定数\n * ```\n * 2 / 3\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst twoThree = 2 / 3;\n/**\n * 計算定数\n * ```\n * 1 / 3\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneThree = 1 / 3;\n/**\n * 色変換ユーティリティーです\n */\nexport default class Iro {\n  // ----------------------------------------\n  // HSL\n  // ----------------------------------------\n  /**\n   * RGB を HSL 変換します\n   * @see http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n   * @see http://www.rapidtables.com/convert/color/rgb-to-hsl.htm\n   * @param {number} red RGB.red 0 ~ 255\n   * @param {number} green RGB.green 0 ~ 255\n   * @param {number} blue RGB.blue 0 ~ 255\n   * @returns {{h: number, s: number, l: number}}\n   * {hue, saturation, luminance} object を返します, それぞれ 0 ~ 1\n   * hue: 0 ~ 360 を 360 で正規化されます\n   */\n  static rgb2hsl(red, green, blue) {\n    const r = red / 255;\n    const g = green / 255;\n    const b = blue / 255;\n    const maxValue = mathMax(r, g, b);\n    const minValue = mathMin(r, g, b);\n    // luminance\n    const l = (maxValue + minValue) * 0.5;\n    // hue\n    let h = 0;\n    // saturation\n    let s = 0;\n    if (maxValue === minValue) {\n      // achromatic: 〘光学〙無色の; 色消しの\n      return {\n        h,\n        s,\n        l,\n      };\n    }\n    // ---\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r: {\n        h = ((g - b) / d) + (g < b ? 6 : 0);\n        break;\n      }\n      case g: {\n        h = ((b - r) / d) + 2;\n        break;\n      }\n      case b: {\n        h = ((r - g) / d) + 4;\n        break;\n      }\n      default: {\n        h = 0;\n        break;\n      }\n    }\n    h /= 6;\n    // return value\n    return {\n      h,\n      s,\n      l,\n    };\n  }// rgb2hsl\n  /**\n   * HSL to RGB で `saturation !== 0` な時の R, G, B 変換 helper です\n   * @param {number} point `(2 * l) - q`\n   * @param {number} q `l < 0.5 ? l * (1 + s) : (l + s) - (l * s)`\n   * @param {number} hue hue\n   * @returns {number} 0 ~ 1 な値を返します\n   */\n  static hue2rgb(point, q, hue) {\n    let t = hue;\n    if (t < 0) {\n      t += 1;\n    } else if (t > 1) {\n      t -= 1;\n    }\n    if (t < oneSix) {\n      return point + ((q - point) * 6 * t);\n    } else if (t < half) {\n      return q;\n    } else if (t < twoThree) {\n      return point + ((q - point) * (twoThree - t) * 6);\n    }\n    return point;\n  }\n  /**\n   * HSL to RGB 変換します\n   * @param {number} h hue 0 ~ 1 degree / 360 正規化\n   * @param {number} s saturation 0 ~ 1\n   * @param {number} l luminance 0 ~ 1\n   * @returns {{r: number, g: number, b: number}} r, g, b: 0 ~ 255 object を返します\n   */\n  static hsl2rgb(h, s, l) {\n    let r = l;\n    let g = l;\n    let b = l;\n    if (s !== 0) {\n      const q = l < 0.5 ? l * (1 + s) : (l + s) - (l * s);\n      const point = (2 * l) - q;\n      r = Iro.hue2rgb(point, q, h + oneThree);\n      g = Iro.hue2rgb(point, q, h);\n      b = Iro.hue2rgb(point, q, h - oneThree);\n    }\n    return {\n      r: mathInt(r * 255, 10),\n      g: mathInt(g * 255, 10),\n      b: mathInt(b * 255, 10),\n    };\n  }\n  // ----------------------------------------\n  // HSV\n  // ----------------------------------------\n  /**\n   * RGB to HSV(HSB) 変換\n   * @param {number} r RGB.red 0 ~ 255\n   * @param {number} g RGB.green 0 ~ 255\n   * @param {number} b RGB.blue 0 ~ 255\n   * @returns {{h: number, s: number, v: number}} 各 0 ~ 1\n   */\n  static rgb2hsv(r, g, b) {\n    // 正規化\n    const red = r / 255;\n    const green = g / 255;\n    const blue = b / 255;\n\n    const maxValue = mathMax(red, green, blue);\n    const minValue = mathMin(red, green, blue);\n    const v = maxValue;\n    const d = maxValue - minValue;\n    const s = maxValue === 0 ? 0 : d / maxValue;\n    let h = 0;\n    if (maxValue === minValue) {\n      // achromatic: 〘光学〙無色の; 色消しの\n      return {\n        h,\n        s,\n        v,\n      };\n    }\n    // ---\n    switch (maxValue) {\n      case red: {\n        h = ((green - blue) / d) + (green < blue ? 6 : 0);\n        break;\n      }\n      case green: {\n        h = ((blue - red) / d) + 2;\n        break;\n      }\n      case blue: {\n        h = ((red - green) / d) + 4;\n        break;\n      }\n      default: {\n        h = 0;\n        break;\n      }\n    }\n    h /= 6;\n    return {\n      h,\n      s,\n      v,\n    };\n  }\n  /**\n   * HSV(HSB) to RGB 変換します\n   * @param {number} h hue 0 ~ 1\n   * @param {number} s saturation 0 ~ 1\n   * @param {number} v value(bright) 0 ~ 1\n   * @returns {{r: Number, g: Number, b: Number}} 各 0 ~ 255\n   */\n  static hsv2rgb(h, s, v) {\n    const i = mathFloor(h * 6);\n    const f = (h * 6) - i;\n    const point = v * (1 - s);\n    const q = v * (1 - (f * s));\n    const t = v * (1 - ((1 - f) * s));\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    // ---\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = point;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = point;\n        break;\n\n      case 2:\n        r = point;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = point;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = point;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = point;\n        b = q;\n        break;\n\n      default:\n        r = 0;\n        g = 0;\n        b = 0;\n        break;\n    }\n    // ---\n    return {\n      r: mathInt(r * 255, 10),\n      g: mathInt(g * 255, 10),\n      b: mathInt(b * 255, 10),\n    };\n  }\n  // ----------------------------------------\n  // HEX\n  // ----------------------------------------\n  /**\n   * CSS shorthand 色指定をフル変換します\n   * @param {string} hex `#f00` な CSS 色形式\n   * @returns {?string} `ff0000` フル変換し返します\n   * @see http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n   */\n  static shorthand(hex) {\n    if (typeof hex !== 'string') {\n      return null;\n    }\n    const pattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const color = hex.replace(pattern, (m, r, g, b) => `${r}${r}${g}${g}${b}${b}`);\n    return color.length === 7 ? color : `#${color}`;\n  }\n  /**\n   * CSS 色指定を RGB 変換します\n   * @param {string} hex CSS 色形式 `#f00` or `#ff0000`\n   * @returns {?{r: number, g: number, b: number}} nullable で返します\n   */\n  static hex2rgb(hex) {\n    const hexString = Iro.shorthand(hex);\n    if (typeof hexString !== 'string') {\n      return null;\n    }\n    // ---\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexString);\n    return Array.isArray(result) && result.length === 4 ?\n      {\n        r: mathInt(result[1], 16),\n        g: mathInt(result[2], 16),\n        b: mathInt(result[3], 16),\n      } : null;\n  }\n  /**\n   * 0 ~ 255 RGB color number を `00` な 16進形式に変換します\n   * @param {number} colorNumber 変換する RGB color number\n   * @returns {string} 2桁を保証し 16進 変換後文字列を返します\n   */\n  static int16(colorNumber) {\n    const hex = colorNumber.toString(16);\n    return hex.length === 1 ? `0${hex}` : hex;\n  }\n  /**\n   * RGB を CSS形式 hex 変換します\n   * @param {number} r red 0 ~ 255\n   * @param {number} g green 0 ~ 255\n   * @param {number} b blue 0 ~ 255\n   * @returns {string} CSS形式 hex `#ff0000` を返します\n   */\n  static rgb2hex(r, g, b) {\n    return `#${Iro.int16(r)}${Iro.int16(g)}${Iro.int16(b)}`;\n  }\n  /**\n   * 0 ~ 16777215 数値を `#ffffff` な CSS 16進色形式に変換します\n   * @param {number} rgb 0 ~ 16777215 名数値\n   * @returns {string} `#ffffff` な CSS 16進色形式を返します\n   */\n  static int2hex(rgb) {\n    let hex = mathFloor(rgb).toString(16);\n    const length = hex.length;\n    if (length === 6) {\n      return `#${hex}`;\n    }\n    let step = 6 - length;\n    while (step) {\n      hex = `0${hex}`;\n      step -= 1;\n    }\n    return `#${hex}`;\n  }\n  /**\n   * `#ffffff` な CSS 16進色形式を 10進数変換します\n   * @param {string} hex `#f00` or `#ff0000` な CSS 16進色形式\n   * @returns {?number} 10進数へ変換し返します\n   */\n  static hex2int(hex) {\n    const hexString = Iro.shorthand(hex);\n    if (typeof hexString !== 'string') {\n      return null;\n    }\n    return mathInt(hexString.replace('#', ''), 16);\n  }\n  /**\n   * #FFFFFF な CSS 16進を 0xFFFFFF 変換し 10進数にします\n   * @param {string} hex #FFFFFF な CSS 16進\n   * @return {Number} 10進数変換後の色ナンバーを返します\n   */\n  static toInt(hex) {\n    return parseInt(hex.replace('#', '0x'), 16);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Iro.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 632,
    "kind": "variable",
    "name": "mathFloor",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~mathFloor",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "copy [native code] - Math.floor",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 633,
    "kind": "variable",
    "name": "mathMax",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~mathMax",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "copy [native code] - Math.max",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 634,
    "kind": "variable",
    "name": "mathMin",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~mathMin",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "copy [native code] - Math.min",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 635,
    "kind": "variable",
    "name": "mathInt",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~mathInt",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "copy [native code] - parseInt",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 636,
    "kind": "variable",
    "name": "oneSix",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~oneSix",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "計算定数\n```\n1 / 6\n```",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 637,
    "kind": "variable",
    "name": "half",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~half",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "計算定数\n```\n0.5\n```",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 638,
    "kind": "variable",
    "name": "twoThree",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~twoThree",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "計算定数\n```\n2 / 3\n```",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 639,
    "kind": "variable",
    "name": "oneThree",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~oneThree",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Iro.js",
    "importStyle": null,
    "description": "計算定数\n```\n1 / 3\n```",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 640,
    "kind": "class",
    "name": "Iro",
    "memberof": "src/util/Iro.js",
    "static": true,
    "longname": "src/util/Iro.js~Iro",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Iro.js",
    "importStyle": "Iro",
    "description": "色変換ユーティリティーです",
    "lineNumber": 89,
    "interface": false
  },
  {
    "__docId__": 641,
    "kind": "method",
    "name": "rgb2hsl",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.rgb2hsl",
    "access": "public",
    "description": "RGB を HSL 変換します ",
    "see": [
      "http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion ",
      "http://www.rapidtables.com/convert/color/rgb-to-hsl.htm "
    ],
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{h: number, s: number, l: number}}\n{hue, saturation, luminance} object を返します, それぞれ 0 ~ 1\nhue: 0 ~ 360 を 360 で正規化されます "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "red",
        "description": "RGB.red 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "green",
        "description": "RGB.green 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "blue",
        "description": "RGB.blue 0 ~ 255"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{h: number, s: number, l: number}"
      ],
      "spread": false,
      "description": "{hue, saturation, luminance} object を返します, それぞれ 0 ~ 1\nhue: 0 ~ 360 を 360 で正規化されます"
    }
  },
  {
    "__docId__": 642,
    "kind": "method",
    "name": "hue2rgb",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.hue2rgb",
    "access": "public",
    "description": "HSL to RGB で `saturation !== 0` な時の R, G, B 変換 helper です ",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 0 ~ 1 な値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "`(2 * l) - q`"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "q",
        "description": "`l < 0.5 ? l * (1 + s) : (l + s) - (l * s)`"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "hue",
        "description": "hue"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "0 ~ 1 な値を返します"
    }
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "hsl2rgb",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.hsl2rgb",
    "access": "public",
    "description": "HSL to RGB 変換します ",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{r: number, g: number, b: number}} r, g, b: 0 ~ 255 object を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": "hue 0 ~ 1 degree / 360 正規化"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "saturation 0 ~ 1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "l",
        "description": "luminance 0 ~ 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{r: number, g: number, b: number}"
      ],
      "spread": false,
      "description": "r, g, b: 0 ~ 255 object を返します"
    }
  },
  {
    "__docId__": 644,
    "kind": "method",
    "name": "rgb2hsv",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.rgb2hsv",
    "access": "public",
    "description": "RGB to HSV(HSB) 変換 ",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{h: number, s: number, v: number}} 各 0 ~ 1 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "RGB.red 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "g",
        "description": "RGB.green 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "RGB.blue 0 ~ 255"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{h: number, s: number, v: number}"
      ],
      "spread": false,
      "description": "各 0 ~ 1"
    }
  },
  {
    "__docId__": 645,
    "kind": "method",
    "name": "hsv2rgb",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.hsv2rgb",
    "access": "public",
    "description": "HSV(HSB) to RGB 変換します ",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{r: Number, g: Number, b: Number}} 各 0 ~ 255 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "h",
        "description": "hue 0 ~ 1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "saturation 0 ~ 1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "value(bright) 0 ~ 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{r: Number, g: Number, b: Number}"
      ],
      "spread": false,
      "description": "各 0 ~ 255"
    }
  },
  {
    "__docId__": 646,
    "kind": "method",
    "name": "shorthand",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.shorthand",
    "access": "public",
    "description": "CSS shorthand 色指定をフル変換します ",
    "see": [
      "http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb "
    ],
    "lineNumber": 332,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?string} `ff0000` フル変換し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": "`#f00` な CSS 色形式"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`ff0000` フル変換し返します"
    }
  },
  {
    "__docId__": 647,
    "kind": "method",
    "name": "hex2rgb",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.hex2rgb",
    "access": "public",
    "description": "CSS 色指定を RGB 変換します ",
    "lineNumber": 345,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?{r: number, g: number, b: number}} nullable で返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": "CSS 色形式 `#f00` or `#ff0000`"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "{r: number, g: number, b: number}"
      ],
      "spread": false,
      "description": "nullable で返します"
    }
  },
  {
    "__docId__": 648,
    "kind": "method",
    "name": "int16",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.int16",
    "access": "public",
    "description": "0 ~ 255 RGB color number を `00` な 16進形式に変換します ",
    "lineNumber": 364,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 2桁を保証し 16進 変換後文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "colorNumber",
        "description": "変換する RGB color number"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "2桁を保証し 16進 変換後文字列を返します"
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "rgb2hex",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.rgb2hex",
    "access": "public",
    "description": "RGB を CSS形式 hex 変換します ",
    "lineNumber": 375,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} CSS形式 hex `#ff0000` を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "red 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "g",
        "description": "green 0 ~ 255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "blue 0 ~ 255"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "CSS形式 hex `#ff0000` を返します"
    }
  },
  {
    "__docId__": 650,
    "kind": "method",
    "name": "int2hex",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.int2hex",
    "access": "public",
    "description": "0 ~ 16777215 数値を `#ffffff` な CSS 16進色形式に変換します ",
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} `#ffffff` な CSS 16進色形式を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rgb",
        "description": "0 ~ 16777215 名数値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`#ffffff` な CSS 16進色形式を返します"
    }
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "hex2int",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.hex2int",
    "access": "public",
    "description": "`#ffffff` な CSS 16進色形式を 10進数変換します ",
    "lineNumber": 401,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?number} 10進数へ変換し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": "`#f00` or `#ff0000` な CSS 16進色形式"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "10進数へ変換し返します"
    }
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "toInt",
    "memberof": "src/util/Iro.js~Iro",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Iro.js~Iro.toInt",
    "access": "public",
    "description": "#FFFFFF な CSS 16進を 0xFFFFFF 変換し 10進数にします ",
    "lineNumber": 413,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hex",
        "description": "#FFFFFF な CSS 16進"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "10進数変換後の色ナンバーを返します"
    }
  },
  {
    "__docId__": 653,
    "kind": "file",
    "name": "src/util/List.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/26 - 14:57\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport Type from './Type';\n\n/**\n * Array（配列）Utility\n */\nexport default class List {\n  /**\n   * Array.prototype.fill, polyfill\n   * @param {number} lengthData 配列長\n   * @param {*} value fill する値\n   * @returns {Array.<*>} fill 後の配列を返します\n   * @private\n   */\n  static filling(lengthData, value) {\n    let length = lengthData;\n    const arr = [].slice(0);\n    while (length > 0) {\n      arr.push(value);\n      length -= 1;\n    }\n    return arr;\n  }\n  /**\n   * Array.prototype.fill を行います\n   * @param {number} length 配列長\n   * @param {*} value fill する値\n   * @returns {Array.<*>} fill 後の配列を返しますd\n   */\n  static fill(length, value = 0) {\n    // 関数が使えない時は polyfill 関数を使用します\n    if (!Type.method(Array.prototype.fill)) {\n      return List.filling(length, value);\n    }\n    // native method\n    return new Array(length).fill(value);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/List.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "class",
    "name": "List",
    "memberof": "src/util/List.js",
    "static": true,
    "longname": "src/util/List.js~List",
    "access": "public",
    "export": true,
    "importPath": "./src/util/List.js",
    "importStyle": "List",
    "description": "Array（配列）Utility",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 655,
    "kind": "method",
    "name": "filling",
    "memberof": "src/util/List.js~List",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/List.js~List.filling",
    "access": "private",
    "description": "Array.prototype.fill, polyfill ",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<*>} fill 後の配列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lengthData",
        "description": "配列長"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "fill する値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<*>"
      ],
      "spread": false,
      "description": "fill 後の配列を返します"
    }
  },
  {
    "__docId__": 656,
    "kind": "method",
    "name": "fill",
    "memberof": "src/util/List.js~List",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/List.js~List.fill",
    "access": "public",
    "description": "Array.prototype.fill を行います ",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<*>} fill 後の配列を返しますd "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "配列長"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "fill する値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<*>"
      ],
      "spread": false,
      "description": "fill 後の配列を返しますd"
    }
  },
  {
    "__docId__": 657,
    "kind": "file",
    "name": "src/util/NodeLists.js",
    "content": "/**\n * Copyright (c) 2011-2017 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2017/06/16 - 19:13\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Array.from(nodeList) が Android で error になるから polyfill する\n */\nexport default class NodeLists {\n  /**\n   * Array.from 使えないので for...i iteration する\n   * @param {NodeList} elements 処理対象\n   * @returns {Array} 配列変換し返します\n   */\n  static from(elements) {\n    const data = [];\n    const limit = elements.length;\n    for (let i = 0; i < limit; i += 1) {\n      data.push(elements[i]);\n    }\n    return data;\n  }\n  /**\n   * Array.from 使用判定を行い、\n   * 使用できない時は {@link NodeLists.from} を実行します\n   * @param {NodeList} elements 処理対象\n   * @returns {Array} 配列変換し返します\n   */\n  static get(elements) {\n    if (!Array.from) {\n      return NodeLists.from(elements);\n    }\n    return Array.from(elements);\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/NodeLists.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 658,
    "kind": "class",
    "name": "NodeLists",
    "memberof": "src/util/NodeLists.js",
    "static": true,
    "longname": "src/util/NodeLists.js~NodeLists",
    "access": "public",
    "export": true,
    "importPath": "./src/util/NodeLists.js",
    "importStyle": "NodeLists",
    "description": "Array.from(nodeList) が Android で error になるから polyfill する",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 659,
    "kind": "method",
    "name": "from",
    "memberof": "src/util/NodeLists.js~NodeLists",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/NodeLists.js~NodeLists.from",
    "access": "public",
    "description": "Array.from 使えないので for...i iteration する ",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} 配列変換し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeList"
        ],
        "spread": false,
        "optional": false,
        "name": "elements",
        "description": "処理対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "配列変換し返します"
    }
  },
  {
    "__docId__": 660,
    "kind": "method",
    "name": "get",
    "memberof": "src/util/NodeLists.js~NodeLists",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/NodeLists.js~NodeLists.get",
    "access": "public",
    "description": "Array.from 使用判定を行い、\n使用できない時は {@link NodeLists.from} を実行します ",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} 配列変換し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeList"
        ],
        "spread": false,
        "optional": false,
        "name": "elements",
        "description": "処理対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "配列変換し返します"
    }
  },
  {
    "__docId__": 661,
    "kind": "file",
    "name": "src/util/Text.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 13:53\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 文字列操作の utility\n */\nexport default class Text {\n  /**\n   * camel case を hyphenation に変換します\n   * @param {string} str 操作対象文字列\n   * @returns {string} キャメルケースをハイフネーションに変換後文字列を返します\n   */\n  static dash(str) {\n    return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n  }\n  /**\n   * camel case へ変換します\n   * @param {string} str 操作対象文字列\n   * @returns {*|void|string|XML} キャメルケース文字列を返します\n   */\n  static camel(str) {\n    // return str.replace(/^\\s+|\\s+$/g, '');\n    return str.replace(/-([a-z])/g, (g) => {\n      const first = g[1];\n      return first.toUpperCase();\n    });\n  }\n  /**\n   * 数値に3桁区切りの `,` カンマを挿入します\n   * @param {number} number カンマを挿入する数値\n   * @param {string} [locale=js-JP] ロケール\n   * @returns {string} カンマ挿入後の文字列, 小数点なし\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n   * @see http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n   */\n  static comma(number, locale = 'ja-JP') {\n    let numbered = '';\n    if (number.toLocaleString) {\n      numbered = number.toLocaleString(locale);\n    } else {\n      numbered = number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n    // IE 8 `NN.00` にするので `.` 以下削除\n    return numbered.split('.').shift();\n  }\n  /**\n   * 文字列の単語を置き換えます\n   * @param {string} targetText 置換え対象文字列\n   * @param {string} targetWord 置換え元単語\n   * @param {string} replaceWord 置換える単語\n   * @returns {string} 置換え後の文字列を返します\n   */\n  static replace(targetText, targetWord, replaceWord) {\n    return targetText.split(targetWord).join(replaceWord);\n  }\n  /**\n   * 文字列から単語を削除します\n   * @param {string} targetText 置換え対象文字列\n   * @param {string} targetWord 削除する単語\n   * @returns {string} 削除後の文字列を返します\n   */\n  static remove(targetText, targetWord) {\n    return Text.replace(targetText, targetWord, '');\n  }\n  /**\n   * 文字列の `&` を `&amp;` へ置換えます\n   * @param {string} targetText 操作対象文字列\n   * @returns {string} `&amp;` 置換え後の文字列を返します\n   */\n  static amp(targetText) {\n    return Text.replace(targetText, '&', '&amp;');\n  }\n  /**\n   * 文字列の `&amp;` を `&` へ置換えます\n   * @param {string} targetText 操作対象文字列\n   * @returns {string} `&` 置換え後の文字列を返します\n   */\n  static and(targetText) {\n    return Text.replace(targetText, '&amp;', '&');\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Text.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 662,
    "kind": "class",
    "name": "Text",
    "memberof": "src/util/Text.js",
    "static": true,
    "longname": "src/util/Text.js~Text",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Text.js",
    "importStyle": "Text",
    "description": "文字列操作の utility",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "dash",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.dash",
    "access": "public",
    "description": "camel case を hyphenation に変換します ",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} キャメルケースをハイフネーションに変換後文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "キャメルケースをハイフネーションに変換後文字列を返します"
    }
  },
  {
    "__docId__": 664,
    "kind": "method",
    "name": "camel",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.camel",
    "access": "public",
    "description": "camel case へ変換します ",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|void|string|XML} キャメルケース文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "void",
        "string",
        "XML"
      ],
      "spread": false,
      "description": "キャメルケース文字列を返します"
    }
  },
  {
    "__docId__": 665,
    "kind": "method",
    "name": "comma",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.comma",
    "access": "public",
    "description": "数値に3桁区切りの `,` カンマを挿入します ",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString ",
      "http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript "
    ],
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} カンマ挿入後の文字列, 小数点なし "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "カンマを挿入する数値"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "js-JP",
        "defaultRaw": "js-JP",
        "name": "locale",
        "description": "ロケール"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "カンマ挿入後の文字列, 小数点なし"
    }
  },
  {
    "__docId__": 666,
    "kind": "method",
    "name": "replace",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.replace",
    "access": "public",
    "description": "文字列の単語を置き換えます ",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 置換え後の文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "置換え対象文字列"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetWord",
        "description": "置換え元単語"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "replaceWord",
        "description": "置換える単語"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "置換え後の文字列を返します"
    }
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "remove",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.remove",
    "access": "public",
    "description": "文字列から単語を削除します ",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 削除後の文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "置換え対象文字列"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetWord",
        "description": "削除する単語"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "削除後の文字列を返します"
    }
  },
  {
    "__docId__": 668,
    "kind": "method",
    "name": "amp",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.amp",
    "access": "public",
    "description": "文字列の `&` を `&amp;` へ置換えます ",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} `&amp;` 置換え後の文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`&amp;` 置換え後の文字列を返します"
    }
  },
  {
    "__docId__": 669,
    "kind": "method",
    "name": "and",
    "memberof": "src/util/Text.js~Text",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Text.js~Text.and",
    "access": "public",
    "description": "文字列の `&amp;` を `&` へ置換えます ",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} `&` 置換え後の文字列を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`&` 置換え後の文字列を返します"
    }
  },
  {
    "__docId__": 670,
    "kind": "file",
    "name": "src/util/Times.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/16 - 16:50\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// --------------------------------\n// constant for calculate\n/**\n * {@link Times}\n * 計算用定数 - 1 minute\n * ```\n * 1000 * 60\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneMinute = 1000 * 60;\n/**\n * {@link Times}\n * 計算用定数 - 1 hour\n * ```\n * 1000 * 60 * 60\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneHour = oneMinute * 60;\n/**\n * {@link Times}\n * 計算用定数 - 1 day\n * ```\n * 1000 * 60 * 60 * 24\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneDay = oneHour * 24;\n/**\n * {@link Times}\n * 計算用定数 - 1 week\n * ```\n * 1000 * 60 * 60 * 24 * 7\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneWeek = oneDay * 7;\n/**\n * {@link Times}\n * 計算用定数 - 1 month\n * ```\n * 1000 * 60 * 60 * 24 * 30\n * ```\n * @type {number}\n * @private\n * @static\n */\nconst oneMonth = oneDay * 30;\n\n/**\n * 指定時間を計算し Date instance を作成します\n */\nexport default class Times {\n  // /**\n  //  * 1970-1-1 00:00\n  //  * @returns {Date} 1970-1-1 00:00\n  //  */\n  // static standard() {\n  //   return new Date();\n  // }\n  /**\n   * 現在時間 Date instance\n   * @returns {Date} 現在時間 Date instance\n   */\n  static present() {\n    return new Date();\n  }\n  /**\n   * 指定分後の Date instance\n   * @param {number} n 指定分\n   * @returns {Date} 指定分後の Date instance\n   */\n  static minute(n) {\n    return new Date(Date.now() + (n * oneMinute));\n  }\n  /**\n   * 指定時間後の Date instance\n   * @param {number} n 指定時間\n   * @returns {Date} 指定時間後の Date instance\n   */\n  static hour(n) {\n    return new Date(Date.now() + (n * oneHour));\n  }\n  /**\n   * 指定日後の Date instance\n   * @param {number} n 指定日\n   * @returns {Date} 指定日後の Date instance\n   */\n  static day(n) {\n    return new Date(Date.now() + (n * oneDay));\n  }\n  /**\n   * 指定週後の Date instance\n   * @param {number} n 指定週\n   * @returns {Date} 指定週後の Date instance\n   */\n  static week(n) {\n    return new Date(Date.now() + (n * oneWeek));\n  }\n  /**\n   * 指定月後の Date instance\n   * @param {number} n 指定月\n   * @returns {Date} 指定月後の Date instance\n   */\n  static month(n) {\n    return new Date(Date.now() + (n * oneMonth));\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Times.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 671,
    "kind": "variable",
    "name": "oneMinute",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~oneMinute",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "{@link Times}\n計算用定数 - 1 minute\n```\n1000 * 60\n```",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 672,
    "kind": "variable",
    "name": "oneHour",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~oneHour",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "{@link Times}\n計算用定数 - 1 hour\n```\n1000 * 60 * 60\n```",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 673,
    "kind": "variable",
    "name": "oneDay",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~oneDay",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "{@link Times}\n計算用定数 - 1 day\n```\n1000 * 60 * 60 * 24\n```",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 674,
    "kind": "variable",
    "name": "oneWeek",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~oneWeek",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "{@link Times}\n計算用定数 - 1 week\n```\n1000 * 60 * 60 * 24 * 7\n```",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 675,
    "kind": "variable",
    "name": "oneMonth",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~oneMonth",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "{@link Times}\n計算用定数 - 1 month\n```\n1000 * 60 * 60 * 24 * 30\n```",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 676,
    "kind": "class",
    "name": "Times",
    "memberof": "src/util/Times.js",
    "static": true,
    "longname": "src/util/Times.js~Times",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Times.js",
    "importStyle": "Times",
    "description": "指定時間を計算し Date instance を作成します",
    "lineNumber": 74,
    "interface": false
  },
  {
    "__docId__": 677,
    "kind": "method",
    "name": "present",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.present",
    "access": "public",
    "description": "現在時間 Date instance ",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 現在時間 Date instance "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "現在時間 Date instance"
    },
    "params": []
  },
  {
    "__docId__": 678,
    "kind": "method",
    "name": "minute",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.minute",
    "access": "public",
    "description": "指定分後の Date instance ",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定分後の Date instance "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定分"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定分後の Date instance"
    }
  },
  {
    "__docId__": 679,
    "kind": "method",
    "name": "hour",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.hour",
    "access": "public",
    "description": "指定時間後の Date instance ",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定時間後の Date instance "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定時間後の Date instance"
    }
  },
  {
    "__docId__": 680,
    "kind": "method",
    "name": "day",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.day",
    "access": "public",
    "description": "指定日後の Date instance ",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定日後の Date instance "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定日"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定日後の Date instance"
    }
  },
  {
    "__docId__": 681,
    "kind": "method",
    "name": "week",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.week",
    "access": "public",
    "description": "指定週後の Date instance ",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定週後の Date instance "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定週"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定週後の Date instance"
    }
  },
  {
    "__docId__": 682,
    "kind": "method",
    "name": "month",
    "memberof": "src/util/Times.js~Times",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Times.js~Times.month",
    "access": "public",
    "description": "指定月後の Date instance ",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定月後の Date instance "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定月"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定月後の Date instance"
    }
  },
  {
    "__docId__": 683,
    "kind": "file",
    "name": "src/util/Type.js",
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/12 - 18:24\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 型チェックを行います\n * @static\n */\nexport default class Type {\n  /**\n   * 引数(target)が関数かを調べます\n   * @param {Function|*} target 調査対象\n   * @returns {boolean} 引数(target)が関数かを調べ結果を返します、true: 関数\n   */\n  static method(target) {\n    return typeof target === 'function';\n  }\n  /**\n   * 引数(target)を `!!` で調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)を `!!` で調べ結果を返します\n   */\n  static exist(target) {\n    return !!target;\n  }\n  /**\n   * 引数(target)が number かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が number かを調べ結果を返します、true: number\n   */\n  static number(target) {\n    // [参考] jQuery 2.x, jQuery 2 関数は文字列 \"2\" も true にするので type check を追加した\n    return typeof target === 'number' &&\n      !Type.array(target) &&\n      ((target - parseFloat(target)) + 1) >= 0;\n  }\n  /**\n   * 引数(target)が int かを `Number.isInteger` を使用し調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が int かを調べ結果を返します、true: int\n   */\n  static int(target) {\n    return Number.isInteger(target);\n  }\n  /**\n   * 引数(target)が string かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が string かを調べ結果を返します、true: string\n   */\n  static string(target) {\n    return typeof target === 'string';\n  }\n  /**\n   * 引数(target)を `Array.isArray` で配列かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が 配列 かを調べ結果を返します、true: 配列\n   */\n  static array(target) {\n    return Array.isArray(target);\n  }\n  /**\n   * 引数(target)が null かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が null かを調べ結果を返します、true: null\n   */\n  static nil(target) {\n    return target === null;\n  }\n  /**\n   * Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます\n   * @deprecated instead use Type.has\n   * @param {Object} target 調査対象\n   * @param {string} key Object.key 名称\n   * @returns {boolean} 存在する時は true を返します\n   */\n  static hasKey(target, key) {\n    return Type.has(target, key);\n  }\n  /**\n   * Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます\n   * @param {Object} target 調査対象\n   * @param {string} key Object.key 名称\n   * @returns {boolean} 存在する時は true を返します\n   */\n  static has(target, key) {\n    return Object.keys(target).indexOf(key) !== -1;\n  }\n  /**\n   * target が undefined かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} true: undefined\n   * @since 2016-10-25\n   */\n  static undef(target) {\n    return typeof target === 'undefined';\n  }\n  /**\n   * ファイル名から拡張子を取得します\n   * @deprecated instead use Type.extension\n   * @param {string} fileName 取得したいファイル名称\n   * @returns {string} ファイル名の拡張子を返します\n   */\n  static getExtension(fileName) {\n    return Type.extension(fileName);\n  }\n  /**\n   * ファイル名から拡張子を取得します\n   * @param {string} fileName 取得したいファイル名称\n   * @returns {string} ファイル名の拡張子を返します\n   */\n  static extension(fileName) {\n    if (typeof fileName !== 'string') {\n      return '';\n    }\n    const splits = fileName.split('.');\n    if (splits.length === 1) {\n      return '';\n    }\n    return splits.pop().toLowerCase();\n  }\n  // ----------------------------------------------------------\n  // 画像パスが正規かチェックする\n  /**\n   * 使用可能なbase64 file かを調べます\n   * @param {string} fileName 調査対象ファイル名\n   * @returns {boolean} jpeg / png の時に true を返します\n   */\n  static base64(fileName) {\n    if (!Type.exist(fileName)) {\n      return false;\n    }\n    return fileName.indexOf('data:image/jpeg;base64') !== -1 ||\n      fileName.indexOf('data:image/png;base64') !== -1 ||\n      fileName.indexOf('data:image/jpg;base64') !== -1 ||\n      fileName.indexOf('data:image/gif;base64') !== -1;\n  }\n  /**\n   * 拡張子から画像ファイルかを調べます\n   * @param {string} fileName 調査対象ファイル名\n   * @returns {Boolean} 'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します\n   */\n  static img(fileName) {\n    if (!Type.exist(fileName)) {\n      return false;\n    }\n    // base64\n    if (Type.base64(fileName)) {\n      return true;\n    }\n    // 拡張子チェック\n    return ['jpg', 'png', 'jpeg', 'gif'].indexOf(Type.extension(fileName)) !== -1;\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 684,
    "kind": "class",
    "name": "Type",
    "memberof": "src/util/Type.js",
    "static": true,
    "longname": "src/util/Type.js~Type",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Type.js",
    "importStyle": "Type",
    "description": "型チェックを行います",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 685,
    "kind": "method",
    "name": "method",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.method",
    "access": "public",
    "description": "引数(target)が関数かを調べます ",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が関数かを調べ結果を返します、true: 関数 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が関数かを調べ結果を返します、true: 関数"
    }
  },
  {
    "__docId__": 686,
    "kind": "method",
    "name": "exist",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.exist",
    "access": "public",
    "description": "引数(target)を `!!` で調べます ",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)を `!!` で調べ結果を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)を `!!` で調べ結果を返します"
    }
  },
  {
    "__docId__": 687,
    "kind": "method",
    "name": "number",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.number",
    "access": "public",
    "description": "引数(target)が number かを調べます ",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が number かを調べ結果を返します、true: number "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が number かを調べ結果を返します、true: number"
    }
  },
  {
    "__docId__": 688,
    "kind": "method",
    "name": "int",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.int",
    "access": "public",
    "description": "引数(target)が int かを `Number.isInteger` を使用し調べます ",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が int かを調べ結果を返します、true: int "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が int かを調べ結果を返します、true: int"
    }
  },
  {
    "__docId__": 689,
    "kind": "method",
    "name": "string",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.string",
    "access": "public",
    "description": "引数(target)が string かを調べます ",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が string かを調べ結果を返します、true: string "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が string かを調べ結果を返します、true: string"
    }
  },
  {
    "__docId__": 690,
    "kind": "method",
    "name": "array",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.array",
    "access": "public",
    "description": "引数(target)を `Array.isArray` で配列かを調べます ",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が 配列 かを調べ結果を返します、true: 配列 "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が 配列 かを調べ結果を返します、true: 配列"
    }
  },
  {
    "__docId__": 691,
    "kind": "method",
    "name": "nil",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.nil",
    "access": "public",
    "description": "引数(target)が null かを調べます ",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が null かを調べ結果を返します、true: null "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が null かを調べ結果を返します、true: null"
    }
  },
  {
    "__docId__": 692,
    "kind": "method",
    "name": "hasKey",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.hasKey",
    "access": "public",
    "description": "Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます ",
    "lineNumber": 84,
    "deprecated": "instead use Type.has ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在する時は true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Object.key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在する時は true を返します"
    }
  },
  {
    "__docId__": 693,
    "kind": "method",
    "name": "has",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.has",
    "access": "public",
    "description": "Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます ",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在する時は true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Object.key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在する時は true を返します"
    }
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "undef",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.undef",
    "access": "public",
    "description": "target が undefined かを調べます ",
    "lineNumber": 102,
    "since": "2016-10-25 ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: undefined "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: undefined"
    }
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "getExtension",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.getExtension",
    "access": "public",
    "description": "ファイル名から拡張子を取得します ",
    "lineNumber": 111,
    "deprecated": "instead use Type.extension ",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} ファイル名の拡張子を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "取得したいファイル名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "ファイル名の拡張子を返します"
    }
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "extension",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.extension",
    "access": "public",
    "description": "ファイル名から拡張子を取得します ",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} ファイル名の拡張子を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "取得したいファイル名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "ファイル名の拡張子を返します"
    }
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "base64",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.base64",
    "access": "public",
    "description": "使用可能なbase64 file かを調べます ",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} jpeg / png の時に true を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "調査対象ファイル名"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "jpeg / png の時に true を返します"
    }
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "img",
    "memberof": "src/util/Type.js~Type",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/Type.js~Type.img",
    "access": "public",
    "description": "拡張子から画像ファイルかを調べます ",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} 'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "調査対象ファイル名"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します"
    }
  },
  {
    "__docId__": 699,
    "kind": "file",
    "name": "src/util/Vectors.js",
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * Vectors\n */\n\n/**\n * ある点の座標(x, y)と時間(time)を管理します\n */\nexport default class Vectors {\n  /**\n   * 座標と現在時間を元にインスタンスを作成します\n   * @param {number} [x=0] 座標 x\n   * @param {number} [y=0] 座標 y\n   * @param {number} [time=Date.now()] 時間 milli seconds\n   */\n  constructor(x = 0, y = 0, time = Date.now()) {\n    /**\n     * 座標 x\n     * @type {number}\n     */\n    this.x = x;\n    /**\n     * 座標 y\n     * @type {number}\n     */\n    this.y = y;\n    /**\n     * 時間 milli seconds\n     * @type {number}\n     */\n    this.time = time;\n    /**\n     * スクロール中かのフラッグ, true: スクロール中\n     * @type {boolean}\n     */\n    this.scrolling = false;\n  }\n  /**\n   * x, y, time プロパティを全て `0` にします\n   * @returns {Vectors} メソッドチェイン可能なようにインスタンスを返します\n   */\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    this.time = 0;\n\n    return this;\n  }\n  /**\n   * x, y, time を更新します\n   * @param {number} x 座標 x\n   * @param {number} y 座標 y\n   * @param {number} [time=Date.now] 時間 milli seconds\n   * @returns {Vectors} メソッドチェイン可能なようにインスタンスを返します\n   */\n  update(x, y, time = Date.now()) {\n    this.x = x;\n    this.y = y;\n    this.time = time;\n\n    return this;\n  }\n  /**\n   * 引数 vectors 間の距離を測ります\n   * @param {Vectors} vectors 計測したい対象 Vector instance\n   * @returns {number} 距離を返します\n   */\n  distance(vectors) {\n    const distanceX = this.x - vectors.x;\n    const distanceY = this.y - vectors.y;\n    const sqrt = (distanceX * distanceX) + (distanceY * distanceY);\n    return Math.sqrt(sqrt);\n  }\n  /**\n   * 引数 vectors との時間差を計算します\n   * @param {Vectors} vectors 計測したい対象 Vector instance\n   * @returns {number} 時間差(milli seconds) を返します\n   */\n  duration(vectors) {\n    return this.time - vectors.time;\n  }\n  /**\n   * 複製を作成し返します\n   * @returns {Vectors} 複製を返します\n   */\n  clone() {\n    const clone = new Vectors(this.x, this.y, this.time);\n    clone.scrolling = this.scrolling;\n    return clone;\n  }\n  /**\n   * ベクトルの大きさの２乗の平方根を計算します\n   * @returns {number} ベクトルの大きさの２乗の平方根を返します\n   */\n  length() {\n    const x = this.x;\n    const y = this.y;\n    return Math.sqrt((x * x) + (y * y));\n  }\n  /**\n   * ベクトルの値を scalar 値で除算します\n   *\n   * @param {number} scalar 除算母数\n   * @returns {Vectors} 除算後の Vector を返します\n   */\n  divideByScalar(scalar) {\n    const clone = this.clone();\n    if (scalar === 0) {\n      clone.x = 0;\n      clone.y = 0;\n    } else {\n      const x = clone.x;\n      const y = clone.y;\n      const inverse = 1 / scalar;\n      clone.x = x * inverse;\n      clone.y = y * inverse;\n    }\n\n    return clone;\n  }\n  /**\n   * ベクトルの値を scalar 値で乗算します\n   *\n   * @param {number} scalar 乗算母数\n   * @returns {Vectors} 乗算後の Vector を返します\n   */\n  multiplyByScalar(scalar) {\n    const clone = this.clone();\n    clone.x *= scalar;\n    clone.y *= scalar;\n    return clone;\n  }\n  /**\n   * 現在の Vectors を元に引数 `maxValue` 以下にした `Vectors` を取得します\n   * @param {number} maxValue 最高目標値\n   * @returns {Vectors} `maxValue` 以下にした `Vectors` を返します\n   */\n  truncate(maxValue) {\n    const minValue = Math.min(maxValue, this.length());\n    const oldLength = this.length();\n    if (oldLength !== 0 && minValue !== oldLength) {\n      return this.multiplyByScalar(minValue / oldLength);\n    }\n    return this.clone();\n  }\n  /**\n   * ベクトルの大きさを正規化（大きさを1）した Vector を作成します\n   * @returns {Vectors} ベクトルの大きさを正規化（大きさを1）した Vectors を返します\n   */\n  normalize() {\n    return this.divideByScalar(this.length());\n  }\n  /**\n   * ベクトルが正規化されているかを判定します\n   * @returns {boolean} true: 正規化されている\n   */\n  isNormalize() {\n    return this.length() === 1;\n  }\n  /**\n   * 引数 vectors との X 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} X 値を減算し返します\n   */\n  betweenX(vectors) {\n    return this.x - vectors.x;\n  }\n  /**\n   * 引数 vectors との Y 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} Y 値を減算し返します\n   */\n  betweenY(vectors) {\n    return this.y - vectors.y;\n  }\n  /**\n   * 引数 vectors との time 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} time 値を減算し返します\n   */\n  betweenTime(vectors) {\n    return this.time - vectors.time;\n  }\n  /**\n   * 引数 vectors との x, y, time 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {Vectors} 引数 vectors との x, y, time 値を減算した clone を返します\n   */\n  between(vectors) {\n    const clone = this.clone();\n    clone.x = clone.betweenX(vectors);\n    clone.y = clone.betweenY(vectors);\n    clone.time = clone.betweenTime(vectors);\n\n    return clone;\n  }\n  /**\n   * 引数ベクトルの内積を計算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} 内積を返します\n   */\n  dot(vectors) {\n    return (this.x * vectors.x) + (this.y * vectors.y);\n  }\n  /**\n   * 引数ベクトルの値(x, y)が等しいかを判定します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {boolean} true: 等しい\n   */\n  equals(vectors) {\n    return (vectors.x === this.x) && (vectors.y === this.y);\n  }\n  /**\n   * 引数ベクトルとの角度を計算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} 角度を返します\n   */\n  angle(vectors) {\n    let v1 = this.clone();\n    let v2 = vectors.clone();\n    if (!v1.isNormalize()) {\n      v1 = v1.normalize();\n    }\n    if (!v2.isNormalize()) {\n      v2 = v2.normalize();\n    }\n    // console.log('angle', v1, v2, v1.dot(v2), Math.acos(v1.dot(v2)));\n    return Math.acos(v1.dot(v2));\n  }\n}\n",
    "static": true,
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/src/util/Vectors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 700,
    "kind": "class",
    "name": "Vectors",
    "memberof": "src/util/Vectors.js",
    "static": true,
    "longname": "src/util/Vectors.js~Vectors",
    "access": "public",
    "export": true,
    "importPath": "./src/util/Vectors.js",
    "importStyle": "Vectors",
    "description": "ある点の座標(x, y)と時間(time)を管理します",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 701,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#constructor",
    "access": "public",
    "description": "座標と現在時間を元にインスタンスを作成します",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "x",
        "description": "座標 x"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "y",
        "description": "座標 y"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now()",
        "defaultRaw": "Date.now()",
        "name": "time",
        "description": "時間 milli seconds"
      }
    ]
  },
  {
    "__docId__": 702,
    "kind": "member",
    "name": "x",
    "memberof": "src/util/Vectors.js~Vectors",
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#x",
    "access": "public",
    "description": "座標 x",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 703,
    "kind": "member",
    "name": "y",
    "memberof": "src/util/Vectors.js~Vectors",
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#y",
    "access": "public",
    "description": "座標 y",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 704,
    "kind": "member",
    "name": "time",
    "memberof": "src/util/Vectors.js~Vectors",
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#time",
    "access": "public",
    "description": "時間 milli seconds",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 705,
    "kind": "member",
    "name": "scrolling",
    "memberof": "src/util/Vectors.js~Vectors",
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#scrolling",
    "access": "public",
    "description": "スクロール中かのフラッグ, true: スクロール中",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 706,
    "kind": "method",
    "name": "reset",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#reset",
    "access": "public",
    "description": "x, y, time プロパティを全て `0` にします ",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} メソッドチェイン可能なようにインスタンスを返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "メソッドチェイン可能なようにインスタンスを返します"
    },
    "params": []
  },
  {
    "__docId__": 710,
    "kind": "method",
    "name": "update",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#update",
    "access": "public",
    "description": "x, y, time を更新します ",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} メソッドチェイン可能なようにインスタンスを返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "座標 x"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "座標 y"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "time",
        "description": "時間 milli seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "メソッドチェイン可能なようにインスタンスを返します"
    }
  },
  {
    "__docId__": 714,
    "kind": "method",
    "name": "distance",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#distance",
    "access": "public",
    "description": "引数 vectors 間の距離を測ります ",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 距離を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vector instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "距離を返します"
    }
  },
  {
    "__docId__": 715,
    "kind": "method",
    "name": "duration",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#duration",
    "access": "public",
    "description": "引数 vectors との時間差を計算します ",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 時間差(milli seconds) を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vector instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "時間差(milli seconds) を返します"
    }
  },
  {
    "__docId__": 716,
    "kind": "method",
    "name": "clone",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#clone",
    "access": "public",
    "description": "複製を作成し返します ",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 複製を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "複製を返します"
    },
    "params": []
  },
  {
    "__docId__": 717,
    "kind": "method",
    "name": "length",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#length",
    "access": "public",
    "description": "ベクトルの大きさの２乗の平方根を計算します ",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} ベクトルの大きさの２乗の平方根を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "ベクトルの大きさの２乗の平方根を返します"
    },
    "params": []
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "divideByScalar",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#divideByScalar",
    "access": "public",
    "description": "ベクトルの値を scalar 値で除算します ",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 除算後の Vector を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scalar",
        "description": "除算母数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "除算後の Vector を返します"
    }
  },
  {
    "__docId__": 719,
    "kind": "method",
    "name": "multiplyByScalar",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#multiplyByScalar",
    "access": "public",
    "description": "ベクトルの値を scalar 値で乗算します ",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 乗算後の Vector を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scalar",
        "description": "乗算母数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "乗算後の Vector を返します"
    }
  },
  {
    "__docId__": 720,
    "kind": "method",
    "name": "truncate",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#truncate",
    "access": "public",
    "description": "現在の Vectors を元に引数 `maxValue` 以下にした `Vectors` を取得します ",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} `maxValue` 以下にした `Vectors` を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxValue",
        "description": "最高目標値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "`maxValue` 以下にした `Vectors` を返します"
    }
  },
  {
    "__docId__": 721,
    "kind": "method",
    "name": "normalize",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#normalize",
    "access": "public",
    "description": "ベクトルの大きさを正規化（大きさを1）した Vector を作成します ",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} ベクトルの大きさを正規化（大きさを1）した Vectors を返します "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "ベクトルの大きさを正規化（大きさを1）した Vectors を返します"
    },
    "params": []
  },
  {
    "__docId__": 722,
    "kind": "method",
    "name": "isNormalize",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#isNormalize",
    "access": "public",
    "description": "ベクトルが正規化されているかを判定します ",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 正規化されている "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 正規化されている"
    },
    "params": []
  },
  {
    "__docId__": 723,
    "kind": "method",
    "name": "betweenX",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#betweenX",
    "access": "public",
    "description": "引数 vectors との X 値を減算します ",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} X 値を減算し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "X 値を減算し返します"
    }
  },
  {
    "__docId__": 724,
    "kind": "method",
    "name": "betweenY",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#betweenY",
    "access": "public",
    "description": "引数 vectors との Y 値を減算します ",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Y 値を減算し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Y 値を減算し返します"
    }
  },
  {
    "__docId__": 725,
    "kind": "method",
    "name": "betweenTime",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#betweenTime",
    "access": "public",
    "description": "引数 vectors との time 値を減算します ",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time 値を減算し返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time 値を減算し返します"
    }
  },
  {
    "__docId__": 726,
    "kind": "method",
    "name": "between",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#between",
    "access": "public",
    "description": "引数 vectors との x, y, time 値を減算します ",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 引数 vectors との x, y, time 値を減算した clone を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "引数 vectors との x, y, time 値を減算した clone を返します"
    }
  },
  {
    "__docId__": 727,
    "kind": "method",
    "name": "dot",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#dot",
    "access": "public",
    "description": "引数ベクトルの内積を計算します ",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 内積を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "内積を返します"
    }
  },
  {
    "__docId__": 728,
    "kind": "method",
    "name": "equals",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#equals",
    "access": "public",
    "description": "引数ベクトルの値(x, y)が等しいかを判定します ",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 等しい "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 等しい"
    }
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "angle",
    "memberof": "src/util/Vectors.js~Vectors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/Vectors.js~Vectors#angle",
    "access": "public",
    "description": "引数ベクトルとの角度を計算します ",
    "lineNumber": 227,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 角度を返します "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "角度を返します"
    }
  },
  {
    "kind": "index",
    "content": "# moku.js\n\n**moku.js**\n\nCopyright (c) inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date from 2016/06/30 - 17:54\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n * This notice shall be included in all copies or substantial portions of the Software.\n\n## ES2015\n\nbabel + webpack を使用します\n\n## ESLint\n\nQuality check tool\n\n\n## ESDoc\n\nDocument 出力は ESDoc を使います\n\n[ESDoc](https://esdoc.org/)\n",
    "longname": "/Users/inazuma15/web/www/inazumatv.js.library/moku.js/babels/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "",
    "longname": "",
    "name": "",
    "static": true,
    "access": "public"
  }
]