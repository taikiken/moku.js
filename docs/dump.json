[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/css/Can.js",
    "memberof": null,
    "longname": "src/css/Can.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 16:47\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 確認用関数\n * @private\n * @static\n * @type {{transition: (()), transform: (())}}\n */\nconst check = {\n  transition() {\n    const p = document.createElement('p');\n    return typeof p.style.transition !== 'undefined' ||\n      typeof p.style.WebkitTransition !== 'undefined' ||\n      typeof p.style.MozTransition !== 'undefined' ||\n      typeof p.style.msTransition !== 'undefined' ||\n      typeof p.style.OTransition !== 'undefined';\n  },\n  transform() {\n    const p = document.createElement('p');\n    return typeof p.style.transform !== 'undefined' ||\n      typeof p.style.WebkitTransform !== 'undefined' ||\n      typeof p.style.MozTransform !== 'undefined' ||\n      typeof p.style.msTransform !== 'undefined' ||\n      typeof p.style.OTransform !== 'undefined';\n  },\n};\n\n/**\n * CSS3 transition\n * @type {boolean}\n * @private\n * @static\n */\nconst transition = check.transition();\n/**\n * CSS3 transform\n * @type {boolean}\n * @private\n * @static\n */\nconst transform = check.transform();\n\n/**\n * CSS3 機能使用可能かを調べます\n */\nexport default class Can {\n  /**\n   * CSS3 transition が使用可能かを調べます\n   * @returns {boolean} true: 使用可能\n   */\n  static transition() {\n    return transition;\n  }\n  /**\n   * CSS3 transform が使用可能かを調べます\n   * @returns {boolean} true: 使用可能\n   */\n  static transform() {\n    return transform;\n  }\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "check",
    "memberof": "src/css/Can.js",
    "longname": "src/css/Can.js~check",
    "access": "private",
    "export": false,
    "importPath": "./src/css/Can.js",
    "importStyle": null,
    "description": "確認用関数",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "{transition: (()), transform: (())}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "transition",
    "memberof": "src/css/Can.js",
    "longname": "src/css/Can.js~transition",
    "access": "private",
    "export": false,
    "importPath": "./src/css/Can.js",
    "importStyle": null,
    "description": "CSS3 transition",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "transform",
    "memberof": "src/css/Can.js",
    "longname": "src/css/Can.js~transform",
    "access": "private",
    "export": false,
    "importPath": "./src/css/Can.js",
    "importStyle": null,
    "description": "CSS3 transform",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Can",
    "memberof": "src/css/Can.js",
    "longname": "src/css/Can.js~Can",
    "access": null,
    "export": true,
    "importPath": "./src/css/Can.js",
    "importStyle": "Can",
    "description": "CSS3 機能使用可能かを調べます",
    "lineNumber": 56,
    "interface": false
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "transition",
    "memberof": "src/css/Can.js~Can",
    "longname": "src/css/Can.js~Can.transition",
    "access": null,
    "description": "CSS3 transition が使用可能かを調べます",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 使用可能"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "transform",
    "memberof": "src/css/Can.js~Can",
    "longname": "src/css/Can.js~Can.transform",
    "access": null,
    "description": "CSS3 transform が使用可能かを調べます",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 使用可能"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 使用可能"
    },
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/css/Patterns.js",
    "memberof": null,
    "longname": "src/css/Patterns.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 13:26\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport { default as Text } from '../util/Text';\n\n/**\n * CSS short hand pattern を管理します\n */\nexport default class Patterns {\n  /**\n   * パターン調査対象の CSS class リスト\n   * @returns {{\n   *  padding: Array<string>,\n   *  margin: Array<string>,\n   *  border-color: Array<string>,\n   *  border-style: Array<string>,\n   *  border-width: Array<string>\n   * }} パターン調査対象の CSS class\n   */\n  static settings() {\n    return {\n      padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n      margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],\n      'border-color': ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n      'border-style': ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n      'border-width': ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n    };\n  }\n  /**\n   * 引数 `str` が調査対象 className かを判定します\n   * @param {string} str CSS className\n   * @returns {boolean} 調査対象の時に true を返します\n   */\n  static match(str) {\n    // camel case を dash(hyphenation)へ変換します\n    const key = Text.dash(str);\n    // settings パターンキーと合致してるかを調査します\n    return Object.keys(Patterns.settings()).indexOf(key) !== -1;\n  }\n  /**\n   * 引数 `str` をキーにした操作対象のリストを取得します\n   * @param {string} str CSS className\n   * @returns {Array<string>|undefined} 引数 `str` をキーにした操作対象のリスト\n   */\n  static get(str) {\n    // camel case を dash(hyphenation)へ変換します\n    const key = Text.dash(str);\n    return Patterns.settings()[key];\n  }\n}\n"
  },
  {
    "__docId__": 8,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Patterns",
    "memberof": "src/css/Patterns.js",
    "longname": "src/css/Patterns.js~Patterns",
    "access": null,
    "export": true,
    "importPath": "./src/css/Patterns.js",
    "importStyle": "Patterns",
    "description": "CSS short hand pattern を管理します",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 9,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "settings",
    "memberof": "src/css/Patterns.js~Patterns",
    "longname": "src/css/Patterns.js~Patterns.settings",
    "access": null,
    "description": "パターン調査対象の CSS class リスト",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{\n padding: Array<string>,\n margin: Array<string>,\n border-color: Array<string>,\n border-style: Array<string>,\n border-width: Array<string>\n}} パターン調査対象の CSS class"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{\n padding: Array<string>,\n margin: Array<string>,\n border-color: Array<string>,\n border-style: Array<string>,\n border-width: Array<string>\n}"
      ],
      "spread": false,
      "description": "パターン調査対象の CSS class"
    },
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "match",
    "memberof": "src/css/Patterns.js~Patterns",
    "longname": "src/css/Patterns.js~Patterns.match",
    "access": null,
    "description": "引数 `str` が調査対象 className かを判定します",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 調査対象の時に true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "CSS className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "調査対象の時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "get",
    "memberof": "src/css/Patterns.js~Patterns",
    "longname": "src/css/Patterns.js~Patterns.get",
    "access": null,
    "description": "引数 `str` をキーにした操作対象のリストを取得します",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>|undefined} 引数 `str` をキーにした操作対象のリスト"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "CSS className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>",
        "undefined"
      ],
      "spread": false,
      "description": "引数 `str` をキーにした操作対象のリスト"
    },
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/css/Style.js",
    "memberof": null,
    "longname": "src/css/Style.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 21:52\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport { default as Type } from '../util/Type';\nimport { default as Text } from '../util/Text';\n\n// css\nimport { default as Patterns } from './Patterns';\n\n/**\n * Element の style を操作します\n */\nexport default class Style {\n  /**\n   * 引数 element の初期 style 設定を保存し復元できるようにします\n   * @param {?Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @returns {Element} 操作対象 Element\n     */\n    this.element = () => element;\n    // @type {string} - オリジナルの element.style.cssText を保持します\n    let css = this.current();\n    /**\n     * インスタンス作成時の inline CSS\n     * @returns {string} インスタンス作成時の inline CSS\n     */\n    this.original = () => css;\n    /**\n     * インスタンス作成時の inline CSS を上書きします\n     * @param {string} style 上書き用 CSS 設定\n     * @returns {string} 上書きされた CSS\n     */\n    this.update = (style) => {\n      css = style;\n      return style;\n    };\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * element style を取得します, `getComputedStyle` を使用します\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n   * @param {Object} view Document.defaultView @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView\n   * @param {Element} element 操作対象 Element\n   * @param {string} [property] 調査対象 CSS property name, 省略すると `CSSStyleDeclaration` 全セットを返します\n   * @returns {CssStyle|string|undefined} style value を返します\n   */\n  static compute(view, element, property) {\n    const style = view.getComputedStyle(element, null);\n    if (Type.exist(property)) {\n      const props = property.replace(/([A-Z])/g, '-$1').toLowerCase();\n      return style.getPropertyValue(props);\n    }\n    return style;\n  }\n\n  /**\n   * CSS 設定値の short hand をパターン {@link Patterns} から探し返します\n   * @param {Object} view Document.defaultView @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView\n   * @param {Element} element 操作対象 Element\n   * @param {Array<string>} patterns 調査対象 CSS property name の配列\n   * @returns {CssStyle|string|undefined} style value を返します\n   */\n  static shortHand(view, element, patterns) {\n    const top = Style.compute(view, element, patterns[0]);\n    const right = Style.compute(view, element, patterns[1]);\n    const bottom = Style.compute(view, element, patterns[2]);\n    const left = Style.compute(view, element, patterns[3]);\n    if (top === bottom) {\n      if (right === left) {\n        if (top === right) {\n          return top;\n        }\n        return `${top} ${right}`;\n      }\n      return `${top} ${right} ${bottom} ${left}`;\n    } else if (right === left) {\n      return `${top} ${right} ${bottom}`;\n    }\n    return `${top} ${right} ${bottom} ${left}`;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * style value を取得します\n   * @param {string} [property] 調査する style property name\n   * @return {string} style value を返します\n   */\n  get(property) {\n    const element = this.element();\n    const ownerDocument = element.ownerDocument;\n    const defaultView = ownerDocument.defaultView;\n    let style = Style.compute(defaultView, element, property);\n    if (style === '' && property && Patterns.match(property)) {\n      style = Style.shortHand(defaultView, element, Patterns.get(property));\n    }\n    return style;\n  }\n  /**\n   * element へ css を設定します、設定済み css を上書きします\n   * @param {string} property 設定する css property name\n   * @param {string} value 設定する css value\n   * @return {boolean} 変更されると true を返します\n   */\n  set(property, value) {\n    // 存在チェック\n    const element = this.element();\n    if (!Type.exist(element)) {\n      return false;\n    }\n    // 存在する時のみ処理を行います\n    const prop = Text.camel(property);\n    element.style[prop] = value;\n\n    return true;\n  }\n  /**\n   * element の inline style(style.cssText) を取得します\n   * @return {string} style.cssText を返します\n   */\n  current() {\n    const element = this.element();\n    if (Type.exist(element)) {\n      return element.style.cssText;\n    }\n\n    // this.element 不正の時は空文字を返します\n    return '';\n  }\n  /**\n   * element の style.cssText をインスタンス作成時点まで戻します\n   * @return {string} 設定した css を返します\n   */\n  restore() {\n    const css = this.original();\n    this.element().style.cssText = css;\n    return css;\n  }\n  /**\n   * `save` 実行時に設定されている inline style を default にします\n   * @returns {string} 設定されている inline style を返します\n   */\n  save() {\n    const style = this.current();\n    return this.update(style);\n  }\n}\n"
  },
  {
    "__docId__": 13,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Style",
    "memberof": "src/css/Style.js",
    "longname": "src/css/Style.js~Style",
    "access": null,
    "export": true,
    "importPath": "./src/css/Style.js",
    "importStyle": "Style",
    "description": "Element の style を操作します",
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 14,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#constructor",
    "access": null,
    "description": "引数 element の初期 style 設定を保存し復元できるようにします",
    "lineNumber": 28,
    "params": [
      {
        "nullable": true,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#element",
    "access": null,
    "description": "操作対象 Element",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} 操作対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "操作対象 Element"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "original",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#original",
    "access": null,
    "description": "インスタンス作成時の inline CSS",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} インスタンス作成時の inline CSS"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "インスタンス作成時の inline CSS"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#update",
    "access": null,
    "description": "インスタンス作成時の inline CSS を上書きします",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 上書きされた CSS"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "上書き用 CSS 設定"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "上書きされた CSS"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "compute",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style.compute",
    "access": null,
    "description": "element style を取得します, `getComputedStyle` を使用します",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle"
    ],
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CssStyle|string|undefined} style value を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "Document.defaultView @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "property",
        "description": "調査対象 CSS property name, 省略すると `CSSStyleDeclaration` 全セットを返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CssStyle",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "style value を返します"
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "shortHand",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style.shortHand",
    "access": null,
    "description": "CSS 設定値の short hand をパターン {@link Patterns} から探し返します",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CssStyle|string|undefined} style value を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "Document.defaultView @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "patterns",
        "description": "調査対象 CSS property name の配列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CssStyle",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "style value を返します"
    },
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#get",
    "access": null,
    "description": "style value を取得します",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "property",
        "description": "調査する style property name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "style value を返します"
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#set",
    "access": null,
    "description": "element へ css を設定します、設定済み css を上書きします",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "設定する css property name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "設定する css value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "変更されると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "current",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#current",
    "access": null,
    "description": "element の inline style(style.cssText) を取得します",
    "lineNumber": 136,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "style.cssText を返します"
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "restore",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#restore",
    "access": null,
    "description": "element の style.cssText をインスタンス作成時点まで戻します",
    "lineNumber": 149,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した css を返します"
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "src/css/Style.js~Style",
    "longname": "src/css/Style.js~Style#save",
    "access": null,
    "description": "`save` 実行時に設定されている inline style を default にします",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定されている inline style を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定されている inline style を返します"
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/dom/Bounding.js",
    "memberof": null,
    "longname": "src/dom/Bounding.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 22:02\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Element の ClientRect 取得します\n */\nexport default class Bounding {\n  /**\n   * 操作対象 Element を保存します\n   * @param {Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n  }\n  /**\n   * `getBoundingClientRect` を使用しプロパティ element の offset 値を取得します\n   * @return {ClientRect} read only ClientRect を返します\n   */\n  offset() {\n    return Bounding.offset(this.element);\n  }\n  /**\n   * writable な element の offset 値を取得します\n   * @return {{\n   *  top: number,\n   *  right: number,\n   *  bottom: number,\n   *  left: number,\n   *  width: number,\n   *  height: number}} writable な element の offset\n   *  */\n  clone() {\n    return Bounding.clone(this.offset());\n  }\n  /**\n   * `getBoundingClientRect` を使用し引数 element の offset 値を取得します\n   *\n   * ```\n   * {{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n   * ```\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n   *\n   * @param {Element} element 調査対象 Element\n   * @return {ClientRect} 引数 element の offset 値を返します\n   */\n  static offset(element) {\n    return element.getBoundingClientRect();\n  }\n  /**\n   * ClientRect の複製を Object 化し writable にします\n   * @param {ClientRect} offset 複製元 ClientRect\n   * @return {{\n   *  top: number,\n   *  right: number,\n   *  bottom: number,\n   *  left: number,\n   *  width: number,\n   *  height: number}} ClientRect の複製 (Object) を返します\n   */\n  static clone(offset) {\n    return {\n      top: offset.top,\n      right: offset.right,\n      bottom: offset.bottom,\n      left: offset.left,\n      width: offset.width,\n      height: offset.height,\n    };\n  }\n}\n"
  },
  {
    "__docId__": 26,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Bounding",
    "memberof": "src/dom/Bounding.js",
    "longname": "src/dom/Bounding.js~Bounding",
    "access": null,
    "export": true,
    "importPath": "./src/dom/Bounding.js",
    "importStyle": "Bounding",
    "description": "Element の ClientRect 取得します",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 27,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding#constructor",
    "access": null,
    "description": "操作対象 Element を保存します",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding#element",
    "access": null,
    "description": "操作対象 Element",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "offset",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding#offset",
    "access": null,
    "description": "`getBoundingClientRect` を使用しプロパティ element の offset 値を取得します",
    "lineNumber": 32,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "read only ClientRect を返します"
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding#clone",
    "access": null,
    "description": "writable な element の offset 値を取得します",
    "lineNumber": 45,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{\n top: number,\n right: number,\n bottom: number,\n left: number,\n width: number,\n height: number}"
      ],
      "spread": false,
      "description": "writable な element の offset"
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "offset",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding.offset",
    "access": null,
    "description": "`getBoundingClientRect` を使用し引数 element の offset 値を取得します\n\n```\n{{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n```",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"
    ],
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "調査対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "引数 element の offset 値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "clone",
    "memberof": "src/dom/Bounding.js~Bounding",
    "longname": "src/dom/Bounding.js~Bounding.clone",
    "access": null,
    "description": "ClientRect の複製を Object 化し writable にします",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "ClientRect"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "複製元 ClientRect"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\n top: number,\n right: number,\n bottom: number,\n left: number,\n width: number,\n height: number}"
      ],
      "spread": false,
      "description": "ClientRect の複製 (Object) を返します"
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/dom/Classes.js",
    "memberof": null,
    "longname": "src/dom/Classes.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 11:38\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * Element の CSS class を操作します\n */\nexport default class Classes {\n  /**\n   * 操作対象 Element を保持します\n   * @param {Element} element 操作対象 Element\n   */\n  constructor(element) {\n    /**\n     * 操作対象 Element\n     * @returns {Element} 操作対象 Element\n     */\n    this.element = () => element;\n  }\n  /**\n   * className を有するかを調べます\n   * @param {string} className 調査対象 CSS class name\n   * @returns {boolean} 存在すると true を返します\n   */\n  has(className) {\n    return Classes.has(this.element(), className);\n  }\n  /**\n   * className を追加します\n   * @param {string} className 追加対象 CSS class name\n   * @returns {boolean} 追加に成功すると true を返します\n   */\n  add(className) {\n    return Classes.add(this.element(), className);\n  }\n  /**\n   * className を削除します\n   * @param {string} className 削除対象 CSS class name\n   * @returns {boolean} 削除に成功すると true を返します\n   */\n  remove(className) {\n    return Classes.remove(this.element(), className);\n  }\n  /**\n   * Elementが引数 className を有するかを調べます\n   * @param {Element} element 操作対象 Element\n   * @param {string} className 調査対象 CSS class name\n   * @returns {boolean} 存在すると true を返します\n   */\n  static has(element, className) {\n    return Array.from(element.classList).indexOf(className) !== -1;\n  }\n  /**\n   * Element へ引数 className を追加します\n   * @param {Element} node 操作対象 Element\n   * @param {string} className 追加対象 CSS class name\n   * @returns {boolean} 追加に成功すると true を返します\n   */\n  static add(node, className) {\n    // CSS class の存在チェック\n    if (Classes.has(node, className)) {\n      return false;\n    }\n    // argument copy\n    const element = node;\n    // @type {Array<string>} - element class を取得し配列へ変換\n    const elementClasses = element.classList ?\n      Array.from(element.classList) :\n      Classes.convert(element);\n    // 置換え配列最後尾に新規 `className` を追加します\n    elementClasses.push(className);\n    // 配列を ' '（ワンスペース）でつなぎ文字列変換後に設定します\n    element.className = elementClasses.join(' ');\n    return true;\n  }\n  /**\n   * Element から引数 className を削除します\n   * @param {Element} node 操作対象 Element\n   * @param {string} className 削除対象 CSS class name\n   * @returns {boolean} 削除に成功すると true を返します\n   */\n  static remove(node, className) {\n    if (!Classes.has(node, className)) {\n      return false;\n    }\n    // argument copy\n    const element = node;\n    // @type {Array<string>} - element class を取得し配列へ変換\n    const elementClasses = element.classList ?\n      Array.from(element.classList) :\n      Classes.convert(element);\n    // 配列での削除対象 class の位置を取得します\n    const index = elementClasses.indexOf(className);\n    // 配列位置を元に削除実行します\n    elementClasses.splice(index, 1);\n    // 削除後配列を ' '（ワンスペース）でつなぎ文字列変換後に設定します\n    element.className = elementClasses.join(' ');\n    return true;\n  }\n  /**\n   * 可哀相な IE のための配列コンバーター, .classList 代用します\n   * @param {Element} element 操作対象 NodeList\n   * @returns {Array} 配列にコンバートして返します\n   */\n  static convert(element) {\n    const arr = element.classList ?\n      element.classList :\n      element.className.split(' ');\n    let i = 0;\n    const limit = arr.length;\n    const empty = [];\n    for (;i < limit; i += 1) {\n      const className = arr[i];\n      if (!!className && className !== ' ') {\n        empty.push(className);\n      }\n    }\n    return empty;\n  }\n}\n"
  },
  {
    "__docId__": 34,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Classes",
    "memberof": "src/dom/Classes.js",
    "longname": "src/dom/Classes.js~Classes",
    "access": null,
    "export": true,
    "importPath": "./src/dom/Classes.js",
    "importStyle": "Classes",
    "description": "Element の CSS class を操作します",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 35,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes#constructor",
    "access": null,
    "description": "操作対象 Element を保持します",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes#element",
    "access": null,
    "description": "操作対象 Element",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} 操作対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "操作対象 Element"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes#has",
    "access": null,
    "description": "className を有するかを調べます",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "調査対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes#add",
    "access": null,
    "description": "className を追加します",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 追加に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "追加対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "追加に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes#remove",
    "access": null,
    "description": "className を削除します",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 削除に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "削除対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "削除に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "has",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes.has",
    "access": null,
    "description": "Elementが引数 className を有するかを調べます",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "調査対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "add",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes.add",
    "access": null,
    "description": "Element へ引数 className を追加します",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 追加に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "追加対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "追加に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "remove",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes.remove",
    "access": null,
    "description": "Element から引数 className を削除します",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 削除に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "操作対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "削除対象 CSS class name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "削除に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "convert",
    "memberof": "src/dom/Classes.js~Classes",
    "longname": "src/dom/Classes.js~Classes.convert",
    "access": null,
    "description": "可哀相な IE のための配列コンバーター, .classList 代用します",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} 配列にコンバートして返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 NodeList"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "配列にコンバートして返します"
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/dom/Elements.js",
    "memberof": null,
    "longname": "src/dom/Elements.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/06 - 21:49\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// css\nimport { default as Style } from '../css/Style';\n\n// don\nimport { default as Bounding } from './Bounding';\nimport { default as Classes } from './Classes';\n\n// util\nimport { default as Type } from '../util/Type';\n\n/**\n * HTMLElement の操作を行います\n */\nexport default class Elements {\n  /**\n   * 操作対象 Element を保存します\n   * @param {Element|Node} element 操作対象 Element\n   */\n  constructor(element) {\n    const style = new Style(element);\n    const classes = new Classes(element);\n    const bounding = new Bounding(element);\n    /**\n     * 対象 Element の CSS 操作を行う Style instance\n     * @returns {Style} Style instance\n     */\n    this.style = () => style;\n    /**\n     * Element class 操作のために instance を作成します\n     * @returns {Classes} Classes instance\n     */\n    this.classes = () => classes;\n    /**\n     * 操作対象 Element\n     * @returns {Element} 操作対象 Element\n     */\n    this.element = () => element;\n    /**\n     * Element class `ClientRect` 取得のために instance を作成します\n     * @returns {Bounding} Element class `ClientRect` 取得のための instance\n     */\n    this.bounding = () => bounding;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * `getBoundingClientRect` を使用し引数 element の offset 値を取得します\n   *\n   * ```\n   * {{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n   * ```\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n   *\n   * @return {ClientRect} プロパティ element の offset 値を返します\n   */\n  offset() {\n    return this.bounding().offset();\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * 引数の id attribute value で HTMLElement を `document.getElementById` で取得します\n   * @param {string} idName id attribute value\n   * @return {?Element} Element を返します, 取得できない時は null を返します\n   */\n  static id(idName) {\n    const element = self.document.getElementById(idName);\n    // 存在チェックを行います\n    return Type.exist(element) ? element : null;\n  }\n  /**\n   * querySelector を使用し Element を探します\n   * @param {string} selector 探索 selector\n   * @param {Element|*} [parentNode=document] 親 Node|Element\n   * @return {?Element} Element or null\n   */\n  static select(selector, parentNode = self.document) {\n    return parentNode.querySelector(selector);\n  }\n\n  /**\n   * querySelectorAll を使用し Element を探します\n   * @param {string} selector 探索 selector\n   * @param {Element|*} [parentNode=document] 親 Node|Element\n   * @return {?NodeList} NodeList or null\n   */\n  static selects(selector, parentNode = self.document) {\n    const elements = parentNode.querySelectorAll(selector);\n    return elements.length > 0 ? elements : null;\n  }\n}\n"
  },
  {
    "__docId__": 45,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Elements",
    "memberof": "src/dom/Elements.js",
    "longname": "src/dom/Elements.js~Elements",
    "access": null,
    "export": true,
    "importPath": "./src/dom/Elements.js",
    "importStyle": "Elements",
    "description": "HTMLElement の操作を行います",
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 46,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#constructor",
    "access": null,
    "description": "操作対象 Element を保存します",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "操作対象 Element"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "style",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#style",
    "access": null,
    "description": "対象 Element の CSS 操作を行う Style instance",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Style} Style instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Style"
      ],
      "spread": false,
      "description": "Style instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "classes",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#classes",
    "access": null,
    "description": "Element class 操作のために instance を作成します",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Classes} Classes instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Classes"
      ],
      "spread": false,
      "description": "Classes instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#element",
    "access": null,
    "description": "操作対象 Element",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} 操作対象 Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "操作対象 Element"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bounding",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#bounding",
    "access": null,
    "description": "Element class `ClientRect` 取得のために instance を作成します",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Bounding} Element class `ClientRect` 取得のための instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Bounding"
      ],
      "spread": false,
      "description": "Element class `ClientRect` 取得のための instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "offset",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements#offset",
    "access": null,
    "description": "`getBoundingClientRect` を使用し引数 element の offset 値を取得します\n\n```\n{{top: Number, right: Number, left: Number, bottom: Number, width: Number, height: Number}}\n```",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"
    ],
    "lineNumber": 70,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ClientRect"
      ],
      "spread": false,
      "description": "プロパティ element の offset 値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "id",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements.id",
    "access": null,
    "description": "引数の id attribute value で HTMLElement を `document.getElementById` で取得します",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "idName",
        "description": "id attribute value"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Element を返します, 取得できない時は null を返します"
    },
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "select",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements.select",
    "access": null,
    "description": "querySelector を使用し Element を探します",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "探索 selector"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "document",
        "defaultRaw": "document",
        "name": "parentNode",
        "description": "親 Node|Element"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Element or null"
    },
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "selects",
    "memberof": "src/dom/Elements.js~Elements",
    "longname": "src/dom/Elements.js~Elements.selects",
    "access": null,
    "description": "querySelectorAll を使用し Element を探します",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "探索 selector"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "document",
        "defaultRaw": "document",
        "name": "parentNode",
        "description": "親 Node|Element"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "NodeList"
      ],
      "spread": false,
      "description": "NodeList or null"
    },
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/EventDispatcher.js",
    "memberof": null,
    "longname": "src/event/EventDispatcher.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/06/30 - 20:09\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport { default as Type } from '../util/Type';\n\n// /**\n//  * private property key, listeners Object\n//  * @type {Symbol}\n//  * @private\n//  */\n// const listenersKey = Symbol('event listeners object');\n\n/**\n * <p>Custom Event を作成し Event 通知を行います</p>\n *\n * ```\n * const callback = (event) => {\n *  console.log(event);\n * };\n *\n * const event = new EventDispatcher();\n * event.on('abc', callback);\n *\n * console.log(event.has('abc', callback));// true\n *\n * event.dispatch(new Events('abc'));\n *\n * event.off('abc', callback);\n * console.log(event.has('abc', callback));// false\n * ```\n *\n * {@link Events}\n */\nexport default class EventDispatcher {\n  /**\n   * listener property をイニシャライズします\n   */\n  constructor() {\n    // @type {Object}\n    let listeners = {};\n    /**\n     * リスナーリストを取得します\n     * @returns {Object} リスナーリストを返します\n     */\n    this.listeners = () => listeners;\n    /**\n     * 全てのリスナーを破棄します\n     * @returns {boolean} 成功・不成功の真偽値を返します\n     */\n    this.destroy = () => {\n      listeners = {};\n      return true;\n    };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * event type に リスナー関数を bind します\n   * @param {string} type event type（種類）\n   * @param {Function} listener callback関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  on(type, listener) {\n    if (!Type.exist(type)) {\n      // type が有効値ではないので処理しない\n      return false;\n    }\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // type {Object} - {{eventType: array [listener: Function...]...}}\n    const listeners = this.listeners();\n\n    if (!Type.hasKey(listeners, type)) {\n      // listeners.type が存在しない場合は\n      // listeners.type をキーに新規配列を作成し\n      // listener {function} を配列へ追加（登録）します\n      listeners[type] = [];\n    }\n    // すでに listeners.type が存在する\n    listeners[type].push(listener);\n    return true;\n  }\n  /**\n   * <p>event type からリスナー関数を remove します<br>\n   * 内部処理は一時的に null 設定にします</p>\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  off(type, listener) {\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // @type {Object} - events.type:String: [listener:Function...]\n    const listeners = this.listeners();\n    if (!Type.hasKey(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // @type {Array} - listener list\n    const types = listeners[type];\n\n    // listener の配列位置を調べる\n    // @type {number}\n    const index = types.indexOf(listener);\n\n    if (index === -1) {\n      // 配列位置が -1, 見つからなかった\n      // 処理しない\n      return false;\n    }\n\n    // すぐに削除するのでは無く null 代入\n    // loop(iterator) の中で off すると index 位置が変わりまずい\n    types[index] = null;\n\n    this.clean(type, types);\n\n    return true;\n  }\n  /**\n   * <p>リスナー配列を調べ可能なら空にします<br>\n   * リスナーリストが全て null の時に 空配列にします</p>\n   * @param {string} type event type（種類）\n   * @param {Array<Function>} types event type に登録されている配列（関数）\n   * @returns {boolean} 成功・不成功の真偽値を返します, true: 空にした\n   */\n  clean(type, types) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n    // Array.some は 戻り値が true の時に走査を止めます\n    // types 配列に null 以外があるかを調べます\n    // @type {boolean} - listener list に 関数(typeof 'function')が存在すると true になります\n    const hasFunction = types.some(listener => Type.method(listener));\n\n    if (!hasFunction) {\n      // null 以外が無いので空にする\n      this.listeners[type] = [];\n    }\n\n    // 空配列にしたかを hasFunction flag を反転させることで知らせます\n    return !hasFunction;\n  }\n  /**\n   * event type にリスナー関数が登録されているかを調べます\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} event type にリスナー関数が登録されているかの真偽値を返します\n   */\n  has(type, listener) {\n    if (!Type.method(listener)) {\n      // listener が 関数でないので処理しない\n      return false;\n    }\n\n    // @type {Object} - events.type:String: [listener:Function...]\n    const listeners = this.listeners();\n\n    if (!Type.hasKey(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // @type {boolean} - 存在チェック\n    return listeners[type].indexOf(listener) !== -1;\n  }\n  /**\n   * イベントを発生させリスナー関数を call します\n   * @param {Events|*} events 送信される Event Object.<br>\n   *   type キーにイベント種類が設定されています、dispatch 時に target プロパティを追加し this を設定します\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  dispatch(events) {\n    // @type {Object} - events.type:string: [listener:Function...]\n    const listeners = this.listeners();\n    // @type {string} - event type\n    const type = events.type;\n\n    if (!Type.hasKey(listeners, type)) {\n      // listener.type が存在しない\n      // 処理しない\n      return false;\n    }\n\n    // event.target = this しようとすると\n    // Assignment to property of function parameter 'event'  no-param-reassign\n    // になるのでコピーし使用します\n    const eventObject = events;\n    // target プロパティに発生元を設定する\n    eventObject.target = this;\n\n    // callback を実行する\n    listeners[type]\n      .map(\n        // @param listener {Function}\n        (listener) => {\n          // null が混じっているのでタイプチェックを行い listener 関数を実行します\n          if (Type.method(listener)) {\n            return listener.call(this, eventObject);\n          }\n          return null;\n        }\n      );\n\n    return true;\n  }\n  /**\n   * **alias on**\n   * <p>event type に リスナー関数を bind します</p>\n   * @deprecated instead use on\n   * @param {string} type event type（種類）\n   * @param {Function} listener callback関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  addEventListener(type, listener) {\n    return this.on(type, listener);\n  }\n  /**\n   * **alias off**\n   * <p>event type からリスナー関数を remove します</p>\n   * @deprecated instead use off\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  removeEventListener(type, listener) {\n    return this.off(type, listener);\n  }\n  /**\n   * **alias has**\n   * <p>event type にリスナー関数が登録されているかを調べます</p>\n   * @deprecated instead use has\n   * @param {string} type event type（種類）\n   * @param {Function} listener リスナー関数\n   * @returns {boolean} event type にリスナー関数が登録されているかの真偽値を返します\n   */\n  hasEventListener(type, listener) {\n    return this.has(type, listener);\n  }\n  /**\n   * **alias dispatch**\n   * <p>イベントを発生させリスナー関数を call します</p>\n   * @deprecated instead use dispatch\n   * @param {Events} events typeキー が必須です\n   * @returns {boolean} 成功・不成功の真偽値を返します\n   */\n  dispatchEvent(events) {\n    return this.dispatch(events);\n  }\n}\n"
  },
  {
    "__docId__": 56,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventDispatcher",
    "memberof": "src/event/EventDispatcher.js",
    "longname": "src/event/EventDispatcher.js~EventDispatcher",
    "access": null,
    "export": true,
    "importPath": "./src/event/EventDispatcher.js",
    "importStyle": "EventDispatcher",
    "description": "<p>Custom Event を作成し Event 通知を行います</p>\n\n```\nconst callback = (event) => {\n console.log(event);\n};\n\nconst event = new EventDispatcher();\nevent.on('abc', callback);\n\nconsole.log(event.has('abc', callback));// true\n\nevent.dispatch(new Events('abc'));\n\nevent.off('abc', callback);\nconsole.log(event.has('abc', callback));// false\n```\n\n{@link Events}",
    "lineNumber": 44,
    "interface": false
  },
  {
    "__docId__": 57,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#constructor",
    "access": null,
    "description": "listener property をイニシャライズします",
    "lineNumber": 48,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "listeners",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#listeners",
    "access": null,
    "description": "リスナーリストを取得します",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} リスナーリストを返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "リスナーリストを返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#destroy",
    "access": null,
    "description": "全てのリスナーを破棄します",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#on",
    "access": null,
    "description": "event type に リスナー関数を bind します",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "callback関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#off",
    "access": null,
    "description": "<p>event type からリスナー関数を remove します<br>\n内部処理は一時的に null 設定にします</p>",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clean",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#clean",
    "access": null,
    "description": "<p>リスナー配列を調べ可能なら空にします<br>\nリスナーリストが全て null の時に 空配列にします</p>",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します, true: 空にした"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Array<Function>"
        ],
        "spread": false,
        "optional": false,
        "name": "types",
        "description": "event type に登録されている配列（関数）"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します, true: 空にした"
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#has",
    "access": null,
    "description": "event type にリスナー関数が登録されているかを調べます",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event type にリスナー関数が登録されているかの真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event type にリスナー関数が登録されているかの真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispatch",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#dispatch",
    "access": null,
    "description": "イベントを発生させリスナー関数を call します",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events",
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "送信される Event Object.<br>\n  type キーにイベント種類が設定されています、dispatch 時に target プロパティを追加し this を設定します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#addEventListener",
    "access": null,
    "description": "**alias on**\n<p>event type に リスナー関数を bind します</p>",
    "lineNumber": 233,
    "deprecated": "instead use on",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "callback関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#removeEventListener",
    "access": null,
    "description": "**alias off**\n<p>event type からリスナー関数を remove します</p>",
    "lineNumber": 244,
    "deprecated": "instead use off",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#hasEventListener",
    "access": null,
    "description": "**alias has**\n<p>event type にリスナー関数が登録されているかを調べます</p>",
    "lineNumber": 255,
    "deprecated": "instead use has",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event type にリスナー関数が登録されているかの真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type（種類）"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "リスナー関数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event type にリスナー関数が登録されているかの真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispatchEvent",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "longname": "src/event/EventDispatcher.js~EventDispatcher#dispatchEvent",
    "access": null,
    "description": "**alias dispatch**\n<p>イベントを発生させリスナー関数を call します</p>",
    "lineNumber": 265,
    "deprecated": "instead use dispatch",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 成功・不成功の真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "typeキー が必須です"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功・不成功の真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Events.js",
    "memberof": null,
    "longname": "src/event/Events.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/12 - 19:07\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * custom Event のリスナー関数引数に送られる Event Object\n *\n * EventDispatcher.dispatch する時の引数として使用します\n *\n * 3つのプロパティは必須項目です、イベントにあわせプロパティを追加します\n *\n * - type: string, イベント種類\n * - target: *, イベント発生インスタンス\n * - currentTarget: *, current イベント発生インスタンス\n */\nexport default class Events {\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} [currentTarget=this] current イベント発生インスタンス\n   * @param {*} [target=this] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget = this, target = this) {\n    /**\n     * イベント種類\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * target instance\n     * @type {*}\n     */\n    this.target = target;\n    /**\n     * currentTarget instance\n     * @type {*}\n     */\n    this.currentTarget = currentTarget;\n  }\n}\n"
  },
  {
    "__docId__": 70,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Events",
    "memberof": "src/event/Events.js",
    "longname": "src/event/Events.js~Events",
    "access": null,
    "export": true,
    "importPath": "./src/event/Events.js",
    "importStyle": "Events",
    "description": "custom Event のリスナー関数引数に送られる Event Object\n\nEventDispatcher.dispatch する時の引数として使用します\n\n3つのプロパティは必須項目です、イベントにあわせプロパティを追加します\n\n- type: string, イベント種類\n- target: *, イベント発生インスタンス\n- currentTarget: *, current イベント発生インスタンス",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Events.js~Events",
    "longname": "src/event/Events.js~Events#constructor",
    "access": null,
    "description": "custom Event Object",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this",
        "defaultRaw": "this",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/event/Events.js~Events",
    "longname": "src/event/Events.js~Events#type",
    "access": null,
    "description": "イベント種類",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "target",
    "memberof": "src/event/Events.js~Events",
    "longname": "src/event/Events.js~Events#target",
    "access": null,
    "description": "target instance",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentTarget",
    "memberof": "src/event/Events.js~Events",
    "longname": "src/event/Events.js~Events#currentTarget",
    "access": null,
    "description": "currentTarget instance",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Rising.js",
    "memberof": null,
    "longname": "src/event/Rising.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 14:37\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport { default as Scrolling } from './Scrolling';\nimport { default as Events } from './Events';\nimport { default as EventDispatcher } from './EventDispatcher';\n\n// hit\nimport { default as Hit } from '../util/Hit';\n\n/**\n * Scrolling class を使用しスクロールトップ位置をチェクし対象 element と window の衝突判定を行います\n */\nexport default class Rising extends EventDispatcher {\n  /**\n   * elements instance と scrolling instance を保存します\n   * @param {Elements} elements 対象 element を Elements インスタンスに変換します\n   * @param {Scrolling} scrolling スクロールトップ監視インスタンス\n   */\n  constructor(elements, scrolling = new Scrolling()) {\n    super();\n    /**\n     * 対象 element を Elements インスタンスに変換します\n     * @return {elements} 対象 element を Elements インスタンスに変換します\n     */\n    this.elements = () => elements;\n    /**\n     * スクロールトップ監視インスタンス\n     * @return {Scrolling} スクロールトップ監視インスタンス\n     */\n    this.scrolling = () => scrolling;\n    const boundScroll = this.scroll.bind(this);\n    /**\n     * bound scroll, Rate.UPDATE event handler\n     * @returns {function} bound scroll\n     */\n    this.boundScroll = () => boundScroll;\n    /**\n     * start 済みフラッグ\n     * @type {boolean}\n     * @default false\n     */\n    this.started = false;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * 衝突イベント\n   * @event COLLISION\n   * @return {string} risingCollision を返します\n   */\n  static get COLLISION() {\n    return 'risingCollision';\n  }\n  /**\n   * 衝突「していない」イベント\n   * @event ALIEN\n   * @return {string} risingAlien を返します\n   */\n  static get ALIEN() {\n    return 'risingAlien';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * fps を監視しスクロール位置を知らせます\n   * @returns {Rising} method chain 可能なように instance を返します\n   */\n  start() {\n    // flag check\n    if (this.started) {\n      return this;\n    }\n    this.started = true;\n    // scrolling\n    const scrolling = this.scrolling();\n    scrolling.on(Scrolling.UPDATE, this.boundScroll());\n    scrolling.start();\n    return this;\n  }\n  /**\n   * fps 監視を止めます\n   * @returns {Rising} method chain 可能なように instance を返します\n   */\n  stop() {\n    if (!this.started) {\n      return this;\n    }\n    this.started = false;\n    const scrolling = this.scrolling();\n    scrolling.off(Scrolling.UPDATE, this.boundScroll());\n    return this;\n  }\n  /**\n   * Scrolling.UPDATE event handler\n   * @param {ScrollEvents} scrollEvents scroll events object\n   * @return {boolean} 衝突時に true を返します\n   */\n  scroll(scrollEvents) {\n    if (!scrollEvents.changed) {\n      return false;\n    }\n    // element offset\n    const offset = this.elements().offset();\n    // hit result\n    const hit = Hit.test(scrollEvents.height, offset);\n    // @type {?Elements}\n    let events = null;\n    if (hit.result) {\n      events = new Events(Rising.COLLISION, this, this);\n    } else {\n      events = new Events(Rising.ALIEN, this, this);\n    }\n    // hit / original / offset を追加します\n    events.hit = hit;\n    events.original = scrollEvents;\n    events.offset = offset;\n    // 発火\n    this.dispatch(events);\n    return hit.result;\n  }\n}\n"
  },
  {
    "__docId__": 76,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Rising",
    "memberof": "src/event/Rising.js",
    "longname": "src/event/Rising.js~Rising",
    "access": null,
    "export": true,
    "importPath": "./src/event/Rising.js",
    "importStyle": "Rising",
    "description": "Scrolling class を使用しスクロールトップ位置をチェクし対象 element と window の衝突判定を行います",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#constructor",
    "access": null,
    "description": "elements instance と scrolling instance を保存します",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Elements"
        ],
        "spread": false,
        "optional": false,
        "name": "elements",
        "description": "対象 element を Elements インスタンスに変換します"
      },
      {
        "nullable": null,
        "types": [
          "Scrolling"
        ],
        "spread": false,
        "optional": false,
        "name": "scrolling",
        "description": "スクロールトップ監視インスタンス"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#elements",
    "access": null,
    "description": "対象 element を Elements インスタンスに変換します",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "elements"
      ],
      "spread": false,
      "description": "対象 element を Elements インスタンスに変換します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scrolling",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#scrolling",
    "access": null,
    "description": "スクロールトップ監視インスタンス",
    "lineNumber": 41,
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "スクロールトップ監視インスタンス"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundScroll",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#boundScroll",
    "access": null,
    "description": "bound scroll, Rate.UPDATE event handler",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound scroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound scroll"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#started",
    "access": null,
    "description": "start 済みフラッグ",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "COLLISION",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising.COLLISION",
    "access": null,
    "description": "衝突イベント",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "COLLISION"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "risingCollision を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "ALIEN",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising.ALIEN",
    "access": null,
    "description": "衝突「していない」イベント",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "ALIEN"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "risingAlien を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#start",
    "access": null,
    "description": "fps を監視しスクロール位置を知らせます",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rising} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Rising"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#started",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#stop",
    "access": null,
    "description": "fps 監視を止めます",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Rising} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Rising"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#started",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scroll",
    "memberof": "src/event/Rising.js~Rising",
    "longname": "src/event/Rising.js~Rising#scroll",
    "access": null,
    "description": "Scrolling.UPDATE event handler",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScrollEvents"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollEvents",
        "description": "scroll events object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "衝突時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Scroll.js",
    "memberof": null,
    "longname": "src/event/Scroll.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/26 - 21:05\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport { default as EventDispatcher } from './EventDispatcher';\nimport { default as ScrollEvents } from './ScrollEvents';\n\n// util\nimport { default as Freeze } from '../util/Freeze';\n\n/**\n * new を許可しないための Symbol\n * @type {Symbol}\n * @private\n */\nconst singletonSymbol = Symbol('Scroll singleton symbol');\n/**\n * singleton instance, nullable\n * @type {?Scroll}\n * @private\n */\nlet instance = null;\n\n/**\n * window scroll event を監視し通知を行います\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const instance = Scroll.factory();\n * ```\n */\nexport default class Scroll extends EventDispatcher {\n  /**\n   * singleton です\n   * @param {Symbol} checkSymbol singleton を保証するための private instance\n   * @returns {Scroll} singleton instance を返します\n   */\n  constructor(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('don\\'t use new, instead use static factory method.');\n    }\n\n    super();\n\n    // instance 作成済みかをチェックし instance が null の時 this を設定します\n    if (instance !== null) {\n      return instance;\n    }\n\n    // onetime setting\n    instance = this;\n\n    // event handler\n    const boundScroll = this.scroll.bind(this);\n    /**\n     * bound scroll, window.onscroll event handler\n     * @returns {function} bound scroll\n     */\n    this.boundScroll = () => boundScroll;\n    // @type {Events} - events instance\n    const events = new ScrollEvents(Scroll.SCROLL, this, this);\n    /**\n     * ScrollEvents instance, 発火時に使用します\n     * @returns {ScrollEvents} ScrollEvents instance\n     */\n    this.events = () => events;\n    /**\n     * 前回 scroll top 位置\n     * @type {number}\n     * @default -1\n     */\n    this.previous = -1;\n    /**\n     * start 済みフラッグ\n     * @type {boolean}\n     * @default false\n     */\n    this.started = false;\n\n    // 設定済み instance を返します\n    return instance;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * scroll で発生するイベントを取得します\n   * @event SCROLL\n   * @returns {string} event, scrollScroll を返します\n   * @default scrollScroll\n   */\n  static get SCROLL() {\n    return 'scrollScroll';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * scroll event を監視します\n   * @returns {Scroll} method chain 可能なように instance を返します\n   */\n  start() {\n    if (this.started) {\n      return this;\n    }\n    this.started = true;\n    window.addEventListener('scroll', this.boundScroll(), false);\n    return this;\n  }\n  /**\n   * scroll event を監視を止めます\n   * @returns {Scroll} method chain 可能なように instance を返します\n   */\n  stop() {\n    if (!this.started) {\n      return this;\n    }\n    this.started = false;\n    window.removeEventListener('scroll', this.boundScroll());\n    return this;\n  }\n  /**\n   * window scroll event handler<br>\n   * window scroll event 発生後に scroll top 位置をもたせた Scroll.SCROLL custom event を発火します\n   * @param {?Event} event window scroll event, nullable\n   * @returns {void}\n   */\n  scroll(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // @type {number} - 前回の scroll top\n    const previous = this.previous;\n\n    // @type {Events} - events\n    const events = this.events();\n    // @type {Event} - scroll event\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    events.previous = previous;\n    // @type {boolean} - 前回の scroll top と比較し移動したかを真偽値で取得します, true: 移動した\n    events.changed = previous !== y;\n    // @type {number} - 移動量 +（正）: down, -（負）: up\n    events.moving = y - previous;\n    // event fire\n    this.dispatch(events);\n    this.previous = y;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * y 位置に scroll top を即座に移動させます\n   * @param {number} [y=0] scroll top 目標値\n   * @param {number} [delay=0] time out 遅延 ms\n   * @returns {number} time out id\n   */\n  static jump(y = 0, delay = 0) {\n    return setTimeout(() => { window.scrollTo(0, y); }, delay);\n  }\n  /**\n   * {@link Freeze}.freeze を実行し scroll 操作を一定期間不能にします\n   * @returns {number} time out ID\n   */\n  static freeze() {\n    return Freeze.freeze();\n  }\n  /**\n   * scroll top 位置\n   * @returns {number} scroll top 位置を返します\n   * @see https://developer.mozilla.org/ja/docs/Web/API/Window/scrollY\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset\n   */\n  static y() {\n    return (typeof window.pageYOffset !== 'undefined') ?\n      window.pageYOffset :\n      (document.documentElement || document.body.parentNode || document.body).scrollTop;\n  }\n  // ----------------------------------------\n  /**\n   * Scroll instance を singleton を保証し作成します\n   * @returns {Scroll} Scroll instance を返します\n   */\n  static factory() {\n    if (instance !== null) {\n      return instance;\n    }\n    return new Scroll(singletonSymbol);\n  }\n}\n"
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "singletonSymbol",
    "memberof": "src/event/Scroll.js",
    "longname": "src/event/Scroll.js~singletonSymbol",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Scroll.js",
    "importStyle": null,
    "description": "new を許可しないための Symbol",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "instance",
    "memberof": "src/event/Scroll.js",
    "longname": "src/event/Scroll.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Scroll.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 31,
    "type": {
      "nullable": true,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Scroll",
    "memberof": "src/event/Scroll.js",
    "longname": "src/event/Scroll.js~Scroll",
    "access": null,
    "export": true,
    "importPath": "./src/event/Scroll.js",
    "importStyle": "Scroll",
    "description": "window scroll event を監視し通知を行います\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst instance = Scroll.factory();\n```",
    "lineNumber": 41,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#constructor",
    "access": null,
    "description": "singleton です",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "singleton を保証するための private instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundScroll",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#boundScroll",
    "access": null,
    "description": "bound scroll, window.onscroll event handler",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound scroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound scroll"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#events",
    "access": null,
    "description": "ScrollEvents instance, 発火時に使用します",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ScrollEvents} ScrollEvents instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": "ScrollEvents instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#previous",
    "access": null,
    "description": "前回 scroll top 位置",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#started",
    "access": null,
    "description": "start 済みフラッグ",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "SCROLL",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll.SCROLL",
    "access": null,
    "description": "scroll で発生するイベントを取得します",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "SCROLL"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, scrollScroll を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "scrollScroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, scrollScroll を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#start",
    "access": null,
    "description": "scroll event を監視します",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#started",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#stop",
    "access": null,
    "description": "scroll event を監視を止めます",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#started",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scroll",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#scroll",
    "access": null,
    "description": "window scroll event handler<br>\nwindow scroll event 発生後に scroll top 位置をもたせた Scroll.SCROLL custom event を発火します",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window scroll event, nullable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll#previous",
    "access": null,
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "jump",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll.jump",
    "access": null,
    "description": "y 位置に scroll top を即座に移動させます",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out id"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "y",
        "description": "scroll top 目標値"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "delay",
        "description": "time out 遅延 ms"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out id"
    },
    "generator": false
  },
  {
    "__docId__": 106,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "freeze",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll.freeze",
    "access": null,
    "description": "{@link Freeze}.freeze を実行し scroll 操作を一定期間不能にします",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out ID"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out ID"
    },
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "y",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll.y",
    "access": null,
    "description": "scroll top 位置",
    "see": [
      "https://developer.mozilla.org/ja/docs/Web/API/Window/scrollY",
      "https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset"
    ],
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} scroll top 位置を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "scroll top 位置を返します"
    },
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "factory",
    "memberof": "src/event/Scroll.js~Scroll",
    "longname": "src/event/Scroll.js~Scroll.factory",
    "access": null,
    "description": "Scroll instance を singleton を保証し作成します",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scroll} Scroll instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scroll"
      ],
      "spread": false,
      "description": "Scroll instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/ScrollEvents.js",
    "memberof": null,
    "longname": "src/event/ScrollEvents.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/20 - 10:54\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport { default as Events } from './Events';\n\n/**\n * Scroll events 管理クラス\n */\nexport default class ScrollEvents extends Events {\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    /**\n     * scroll top 前回位置(px)\n     * @type {number}\n     */\n    this.previous = -1;\n    /**\n     * オリジナルイベント(.onscroll)\n     * @type {?Event}\n     */\n    this.original = null;\n    /**\n     * scroll top 現在位置(px)\n     * @type {number}\n     */\n    this.y = 0;\n    /**\n     * window innerHeight\n     * @type {number}\n     */\n    this.height = 0;\n    /**\n     * window innerWidth\n     * @type {number}\n     */\n    this.width = 0;\n    /**\n     * window 下端位置(scroll top + window height)\n     * @type {number}\n     */\n    this.bottom = 0;\n    /**\n     * scroll top 位置が前回と違うかを表すフラッグ, true: 違う\n     * @type {boolean}\n     */\n    this.changed = false;\n    /**\n     * UP / DOWN と前回からの移動距離(px), 正(+): scroll down\n     * @type {number}\n     */\n    this.moving = 0;\n  }\n}\n"
  },
  {
    "__docId__": 110,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ScrollEvents",
    "memberof": "src/event/ScrollEvents.js",
    "longname": "src/event/ScrollEvents.js~ScrollEvents",
    "access": null,
    "export": true,
    "importPath": "./src/event/ScrollEvents.js",
    "importStyle": "ScrollEvents",
    "description": "Scroll events 管理クラス",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#constructor",
    "access": null,
    "description": "custom Event Object",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#previous",
    "access": null,
    "description": "scroll top 前回位置(px)",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "original",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#original",
    "access": null,
    "description": "オリジナルイベント(.onscroll)",
    "lineNumber": 36,
    "type": {
      "nullable": true,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#y",
    "access": null,
    "description": "scroll top 現在位置(px)",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "height",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#height",
    "access": null,
    "description": "window innerHeight",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "width",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#width",
    "access": null,
    "description": "window innerWidth",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bottom",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#bottom",
    "access": null,
    "description": "window 下端位置(scroll top + window height)",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "changed",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#changed",
    "access": null,
    "description": "scroll top 位置が前回と違うかを表すフラッグ, true: 違う",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moving",
    "memberof": "src/event/ScrollEvents.js~ScrollEvents",
    "longname": "src/event/ScrollEvents.js~ScrollEvents#moving",
    "access": null,
    "description": "UP / DOWN と前回からの移動距離(px), 正(+): scroll down",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Scrolling.js",
    "memberof": null,
    "longname": "src/event/Scrolling.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/04\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport { default as Scroll } from './Scroll';\nimport { default as EventDispatcher } from './EventDispatcher';\nimport { default as ScrollEvents } from './ScrollEvents';\n\n// tick\nimport { default as Rate } from '../tick/Rate';\n\n/**\n * Scroll 位置\n * */\nexport default class Scrolling extends EventDispatcher {\n  /**\n   * singleton です\n   * @param {Rate} [rate=new Rate(Rate.Rate_5)] Rate instance, scroll 監視 fps を設定します\n   * @returns {Scrolling} singleton instance を返します\n   */\n  constructor(rate = new Rate(Rate.RATE_5)) {\n    super();\n    // @type {function}\n    const boundScroll = this.scroll.bind(this);\n    /**\n     * bound scroll, Rate.UPDATE event handler\n     * @returns {function} bound scroll\n     */\n    this.boundScroll = () => boundScroll;\n    // @type {ScrollEvents}\n    const events = new ScrollEvents(Scrolling.UPDATE, this, this);\n    /**\n     * ScrollEvents instance, 発火時に使用します\n     * @returns {ScrollEvents} ScrollEvents instance\n     */\n    this.events = () => events;\n    /**\n     * 前回 scroll top 位置\n     * @type {number}\n     * @default -1\n     */\n    this.previous = -1;\n    /**\n     * start 済みフラッグ\n     * @type {boolean}\n     * @default false\n     */\n    this.started = false;\n    /**\n     * Rate instance\n     * @type {?Rate}\n     */\n    this.rate = rate;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * fps で発生するイベントを取得します\n   * @event SCROLL\n   * @returns {string} event, scrollingScroll を返します\n   * @default scrollingScroll\n   */\n  static get UPDATE() {\n    return 'scrollingUpdate';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * fps を監視しスクロール位置を知らせます\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   */\n  start() {\n    // flag check\n    if (this.started) {\n      return this;\n    }\n    this.started = true;\n    // loop start\n    const rate = this.rate;\n    rate.on(Rate.UPDATE, this.boundScroll());\n    rate.start();\n    return this;\n  }\n  /**\n   * fps 監視を止めます\n   * @returns {Scrolling} method chain 可能なように instance を返します\n   */\n  stop() {\n    if (!this.started) {\n      return this;\n    }\n    this.started = false;\n    this.rate.off(Rate.UPDATE, this.boundScroll());\n    return this;\n  }\n  /**\n   * 指定 rate(fps) 毎にスクロール位置を<br>\n   * scroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n   *\n   * 下記のプロパティをイベント・インスタンスに追加します\n   *\n   * - original {Events} - Rate Events instance\n   * - y {number} - scroll top\n   * - height {number} - window height\n   * - width {number} - window width\n   * - bottom {number} - window bottom 位置 (y + height)\n   * - previous {number} - 前回の scroll top\n   * - moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n   * - wide {boolean} - width が 768 以上の時に true\n   * - changed {boolean} - scroll top が前回と変わっていたら true\n   *\n   * @param {?Event|?Events} event window scroll event, nullable\n   * @returns {void}\n   */\n  scroll(event) {\n    // @type {number} - scroll top\n    const y = Scroll.y();\n    // @type {number} - window height\n    const height = window.innerHeight;\n    // @type {number} - window width\n    const width = window.innerWidth;\n    // @type {number} - previous scroll top\n    const previous = this.previous;\n\n    // @type {ScrollEvents} - events\n    const events = this.events();\n\n    // @type {Event} - Rate Events instance\n    events.original = event;\n    // @type {number} - scroll top\n    events.y = y;\n    // @type {number} - window height\n    events.height = height;\n    // @type {number} - window width\n    events.width = width;\n    // @type {number} - window bottom(y + height)\n    events.bottom = y + height;\n    // @type {boolean} - 移動したかを表します,\n    // event が null の時は強制発火なので移動量 0 （scroll top 位置に変更がない）でも changed を true にします\n    events.changed = event === null || previous !== y;\n    // @type {number} - 前回の y 位置\n    events.previous = previous;\n    // @type {number} - 移動量 +: down, -: up\n    events.moving = y - previous;\n    // event fire\n    // console.log('Scrolling.scroll', events);\n    this.dispatch(events);\n\n    // save scroll top -> previous\n    this.previous = y;\n  }\n  /**\n   * 強制的に Scrolling.SCROLL event を発火させます\n   * @returns {void}\n   */\n  fire() {\n    this.scroll(null);\n  }\n}\n"
  },
  {
    "__docId__": 121,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Scrolling",
    "memberof": "src/event/Scrolling.js",
    "longname": "src/event/Scrolling.js~Scrolling",
    "access": null,
    "export": true,
    "importPath": "./src/event/Scrolling.js",
    "importStyle": "Scrolling",
    "description": "Scroll 位置",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#constructor",
    "access": null,
    "description": "singleton です",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Rate"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "new",
        "defaultRaw": "new",
        "name": "rate",
        "description": "Rate(Rate.Rate_5)] Rate instance, scroll 監視 fps を設定します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundScroll",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#boundScroll",
    "access": null,
    "description": "bound scroll, Rate.UPDATE event handler",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound scroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound scroll"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#events",
    "access": null,
    "description": "ScrollEvents instance, 発火時に使用します",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ScrollEvents} ScrollEvents instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScrollEvents"
      ],
      "spread": false,
      "description": "ScrollEvents instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#previous",
    "access": null,
    "description": "前回 scroll top 位置",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#started",
    "access": null,
    "description": "start 済みフラッグ",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rate",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#rate",
    "access": null,
    "description": "Rate instance",
    "lineNumber": 63,
    "type": {
      "nullable": true,
      "types": [
        "Rate"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UPDATE",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling.UPDATE",
    "access": null,
    "description": "fps で発生するイベントを取得します",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "SCROLL"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, scrollingScroll を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "scrollingScroll"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, scrollingScroll を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#start",
    "access": null,
    "description": "fps を監視しスクロール位置を知らせます",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#started",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#stop",
    "access": null,
    "description": "fps 監視を止めます",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#started",
    "access": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scroll",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#scroll",
    "access": null,
    "description": "指定 rate(fps) 毎にスクロール位置を<br>\nscroll top 位置をもたせた Scrolling.UPDATE custom event を発火します\n\n下記のプロパティをイベント・インスタンスに追加します\n\n- original {Events} - Rate Events instance\n- y {number} - scroll top\n- height {number} - window height\n- width {number} - window width\n- bottom {number} - window bottom 位置 (y + height)\n- previous {number} - 前回の scroll top\n- moving {number} - 前回からの移動量, 正: scroll down, 負: scroll up\n- wide {boolean} - width が 768 以上の時に true\n- changed {boolean} - scroll top が前回と変わっていたら true",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "Event",
          "?Events"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window scroll event, nullable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "previous",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#previous",
    "access": null,
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fire",
    "memberof": "src/event/Scrolling.js~Scrolling",
    "longname": "src/event/Scrolling.js~Scrolling#fire",
    "access": null,
    "description": "強制的に Scrolling.SCROLL event を発火させます",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/ScrollingSingle.js",
    "memberof": null,
    "longname": "src/event/ScrollingSingle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/30 - 15:16\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport { default as Scrolling } from './Scrolling';\n\n/**\n * singleton instance, nullable\n * @type {?Scrolling}\n * @private\n */\nlet instance = null;\n\n/**\n * Scrolling instance を singleton 提供します\n */\nexport default class ScrollingSingle {\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Scrolling instance を singleton を保証し作成します\n   * @returns {Scrolling} Scrolling instance を返します\n   */\n  static factory() {\n    if (instance !== null) {\n      return instance;\n    }\n    instance = new Scrolling();\n    return instance;\n  }\n}\n"
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "instance",
    "memberof": "src/event/ScrollingSingle.js",
    "longname": "src/event/ScrollingSingle.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/event/ScrollingSingle.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 20,
    "type": {
      "nullable": true,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ScrollingSingle",
    "memberof": "src/event/ScrollingSingle.js",
    "longname": "src/event/ScrollingSingle.js~ScrollingSingle",
    "access": null,
    "export": true,
    "importPath": "./src/event/ScrollingSingle.js",
    "importStyle": "ScrollingSingle",
    "description": "Scrolling instance を singleton 提供します",
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 139,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "factory",
    "memberof": "src/event/ScrollingSingle.js~ScrollingSingle",
    "longname": "src/event/ScrollingSingle.js~ScrollingSingle.factory",
    "access": null,
    "description": "Scrolling instance を singleton を保証し作成します",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scrolling} Scrolling instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Scrolling"
      ],
      "spread": false,
      "description": "Scrolling instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Touching.js",
    "memberof": null,
    "longname": "src/event/Touching.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * f\n */\n\n// event\nimport { default as EventDispatcher } from './EventDispatcher';\nimport { default as TouchingEvents } from './TouchingEvents';\n\n// util\nimport { default as Vectors } from '../util/Vectors';\nimport { default as Type } from '../util/Type';\n\n/**\n * Touch event を監視し y方向移動が `threshold` 以内の時に `TOUCH` event を発火します\n */\nexport default class Touching extends EventDispatcher {\n  /**\n   * 処理対象 element などを保存します\n   * @param {Element} element 処理対象 Element\n   * @param {boolean} [canceling=false] touchmove 中に `preventDefault` を行う\n   * @param {number} [threshold=10] y 方向閾値\n   */\n  constructor(element, canceling = false, threshold = 10) {\n    super();\n    /**\n     * 処理対象 Element\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * touchmove 中に `preventDefault` を行うかのフラッグ\n     * @type {boolean}\n     * @default false\n     */\n    this.canceling = canceling;\n    /**\n     * y 方向閾値, default: 10px\n     * @type {number}\n     * @default 10\n     */\n    this.threshold = threshold;\n    // @type {function}\n    const boundStart = this.onStart.bind(this);\n    /**\n     * bound onStart\n     * @returns {function} bound onStart\n     */\n    this.boundStart = () => boundStart;\n    const boundMove = this.onMove.bind(this);\n    /**\n     * bound onMove\n     * @returns {function} bound onMove\n     */\n    this.boundMove = () => boundMove;\n    const boundEnd = this.onEnd.bind(this);\n    /**\n     * bound onEnd\n     * @returns {function} bound onEnd\n     */\n    this.boundEnd = () => boundEnd;\n    const boundCancel = this.onCancel.bind(this);\n    /**\n     * bound onCancel\n     * @returns {function} onCancel onStart\n     */\n    this.boundCancel = () => boundCancel;\n    const boundBlur = this.onBlur.bind(this);\n    /**\n     * bound onBlur\n     * @returns {function} bound onBlur\n     */\n    this.boundBlur = () => boundBlur;\n    const vectors = {\n      start: new Vectors(),\n      end: new Vectors(),\n      moving: [].slice(0),\n    };\n    /**\n     * 位置管理を行う Vectors instance\n     * @returns {{start: Vectors, end: Vectors, moving: Array.<Vectors>}} vectors object\n     */\n    this.vectors = () => vectors;\n  }\n  // ---------------------------------------------------\n  //  EVENT\n  // ---------------------------------------------------\n  /**\n   * touchstart event type\n   * @event START\n   * @returns {string} touchingStart を返します\n   */\n  static get START() {\n    return 'touchingStart';\n  }\n  /**\n   * touchend event type\n   * @event END\n   * @returns {string} touchingEnd を返します\n   */\n  static get END() {\n    return 'touchingEnd';\n  }\n  /**\n   * touchend event type\n   * @event CANCEL\n   * @returns {string} touchingCancel を返します\n   */\n  static get CANCEL() {\n    return 'touchingCancel';\n  }\n  /**\n   * touchmove event type\n   * @event MOVE\n   * @returns {string} touchingMove を返します\n   */\n  static get MOVE() {\n    return 'touchingMove';\n  }\n  /**\n   * touch(click) event type\n   * @event TOUCH\n   * @returns {string} touchingTouch を返します\n   */\n  static get TOUCH() {\n    return 'touchingTouch';\n  }\n  // ---------------------------------------------------\n  //  METHOD\n  // ---------------------------------------------------\n  /**\n   * 初期処理<br>\n   * element への `touchstart` と<br>\n   * window.blur event をそれぞれ bind します\n   * @returns {void}\n   */\n  init() {\n    this.element.addEventListener('touchstart', this.boundStart(), false);\n    window.addEventListener('blur', this.boundBlur(), false);\n  }\n  /**\n   * touchstart event handler\n   * @param {Event} event touchstart event\n   * @returns {void}\n   */\n  onStart(event) {\n    // event unbind <- 二重 bind にならないように\n    this.dispose();\n    // vectors を初期化\n    this.reset();\n    // 現在 position を保存\n    const vectors = this.vectors();\n    const point = Touching.point(event);\n    vectors.start.update(point.x, point.y);\n    vectors.moving.push(vectors.start);\n\n    // キャンセル event 監視を開始\n    const body = document.body;\n    body.addEventListener('touchend', this.boundEnd(), false);\n    body.addEventListener('touchmove', this.boundMove(), false);\n    body.addEventListener('touchcancel', this.boundCancel(), false);\n\n    // Touching.START 発火\n    this.dispatch(new TouchingEvents(\n      Touching.START,\n      this,\n      event,\n      vectors.start\n    ));\n  }\n  /**\n   * touchmove event handler\n   * @param {Event} event touchmove event\n   * @returns {void}\n   */\n  onMove(event) {\n    // console.log('Touching.onMove', event);\n    const vectors = this.vectors();\n    const movingArray = vectors.moving;\n\n    // 現在 position\n    const point = Touching.point(event);\n    const position = new Vectors(point.x, point.y, Date.now());\n\n    // 前回 position <- moving 配列最後\n    const previous = movingArray.pop();\n    // 戻す\n    movingArray.push(previous);\n\n    // scroll checked\n    const scrolling = Touching.scrolling(position, previous, this.threshold);\n    position.scrolling = scrolling;\n    // 現在 position を配列後ろにセット\n    movingArray.push(position);\n\n    // global cancel と 閾値チェックで `preventDefault` を実行し scroll を止める\n    if (this.canceling && !scrolling) {\n      event.preventDefault();\n    }\n\n    // 移動量\n    const between = position.between(previous);\n\n    // Touching.MOVE 発火\n    this.dispatch(new TouchingEvents(\n      Touching.MOVE,\n      this,\n      event,\n      position,\n      between,\n      scrolling,\n    ));\n  }\n  /**\n   * touchend event handler\n   * @param {Event} event touchend event\n   * @returns {void}\n   */\n  onEnd(event) {\n    // console.log('Touching.onEnd', event);\n    const vectors = this.vectors();\n\n    // 現在 position\n    const point = Touching.point(event);\n    const position = new Vectors(point.x, point.y, Date.now());\n\n    // 前回 position を touchstart 位置としチェックします\n    const previous = vectors.start;\n    const scrolling = Touching.scrolling(position, previous, this.threshold);\n    position.scrolling = scrolling;\n\n    // global cancel と 閾値チェックで `preventDefault` を実行し scroll を止める\n    if (this.canceling && !scrolling) {\n      event.preventDefault();\n    }\n\n    // 移動量\n    const between = position.between(previous);\n\n    // Touching.END 発火\n    this.dispatch(new TouchingEvents(\n      Touching.END,\n      this,\n      event,\n      position,\n      between,\n      scrolling\n    ));\n\n    // Touching.Touch 発火\n    this.dispatch(new TouchingEvents(\n      Touching.TOUCH,\n      this,\n      event,\n      position,\n      between,\n      scrolling\n    ));\n  }\n  /**\n   * touchcancel event handler<br>\n   * 処理をキャンセルします\n   * @param {Event} event touchend event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  onCancel(event) {\n    return this.abort(event);\n  }\n  /**\n   * window.blur event handler<br>\n   * 処理をキャンセルします\n   * @param {Event} event window blur event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  onBlur(event) {\n    return this.abort(event);\n  }\n  /**\n   * touch event での処理をキャンセルし、設定値を初期値に戻します\n   * @param {Event} event touch / window.onblur Event\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  abort(event) {\n    this.dispose();\n    this.reset();\n    this.dispatch(new TouchingEvents(\n      Touching.CANCEL,\n      this,\n      event,\n    ));\n    return true;\n  }\n  /**\n   * bind した event を unbind します\n   * @returns {boolean} 正常終了時に true を返します\n   */\n  dispose() {\n    const body = document.body;\n\n    body.removeEventListener('touchend', this.boundEnd());\n    body.removeEventListener('touchmove', this.boundMove());\n    body.removeEventListener('touchcancel', this.boundCancel());\n    return true;\n  }\n  /**\n   * 移動監視に使用した vectors instance を全て reset します\n   * @returns {{start: Vectors, end: Vectors, moving: Array.<Vectors>}}\n   * reset 後の vectors instance を返します\n   */\n  reset() {\n    const vectors = this.vectors();\n    vectors.start.reset();\n    vectors.end.reset();\n    vectors.moving = [].slice(0);\n\n    return vectors;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * y 方向移動が threshold 以内か判定します\n   * @param {Vectors} pointA スタートポイント(Vectors)\n   * @param {Vectors} pointB エンドポイント(Vectors)\n   * @param {number} threshold 閾値\n   * @returns {boolean} true の時は閾値以上なのでスクロール判定になります\n   */\n  static scrolling(pointA, pointB, threshold) {\n    const y = pointA.betweenY(pointB);\n    // 正数値にし閾値と比較\n    return Math.abs(y) >= threshold;\n  }\n  /**\n   * MouseEvent|TouchEvent から pageX / pageY 座標を取得します\n   * @param {MouseEvent|TouchEvent} event down / move / up event object\n   * @returns {{x: number, y: number}} pageX / pageY 座標を返します\n   */\n  static point(event) {\n    const x = event.pageX;\n    const y = event.pageY;\n\n    // event.pageX / pageY があればそのまま値を返します\n    // Android で pageX / pageY 存在しても 0, 0 しか返さない端末あり\n    if (Type.number(x) && Type.number(y) && (x !== 0 && y !== 0)) {\n      return { x, y };\n    }\n\n    // event.pageX / pageY がない時は TouchEvent の changedTouches から取得します\n    // touch event\n    // @type {TouchList}\n    const touches = event.changedTouches || event.touches;\n    // touches が取得できない時は 0 をセットし返します\n    if (!Type.exist(touches)) {\n      return { x: 0, y: 0 };\n    }\n\n    // changedTouches list の先頭データを取り出し pageX / pageY を取得します\n    // @type {Touch}\n    const touch = touches[0];\n    return { x: touch.pageX, y: touch.pageY };\n  }\n}\n"
  },
  {
    "__docId__": 141,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Touching",
    "memberof": "src/event/Touching.js",
    "longname": "src/event/Touching.js~Touching",
    "access": null,
    "export": true,
    "importPath": "./src/event/Touching.js",
    "importStyle": "Touching",
    "description": "Touch event を監視し y方向移動が `threshold` 以内の時に `TOUCH` event を発火します",
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#constructor",
    "access": null,
    "description": "処理対象 element などを保存します",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "処理対象 Element"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "canceling",
        "description": "touchmove 中に `preventDefault` を行う"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "threshold",
        "description": "y 方向閾値"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#element",
    "access": null,
    "description": "処理対象 Element",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canceling",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#canceling",
    "access": null,
    "description": "touchmove 中に `preventDefault` を行うかのフラッグ",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "threshold",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#threshold",
    "access": null,
    "description": "y 方向閾値, default: 10px",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "10"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundStart",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#boundStart",
    "access": null,
    "description": "bound onStart",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound onStart"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound onStart"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundMove",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#boundMove",
    "access": null,
    "description": "bound onMove",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound onMove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound onMove"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundEnd",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#boundEnd",
    "access": null,
    "description": "bound onEnd",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound onEnd"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound onEnd"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundCancel",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#boundCancel",
    "access": null,
    "description": "bound onCancel",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} onCancel onStart"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "onCancel onStart"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundBlur",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#boundBlur",
    "access": null,
    "description": "bound onBlur",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound onBlur"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound onBlur"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "vectors",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#vectors",
    "access": null,
    "description": "位置管理を行う Vectors instance",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{start: Vectors, end: Vectors, moving: Array.<Vectors>}} vectors object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{start: Vectors, end: Vectors, moving: Array.<Vectors>}"
      ],
      "spread": false,
      "description": "vectors object"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "START",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.START",
    "access": null,
    "description": "touchstart event type",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "START"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} touchingStart を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "touchingStart を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "END",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.END",
    "access": null,
    "description": "touchend event type",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "END"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} touchingEnd を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "touchingEnd を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "CANCEL",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.CANCEL",
    "access": null,
    "description": "touchend event type",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "CANCEL"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} touchingCancel を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "touchingCancel を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "MOVE",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.MOVE",
    "access": null,
    "description": "touchmove event type",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "MOVE"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} touchingMove を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "touchingMove を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "TOUCH",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.TOUCH",
    "access": null,
    "description": "touch(click) event type",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "TOUCH"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} touchingTouch を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "touchingTouch を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#init",
    "access": null,
    "description": "初期処理<br>\nelement への `touchstart` と<br>\nwindow.blur event をそれぞれ bind します",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onStart",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#onStart",
    "access": null,
    "description": "touchstart event handler",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchstart event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onMove",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#onMove",
    "access": null,
    "description": "touchmove event handler",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchmove event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onEnd",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#onEnd",
    "access": null,
    "description": "touchend event handler",
    "lineNumber": 228,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchend event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onCancel",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#onCancel",
    "access": null,
    "description": "touchcancel event handler<br>\n処理をキャンセルします",
    "lineNumber": 275,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touchend event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onBlur",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#onBlur",
    "access": null,
    "description": "window.blur event handler<br>\n処理をキャンセルします",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window blur event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "abort",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#abort",
    "access": null,
    "description": "touch event での処理をキャンセルし、設定値を初期値に戻します",
    "lineNumber": 292,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "touch / window.onblur Event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispose",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#dispose",
    "access": null,
    "description": "bind した event を unbind します",
    "lineNumber": 306,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正常終了時に true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正常終了時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching#reset",
    "access": null,
    "description": "移動監視に使用した vectors instance を全て reset します",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{start: Vectors, end: Vectors, moving: Array.<Vectors>}}\nreset 後の vectors instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{start: Vectors, end: Vectors, moving: Array.<Vectors>}"
      ],
      "spread": false,
      "description": "reset 後の vectors instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "scrolling",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.scrolling",
    "access": null,
    "description": "y 方向移動が threshold 以内か判定します",
    "lineNumber": 337,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true の時は閾値以上なのでスクロール判定になります"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "pointA",
        "description": "スタートポイント(Vectors)"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "pointB",
        "description": "エンドポイント(Vectors)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "threshold",
        "description": "閾値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true の時は閾値以上なのでスクロール判定になります"
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "point",
    "memberof": "src/event/Touching.js~Touching",
    "longname": "src/event/Touching.js~Touching.point",
    "access": null,
    "description": "MouseEvent|TouchEvent から pageX / pageY 座標を取得します",
    "lineNumber": 347,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{x: number, y: number}} pageX / pageY 座標を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MouseEvent",
          "TouchEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "down / move / up event object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{x: number, y: number}"
      ],
      "spread": false,
      "description": "pageX / pageY 座標を返します"
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/TouchingEvents.js",
    "memberof": null,
    "longname": "src/event/TouchingEvents.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * TouchingEvents\n */\n\n// events\nimport { default as Events } from './Events';\n\n// util\nimport { default as Vectors } from '../util/Vectors';\n\n/**\n * Touching events object\n */\nexport default class TouchingEvents extends Events {\n  /**\n   * Touching events object 各プロパティを設定します\n   * @param {string} type event type\n   * @param {*} target イベント発生インスタンス\n   * @param {Event} origin 発生時のオリジナルイベント\n   * @param {Vectors} current 現在の位置\n   * @param {Vectors} between 前回位置との差\n   * @param {boolean} scrolling scroll したかの真偽値, true: scroll している\n   */\n  constructor(\n    type,\n    target,\n    origin,\n    current = new Vectors(),\n    between = new Vectors(),\n    scrolling = false) {\n    // super\n    super(type, target);\n    /**\n     * 発生時のオリジナルイベント\n     * @type {Event}\n     */\n    this.origin = origin;\n    /**\n     * 現在の位置\n     * @type {Vectors}\n     */\n    this.current = current;\n    /**\n     * 前回位置との差\n     * @type {Vectors}\n     */\n    this.between = between;\n    /**\n     * scroll したかの真偽値\n     * @type {boolean}\n     */\n    this.scrolling = scrolling;\n  }\n}\n"
  },
  {
    "__docId__": 169,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TouchingEvents",
    "memberof": "src/event/TouchingEvents.js",
    "longname": "src/event/TouchingEvents.js~TouchingEvents",
    "access": null,
    "export": true,
    "importPath": "./src/event/TouchingEvents.js",
    "importStyle": "TouchingEvents",
    "description": "Touching events object",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 170,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/TouchingEvents.js~TouchingEvents",
    "longname": "src/event/TouchingEvents.js~TouchingEvents#constructor",
    "access": null,
    "description": "Touching events object 各プロパティを設定します",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "event type"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "発生時のオリジナルイベント"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "current",
        "description": "現在の位置"
      },
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "between",
        "description": "前回位置との差"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "scrolling",
        "description": "scroll したかの真偽値, true: scroll している"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "origin",
    "memberof": "src/event/TouchingEvents.js~TouchingEvents",
    "longname": "src/event/TouchingEvents.js~TouchingEvents#origin",
    "access": null,
    "description": "発生時のオリジナルイベント",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Event"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "current",
    "memberof": "src/event/TouchingEvents.js~TouchingEvents",
    "longname": "src/event/TouchingEvents.js~TouchingEvents#current",
    "access": null,
    "description": "現在の位置",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "between",
    "memberof": "src/event/TouchingEvents.js~TouchingEvents",
    "longname": "src/event/TouchingEvents.js~TouchingEvents#between",
    "access": null,
    "description": "前回位置との差",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scrolling",
    "memberof": "src/event/TouchingEvents.js~TouchingEvents",
    "longname": "src/event/TouchingEvents.js~TouchingEvents#scrolling",
    "access": null,
    "description": "scroll したかの真偽値",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/Wheel.js",
    "memberof": null,
    "longname": "src/event/Wheel.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/26 - 19:12\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport { default as EventDispatcher } from './EventDispatcher';\nimport { default as WheelEvents } from './WheelEvents';\n\n/**\n * new を許可しないための Symbol\n * @type {Symbol}\n * @private\n */\nconst singletonSymbol = Symbol('Scroll singleton symbol');\n/**\n * singleton instance, nullable\n * @type {?Wheel}\n * @private\n */\nlet instance = null;\n\n/**\n * mousewheel event を監視し通知を行います\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const instance:Wheel = Wheel.factory();\n * ```\n */\nexport default class Wheel extends EventDispatcher {\n  /**\n   * singleton です\n   * @param {Symbol} checkSymbol singleton を保証するための private instance\n   * @returns {Wheel} singleton instance を返します\n   */\n  constructor(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('don\\'t use new, instead use static factory method.');\n    }\n\n    super();\n\n    // instance 作成済みかをチェックし instance が null の時 this を設定します\n    if (instance !== null) {\n      return instance;\n    }\n\n    // onetime setting\n    instance = this;\n\n    // event handler\n    const boundWheel = this.mouseWheel.bind(this);\n    /**\n     * bound mouseWheel\n     * @returns {function} window.wheel event handler\n     */\n    this.boundWheel = () => boundWheel;\n    /**\n     * 閾値, wheel 移動量が閾値を超えたときにイベントを発生させます\n     * @type {number}\n     * @default 200\n     */\n    this.threshold = 200;\n    /**\n     * wheelDelta 移動量が閾値を超えるかをチェックするための積算計算変数\n     * @type {number}\n     */\n    this.moved = 0;\n    /**\n     * start flag\n     * @type {boolean}\n     */\n    this.started = false;\n    const events = {\n      up: new WheelEvents(Wheel.UP, this),\n      down: new WheelEvents(Wheel.DOWN, this),\n    };\n    /**\n     * UP / DOWN Events instance\n     * @returns {{up: WheelEvents, down: WheelEvents}} UP / DOWN Events instance\n     */\n    this.events = () => events;\n\n    // 設定済み instance を返します\n    return instance;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * wheel up で発生するイベントを取得します\n   * @event UP\n   * @returns {string} event, wheelUp を返します\n   * @default wheelUp\n   */\n  static get UP() {\n    return 'wheelUp';\n  }\n  /**\n   * wheel  で発生するイベントを取得します\n   * @event DOWN\n   * @returns {string} event, wheelUp を返します\n   * @default wheelUp\n   */\n  static get DOWN() {\n    return 'wheelDown';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * mousewheel event を監視します\n   * @returns {Wheel} method chain 可能なように instance を返します\n   */\n  start() {\n    if (this.started) {\n      return this;\n    }\n    this.started = true;\n    // this.unwatch();\n    window.addEventListener('wheel', this.boundWheel(), false);\n    return this;\n  }\n  /**\n   * mousewheel event を監視を止めます\n   * @returns {Wheel} method chain 可能なように instance を返します\n   */\n  stop() {\n    if (!this.started) {\n      return this;\n    }\n    this.started = false;\n    window.removeEventListener('wheel', this.boundWheel());\n    return this;\n  }\n  /**\n   * window mousewheel event handler\n   * <p>delta 値を取得し `this.moving` を実行します</p>\n   *\n   * @listens {WheelEvent} WheelEvent.wheel\n   * @param {WheelEvent} event window wheel event\n   * @returns {number} 前回移動量に delta 値 を加算した値を返します\n   */\n  mouseWheel(event) {\n    const wheelDelta = event.deltaY;\n    return this.moving(wheelDelta);\n  }\n  /**\n   * mouse delta から移動量を計算します\n   * @param {number} delta mouse delta 値\n   * @returns {number} 前回移動量に delta 値 を加算した値を返します\n   */\n  moving(delta) {\n    /**\n     * 移動量が閾値を超えるかをチェックするための計算変数\n     * @type {number}\n     */\n    this.moved += delta;\n    // @type {number}\n    const moved = this.moved;\n\n    // 0 check\n    if (moved === 0) {\n      // 移動量が 0 なので処理をしない\n      return moved;\n    }\n\n    // 閾値チェック\n    if (Math.abs(moved) >= this.threshold) {\n      // scroll event を発火します\n      if (moved > 0) {\n        // scroll up\n        this.up(moved);\n      } else {\n        this.down(moved);\n      }\n\n      // initialize moved, 発火後に積算移動変数を初期化します\n      this.moved = 0;\n      return moved;\n    }\n    // 閾値を超えていないので処理をしない\n    return moved;\n  }\n  /**\n   * scroll up イベントを発火します\n   * @param {number} moved 移動量\n   * @returns {number} 加算移動量を返します\n   */\n  up(moved) {\n    // @type {Events}\n    const events = this.events().up;\n    events.moved = moved;\n    this.dispatch(events);\n\n    return moved;\n  }\n  /**\n   * scroll down イベントを発火します\n   * @param {number} moved 移動量\n   * @returns {number} 加算移動量を返します\n   */\n  down(moved) {\n    // @type {Events}\n    const events = this.events().down;\n    events.moved = moved;\n    this.dispatch(events);\n\n    return moved;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Wheel instance を singleton を保証し作成します\n   * @returns {Wheel} Wheel instance を返します\n   */\n  static factory() {\n    if (instance !== null) {\n      return instance;\n    }\n    return new Wheel(singletonSymbol);\n  }\n}\n"
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "singletonSymbol",
    "memberof": "src/event/Wheel.js",
    "longname": "src/event/Wheel.js~singletonSymbol",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Wheel.js",
    "importStyle": null,
    "description": "new を許可しないための Symbol",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "instance",
    "memberof": "src/event/Wheel.js",
    "longname": "src/event/Wheel.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/event/Wheel.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 28,
    "type": {
      "nullable": true,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Wheel",
    "memberof": "src/event/Wheel.js",
    "longname": "src/event/Wheel.js~Wheel",
    "access": null,
    "export": true,
    "importPath": "./src/event/Wheel.js",
    "importStyle": "Wheel",
    "description": "mousewheel event を監視し通知を行います\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst instance:Wheel = Wheel.factory();\n```",
    "lineNumber": 38,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 179,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#constructor",
    "access": null,
    "description": "singleton です",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "singleton を保証するための private instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundWheel",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#boundWheel",
    "access": null,
    "description": "bound mouseWheel",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} window.wheel event handler"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "window.wheel event handler"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "threshold",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#threshold",
    "access": null,
    "description": "閾値, wheel 移動量が閾値を超えたときにイベントを発生させます",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "200"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 182,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moved",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#moved",
    "access": null,
    "description": "wheelDelta 移動量が閾値を超えるかをチェックするための積算計算変数",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#started",
    "access": null,
    "description": "start flag",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#events",
    "access": null,
    "description": "UP / DOWN Events instance",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{up: WheelEvents, down: WheelEvents}} UP / DOWN Events instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{up: WheelEvents, down: WheelEvents}"
      ],
      "spread": false,
      "description": "UP / DOWN Events instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UP",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel.UP",
    "access": null,
    "description": "wheel up で発生するイベントを取得します",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UP"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, wheelUp を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "wheelUp"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, wheelUp を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 186,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "DOWN",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel.DOWN",
    "access": null,
    "description": "wheel  で発生するイベントを取得します",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "DOWN"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, wheelUp を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "wheelUp"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, wheelUp を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#start",
    "access": null,
    "description": "mousewheel event を監視します",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#started",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#stop",
    "access": null,
    "description": "mousewheel event を監視を止めます",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} method chain 可能なように instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "method chain 可能なように instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#started",
    "access": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mouseWheel",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#mouseWheel",
    "access": null,
    "description": "window mousewheel event handler\n<p>delta 値を取得し `this.moving` を実行します</p>",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 前回移動量に delta 値 を加算した値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "WheelEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window wheel event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "前回移動量に delta 値 を加算した値を返します"
    },
    "listens": [
      {
        "types": [
          "WheelEvent"
        ],
        "description": "WheelEvent.wheel"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 192,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "moving",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#moving",
    "access": null,
    "description": "mouse delta から移動量を計算します",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 前回移動量に delta 値 を加算した値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "mouse delta 値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "前回移動量に delta 値 を加算した値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moved",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#moved",
    "access": null,
    "description": "移動量が閾値を超えるかをチェックするための計算変数",
    "lineNumber": 167,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moved",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#moved",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "up",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#up",
    "access": null,
    "description": "scroll up イベントを発火します",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 加算移動量を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "移動量"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "加算移動量を返します"
    },
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "down",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel#down",
    "access": null,
    "description": "scroll down イベントを発火します",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 加算移動量を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "移動量"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "加算移動量を返します"
    },
    "generator": false
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "factory",
    "memberof": "src/event/Wheel.js~Wheel",
    "longname": "src/event/Wheel.js~Wheel.factory",
    "access": null,
    "description": "Wheel instance を singleton を保証し作成します",
    "lineNumber": 227,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wheel} Wheel instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Wheel"
      ],
      "spread": false,
      "description": "Wheel instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event/WheelEvents.js",
    "memberof": null,
    "longname": "src/event/WheelEvents.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/20 - 12:11\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport { default as Events } from './Events';\n\n/**\n * Wheel Events, mouse wheel で発生するイベントを管理します\n */\nexport default class WheelEvents extends Events {\n  /**\n   * custom Event Object\n   * @param {string} type イベント種類\n   * @param {*} currentTarget current イベント発生インスタンス\n   * @param {*} [target=undefined] イベント発生インスタンス\n   * */\n  constructor(type, currentTarget, target = undefined) {\n    super(type, currentTarget, target);\n    /**\n     * 移動距離(px)\n     * @type {number}\n     */\n    this.moved = 0;\n  }\n}\n"
  },
  {
    "__docId__": 199,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WheelEvents",
    "memberof": "src/event/WheelEvents.js",
    "longname": "src/event/WheelEvents.js~WheelEvents",
    "access": null,
    "export": true,
    "importPath": "./src/event/WheelEvents.js",
    "importStyle": "WheelEvents",
    "description": "Wheel Events, mouse wheel で発生するイベントを管理します",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/event/Events.js~Events"
    ]
  },
  {
    "__docId__": 200,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event/WheelEvents.js~WheelEvents",
    "longname": "src/event/WheelEvents.js~WheelEvents#constructor",
    "access": null,
    "description": "custom Event Object",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "イベント種類"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTarget",
        "description": "current イベント発生インスタンス"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "target",
        "description": "イベント発生インスタンス"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moved",
    "memberof": "src/event/WheelEvents.js~WheelEvents",
    "longname": "src/event/WheelEvents.js~WheelEvents#moved",
    "access": null,
    "description": "移動距離(px)",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/moku.js",
    "memberof": null,
    "longname": "src/moku.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*!\n * Copyright (c) inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/06/30 - 17:54\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * @@version\n * @@buildTime\n */\n// use strict は本来不要でエラーになる\n// 無いと webpack.optimize.UglifyJsPlugin がコメントを全部削除するので記述する\n/* eslint strict: [0, \"global\"] */\n\n'use strict';\n\n// event\nimport { default as EventDispatcher } from './event/EventDispatcher';\nimport { default as Events } from './event/Events';\nimport { default as Rising } from './event/Rising';\nimport { default as Scroll } from './event/Scroll';\nimport { default as Scrolling } from './event/Scrolling';\nimport { default as Touching } from './event/Touching';\nimport { default as Wheel } from './event/Wheel';\n\n// net\nimport { default as Ajax } from './net/Ajax';\nimport { default as Cookie } from './net/Cookie';\nimport { default as Queries } from './net/Queries';\n\n// tick\nimport { default as Cycle } from './tick/Cycle';\nimport { default as Fps } from './tick/Fps';\nimport { default as Polling } from './tick/Polling';\nimport { default as Rate } from './tick/Rate';\n\n// util\nimport { default as Type } from './util/Type';\nimport { default as Hit } from './util/Hit';\nimport { default as List } from './util/List';\nimport { default as Text } from './util/Text';\nimport { default as Times } from './util/Times';\nimport { default as Vectors } from './util/Vectors';\n\n// css\nimport { default as Can } from './css/Can';\nimport { default as Patterns } from './css/Patterns';\nimport { default as Style } from './css/Style';\n\n// dom\nimport { default as Bounding } from './dom/Bounding';\nimport { default as Classes } from './dom/Classes';\nimport { default as Elements } from './dom/Elements';\n\n/**\n * **MOKU**\n * <p>global Object</p>\n * <p>public な Class はここからアクセス可能です</p>\n * @type {Object}\n */\nconst MOKU = {};\n/**\n * version number を取得します\n * @returns {string} version number を返します\n */\nMOKU.version = () => '@@version';\n/**\n * build 日時を取得します\n * @returns {string}  build 日時を返します\n */\nMOKU.build = () => '@@buildTime';\n/**\n * MOKU.event\n * @type {Object} MOKU.event object を返します\n */\nMOKU.event = {\n  EventDispatcher,\n  Events,\n  Rising,\n  Scroll,\n  Wheel,\n  Scrolling,\n  Touching,\n};\n/**\n * MOKU.net\n * @type {Object} MOKU.net object を返します\n */\nMOKU.net = {\n  Ajax,\n  Cookie,\n  Queries,\n};\n/**\n * MOKU.tick\n * @type {Object} MOKU.tick object を返します\n */\nMOKU.tick = {\n  Cycle,\n  Fps,\n  Polling,\n  Rate,\n};\n/**\n * MOKU.util\n * @type {Object} MOKU.util object を返します\n */\nMOKU.util = {\n  Type,\n  List,\n  Text,\n  Times,\n  Vectors,\n  Hit,\n};\n\nMOKU.css = {\n  Patterns,\n  Style,\n  Can,\n};\n\nMOKU.dom = {\n  Bounding,\n  Classes,\n  Elements,\n};\n\n// export\nwindow.MOKU = MOKU;\n"
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MOKU",
    "memberof": "src/moku.js",
    "longname": "src/moku.js~MOKU",
    "access": null,
    "export": false,
    "importPath": "./src/moku.js",
    "importStyle": null,
    "description": "**MOKU**\n<p>global Object</p>\n<p>public な Class はここからアクセス可能です</p>",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/net/Ajax.js",
    "memberof": null,
    "longname": "src/net/Ajax.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/01 - 19:41\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// util\nimport { default as Type } from '../util/Type';\n\n// built-in function\n// Safari, IE はサポートしていないのでライブラリを使用すること\nconst fetch = self.fetch;\nconst Request = self.Request;\n\n/**\n * <p>fetch API を使用し Ajax request を行います</p>\n * <p>Safari, IE はサポートしていないので polyfill ライブラリを使用します<br>\n * また、 fetch は Promise も必要としています。</p>\n *\n * ```\n * $ bower install fetch\n *\n * $ bower install es6-promise\n * ```\n *\n * @see http://caniuse.com/#feat=fetch\n * @see https://github.com/github/fetch\n * @see https://github.com/taylorhakes/promise-polyfill\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\n * @see https://developer.mozilla.org/ja/docs/Web/API/Fetch_API\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Request/Request\n * @see https://developer.mozilla.org/ja/docs/Web/API/Headers\n * @see https://developer.mozilla.org/ja/docs/Web/API/Body\n */\nexport default class Ajax {\n  /**\n   * request 可能 / 不可能 flag を true に設定します\n   * @param {Function} resolve Promise success callback\n   * @param {Function} reject Promise fail callback\n   */\n  constructor(resolve, reject) {\n    /**\n     * request 可能 / 不可能 flag, true: 実行可能\n     * @type {boolean}\n     */\n    this.can = true;\n    /**\n     * Promise success callback\n     * @type {Function}\n     */\n    this.resolve = resolve;\n    /**\n     * Promise fail callback\n     * @type {Function}\n     */\n    this.reject = reject;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * <p>Ajax request 開始します</p>\n   * <p>request 可能 / 不可能 flag が false の時は実行しません<br>\n   * true の時は false にしリクエストを開始します</p>\n   * <p>START, COMPLETE, ERROR イベントを発生させます</p>\n   *\n   * @param {string} path Ajax request path\n   * @param {string} method GET, POST, PUT, DELETE...etc request method\n   * @param {?Headers} [headers=null] Headers option, token などを埋め込むのに使用します\n   * @param {?FormData} [formData=null] フォームデータを送信するのに使用します\n   * @return {boolean} ajax request を開始したかどうかの真偽値を返します\n   */\n  start(path, method, headers = null, formData = null) {\n    // ajax request 開始\n    if (!this.can) {\n      // flag が off なので処理しない\n      return false;\n    }\n\n    // flag off\n    this.disable();\n\n    // @type {Request} Request instance\n    const request = Ajax.option(path, method, headers, formData);\n\n    // fetch start\n    fetch(request)\n    // @param {Object} response - Ajax response\n      .then((response) => {\n        // may be success\n        if (response.status !== 200) {\n          throw new Error(`Ajax status error: (${response.status})`);\n        }\n        return response.json();\n      })\n      // @param {Object} - JSON パース済み Object\n      .then((json) => {\n        // complete event fire\n        this.resolve(json);\n        // flag true\n        this.enable();\n      })\n      // @param {Error} - Ajax something error\n      .catch((error) => {\n        // error event fire\n        this.reject(error);\n        // flag true\n        this.enable();\n      });\n\n    return true;\n  }\n  /**\n   * 実行可否 flag を true にします\n   * @returns {boolean} 現在の this.can property を返します\n   */\n  enable() {\n    this.can = true;\n    return this.can;\n  }\n  /**\n   * 実行可否 flag を false にします\n   * @returns {boolean} 現在の this.can property を返します\n   */\n  disable() {\n    this.can = false;\n    return this.can;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * <p>fetch API へ送るオプションを作成します</p>\n   *\n   * 必ず設定します\n   * - method: GET, POST, PUT, DELETE...etc\n   * - cache: 'no-cache'\n   * - credentials: 'same-origin'\n   *\n   * headers, formData は存在すれば option に追加されます\n   *\n   * @param {string} path Ajax request path\n   * @param {string} method GET, POST, PUT, DELETE...etc request method\n   * @param {Headers|Object|null} headers Headers option\n   * @param {FormData|null} formData 送信フォームデータオプション\n   * @returns {Request} fetch API へ送る Request instance を返します\n   *\n   * @see https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n   * @see https://developer.mozilla.org/ja/docs/Web/API/Request\n   */\n  static option(path, method, headers, formData) {\n    // request option\n    const option = Object.create({\n      method,\n      cache: 'no-cache',\n      // https://developers.google.com/web/updates/2015/03/introduction-to-fetch\n      credentials: 'same-origin',\n    });\n\n    // headers option\n    if (Type.exist(headers)) {\n      option.headers = headers;\n    }\n\n    // body へ FormData をセット\n    if (Type.exist(formData)) {\n      option.body = formData;\n    }\n\n    // https://developer.mozilla.org/ja/docs/Web/API/Request\n    return new Request(path, option);\n  }\n}\n"
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fetch",
    "memberof": "src/net/Ajax.js",
    "longname": "src/net/Ajax.js~fetch",
    "access": null,
    "export": false,
    "importPath": "./src/net/Ajax.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Request",
    "memberof": "src/net/Ajax.js",
    "longname": "src/net/Ajax.js~Request",
    "access": null,
    "export": false,
    "importPath": "./src/net/Ajax.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Ajax",
    "memberof": "src/net/Ajax.js",
    "longname": "src/net/Ajax.js~Ajax",
    "access": null,
    "export": true,
    "importPath": "./src/net/Ajax.js",
    "importStyle": "Ajax",
    "description": "<p>fetch API を使用し Ajax request を行います</p>\n<p>Safari, IE はサポートしていないので polyfill ライブラリを使用します<br>\nまた、 fetch は Promise も必要としています。</p>\n\n```\n$ bower install fetch\n\n$ bower install es6-promise\n```",
    "see": [
      "http://caniuse.com/#feat=fetch",
      "https://github.com/github/fetch",
      "https://github.com/taylorhakes/promise-polyfill",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch",
      "https://developer.mozilla.org/ja/docs/Web/API/Fetch_API",
      "https://developer.mozilla.org/ja/docs/Web/API/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Request/Request",
      "https://developer.mozilla.org/ja/docs/Web/API/Headers",
      "https://developer.mozilla.org/ja/docs/Web/API/Body"
    ],
    "lineNumber": 42,
    "interface": false
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#constructor",
    "access": null,
    "description": "request 可能 / 不可能 flag を true に設定します",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "Promise success callback"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "Promise fail callback"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "can",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#can",
    "access": null,
    "description": "request 可能 / 不可能 flag, true: 実行可能",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "resolve",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#resolve",
    "access": null,
    "description": "Promise success callback",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reject",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#reject",
    "access": null,
    "description": "Promise fail callback",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#start",
    "access": null,
    "description": "<p>Ajax request 開始します</p>\n<p>request 可能 / 不可能 flag が false の時は実行しません<br>\ntrue の時は false にしリクエストを開始します</p>\n<p>START, COMPLETE, ERROR イベントを発生させます</p>",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ajax request path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "GET, POST, PUT, DELETE...etc request method"
      },
      {
        "nullable": true,
        "types": [
          "Headers"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "headers",
        "description": "Headers option, token などを埋め込むのに使用します"
      },
      {
        "nullable": true,
        "types": [
          "FormData"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "formData",
        "description": "フォームデータを送信するのに使用します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "ajax request を開始したかどうかの真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "enable",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#enable",
    "access": null,
    "description": "実行可否 flag を true にします",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 現在の this.can property を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "現在の this.can property を返します"
    },
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "can",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#can",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "disable",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#disable",
    "access": null,
    "description": "実行可否 flag を false にします",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 現在の this.can property を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "現在の this.can property を返します"
    },
    "generator": false
  },
  {
    "__docId__": 216,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "can",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax#can",
    "access": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "option",
    "memberof": "src/net/Ajax.js~Ajax",
    "longname": "src/net/Ajax.js~Ajax.option",
    "access": null,
    "description": "<p>fetch API へ送るオプションを作成します</p>\n\n必ず設定します\n- method: GET, POST, PUT, DELETE...etc\n- cache: 'no-cache'\n- credentials: 'same-origin'\n\nheaders, formData は存在すれば option に追加されます",
    "see": [
      "https://developers.google.com/web/updates/2015/03/introduction-to-fetch",
      "https://developer.mozilla.org/ja/docs/Web/API/Request"
    ],
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Request} fetch API へ送る Request instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Ajax request path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "GET, POST, PUT, DELETE...etc request method"
      },
      {
        "nullable": null,
        "types": [
          "Headers",
          "Object",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": "Headers option"
      },
      {
        "nullable": null,
        "types": [
          "FormData",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "formData",
        "description": "送信フォームデータオプション"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Request"
      ],
      "spread": false,
      "description": "fetch API へ送る Request instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 218,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/net/Cookie.js",
    "memberof": null,
    "longname": "src/net/Cookie.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/16 - 14:45\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nconst decodeURIComponent = self.decodeURIComponent;\nconst encodeURIComponent = self.encodeURIComponent;\nconst RegExp = self.RegExp;\n\n/**\n * cookie を取得・保存・削除します\n */\nexport default class Cookie {\n  /**\n   * cookie を処理します\n   *\n   * インスタンスは key 毎に作成します\n   * @param {string} keyName cookie key\n   * @param {?Date} [endValue=null] cookie end Date instance, null の時はプラウザ `quit` で削除されます\n   * @param {string} [defaultPath='/'] cookie path\n   * @param {string} [defaultDomain=''] cookie domain\n   * @param {boolean} [secureSetting=false] true: https 通信のときのみ、クッキーが送信されます\n   */\n  constructor(keyName, endValue = null, defaultPath = '/', defaultDomain = '', secureSetting = false) {\n    let key = keyName;\n    let end = endValue;\n    let path = defaultPath;\n    let domain = defaultDomain;\n    let secure = secureSetting;\n\n    /**\n     * cookie key を取得します\n     * @returns {string} cookie key を返します\n     */\n    this.key = () => key;\n    /**\n     * cookie key を設定します\n     * @param {string} setting 設定する key name\n     * @returns {string} 設定した key name を返します\n     */\n    this.setKey = (setting) => { key = setting; };\n    /**\n     * cookie end を取得します\n     * @returns {?Date} cookie end Date instance\n     */\n    this.end = () => end;\n    /**\n     * cookie end を設定します\n     * @param {Date} setting cookie end Date instance\n     * @returns {Date} 設定した Date instance を返します\n     */\n    this.setEnd = (setting) => { end = setting; };\n    /**\n     * cookie path を取得します\n     * @returns {string} cookie path を返します\n     */\n    this.path = () => path;\n    /**\n     * cookie path を設定します\n     * @param {string} setting 設定する path name\n     * @returns {string} 設定した path name を返します\n     */\n    this.setPath = (setting) => { path = setting; };\n    /**\n     * cookie domain を取得します\n     * @returns {string} cookie domain を返します\n     */\n    this.domain = () => domain;\n    /**\n     * cookie domain を設定します\n     * @param {string} setting 設定する domain name\n     * @returns {string} 設定した domain name を返します\n     */\n    this.setDomain = (setting) => { domain = setting; };\n    /**\n     * https 通信のときのみクッキー送信を行うかのフラッグを取得します\n     * @returns {boolean} https 通信のときのみクッキー送信を行うかのフラッグ\n     */\n    this.secure = () => secure;\n    /**\n     * https 通信のときのみクッキー送信を行うかのフラッグを設定します\n     * @param {boolean} setting https 通信のときのみクッキー送信を行うかのフラッグ\n     * @returns {boolean} 設定した secure フラッグを返します\n     */\n    this.setSecure = (setting) => { secure = setting; };\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * cookie value を取得します\n   * @returns {string|null} cookie value を返します\n   */\n  get() {\n    return Cookie.get(this.key());\n  }\n\n  /**\n   * cookie value を設定します\n   * @param {string} value cookie value\n   * @param {?Date} [end=null] cookie end Date instance, null の時はプラウザ `quit` で削除されます\n   * @param {string} [path='/'] cookie path\n   * @param {string} [domain=''] cookie domain\n   * @param {boolean} [secure=false] true: https 通信のときのみ、クッキーが送信されます\n   * @returns {string} 設定した cookie 文字列\n   */\n  set(value, end = this.end(), path = this.path(), domain = this.domain(), secure = this.secure()) {\n    return Cookie.set(this.key(), value, end, path, domain, secure);\n  }\n  /**\n   * cookie を削除します\n   * @returns {boolean} true: cookie 削除成功\n   */\n  remove() {\n    return Cookie.remove(this.key());\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * cookie value を取得します\n   * @param {string} key 取得する cookie key 名称\n   * @returns {string|null} cookie value\n   */\n  static get(key) {\n    const cookie = document.cookie;\n    const escapeKey = encodeURIComponent(key).replace(/[-.+*]/g, '\\\\$&');\n    const exp = new RegExp(`(?:(?:^|.*;)\\\\s*${escapeKey}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`);\n    return decodeURIComponent(cookie.replace(exp, '$1')) || null;\n  }\n  /**\n   * cookie value を設定します\n   * @param {string} key cookie key\n   * @param {string} value cookie value\n   * @param {?Date} [end=null] cookie end date Date instance\n   * @param {string} [path=/] cookie path\n   * @param {string} [domain=''] cookie domain\n   * @param {boolean} [secure=false] true: https 通信のときのみ、クッキーが送信されます\n   * @returns {string} 設定した cookie 文字列\n   */\n  static set(key, value, end = null, path = '/', domain = '', secure = false) {\n    let cookie = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n    if (end) {\n      cookie += `; expires=${end.toUTCString()}`;\n    }\n    if (path) {\n      cookie += `; path=${path}`;\n    }\n    if (domain) {\n      cookie += `; domain=${domain}`;\n    }\n    if (secure) {\n      cookie += '; secure';\n    }\n    document.cookie = cookie;\n    return cookie;\n  }\n  /**\n   * cookie を削除します\n   *\n   * 現在時間より前の時刻を設定します\n   * @param {string} key cookie key\n   * @returns {boolean} true: 削除成功\n   */\n  static remove(key) {\n    if (Cookie.has(key)) {\n      Cookie.set(key, '', new Date());\n      return true;\n    }\n    return false;\n  }\n  /**\n   * cookie key が存在するかを調べます\n   * @param {string} key cookie key\n   * @returns {boolean} true: cookie key が存在します\n   */\n  static has(key) {\n    return Cookie.get(key) !== null;\n  }\n}\n"
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "decodeURIComponent",
    "memberof": "src/net/Cookie.js",
    "longname": "src/net/Cookie.js~decodeURIComponent",
    "access": null,
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": "Copyright (c) 2011-2016 inazumatv.com, inc.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "(at)taikiken / http://inazumatv.com"
      },
      {
        "tagName": "@date",
        "tagValue": "2016/12/16 - 14:45\n\nDistributed under the terms of the MIT license.\nhttp://www.opensource.org/licenses/mit-license.html\n\nThis notice shall be included in all copies or substantial portions of the Software."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "encodeURIComponent",
    "memberof": "src/net/Cookie.js",
    "longname": "src/net/Cookie.js~encodeURIComponent",
    "access": null,
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "memberof": "src/net/Cookie.js",
    "longname": "src/net/Cookie.js~RegExp",
    "access": null,
    "export": false,
    "importPath": "./src/net/Cookie.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Cookie",
    "memberof": "src/net/Cookie.js",
    "longname": "src/net/Cookie.js~Cookie",
    "access": null,
    "export": true,
    "importPath": "./src/net/Cookie.js",
    "importStyle": "Cookie",
    "description": "cookie を取得・保存・削除します",
    "lineNumber": 20,
    "interface": false
  },
  {
    "__docId__": 223,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#constructor",
    "access": null,
    "description": "cookie を処理します\n\nインスタンスは key 毎に作成します",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "cookie key"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "endValue",
        "description": "cookie end Date instance, null の時はプラウザ `quit` で削除されます"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'/'",
        "defaultRaw": "'/'",
        "name": "defaultPath",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "defaultDomain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secureSetting",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 224,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#key",
    "access": null,
    "description": "cookie key を取得します",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie key を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie key を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setKey",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#setKey",
    "access": null,
    "description": "cookie key を設定します",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した key name を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する key name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した key name を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "end",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#end",
    "access": null,
    "description": "cookie end を取得します",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?Date} cookie end Date instance"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "cookie end Date instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setEnd",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#setEnd",
    "access": null,
    "description": "cookie end を設定します",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 設定した Date instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "cookie end Date instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "設定した Date instance を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "path",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#path",
    "access": null,
    "description": "cookie path を取得します",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie path を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie path を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setPath",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#setPath",
    "access": null,
    "description": "cookie path を設定します",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した path name を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する path name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した path name を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "domain",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#domain",
    "access": null,
    "description": "cookie domain を取得します",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} cookie domain を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "cookie domain を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setDomain",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#setDomain",
    "access": null,
    "description": "cookie domain を設定します",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した domain name を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "設定する domain name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した domain name を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "secure",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#secure",
    "access": null,
    "description": "https 通信のときのみクッキー送信を行うかのフラッグを取得します",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} https 通信のときのみクッキー送信を行うかのフラッグ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "https 通信のときのみクッキー送信を行うかのフラッグ"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setSecure",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#setSecure",
    "access": null,
    "description": "https 通信のときのみクッキー送信を行うかのフラッグを設定します",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 設定した secure フラッグを返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setting",
        "description": "https 通信のときのみクッキー送信を行うかのフラッグ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "設定した secure フラッグを返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#get",
    "access": null,
    "description": "cookie value を取得します",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} cookie value を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "cookie value を返します"
    },
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#set",
    "access": null,
    "description": "cookie value を設定します",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した cookie 文字列"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "cookie value"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "end",
        "description": "cookie end Date instance, null の時はプラウザ `quit` で削除されます"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'/'",
        "defaultRaw": "'/'",
        "name": "path",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "domain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secure",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した cookie 文字列"
    },
    "generator": false
  },
  {
    "__docId__": 236,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie#remove",
    "access": null,
    "description": "cookie を削除します",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: cookie 削除成功"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: cookie 削除成功"
    },
    "generator": false
  },
  {
    "__docId__": 237,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "get",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie.get",
    "access": null,
    "description": "cookie value を取得します",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} cookie value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "取得する cookie key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "cookie value"
    },
    "generator": false
  },
  {
    "__docId__": 238,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "set",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie.set",
    "access": null,
    "description": "cookie value を設定します",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} 設定した cookie 文字列"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "cookie value"
      },
      {
        "nullable": true,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "end",
        "description": "cookie end date Date instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "/",
        "defaultRaw": "/",
        "name": "path",
        "description": "cookie path"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "domain",
        "description": "cookie domain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "secure",
        "description": "true: https 通信のときのみ、クッキーが送信されます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "設定した cookie 文字列"
    },
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "remove",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie.remove",
    "access": null,
    "description": "cookie を削除します\n\n現在時間より前の時刻を設定します",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 削除成功"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 削除成功"
    },
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "has",
    "memberof": "src/net/Cookie.js~Cookie",
    "longname": "src/net/Cookie.js~Cookie.has",
    "access": null,
    "description": "cookie key が存在するかを調べます",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: cookie key が存在します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "cookie key"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: cookie key が存在します"
    },
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/net/Queries.js",
    "memberof": null,
    "longname": "src/net/Queries.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/23\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n/**\n * URL query をパースします\n */\nexport default class Queries {\n  /**\n   * URL query を受取パースします\n   * @param {string} [queryString=location.search] パースする URL 文字列\n   */\n  constructor(queryString = window.location.search) {\n    const [data, keys] = Queries.parse(queryString);\n    const naked = Queries.naked(queryString);\n    /**\n     * query key を取得します\n     * @returns {Array<string>} query key array\n     */\n    this.keys = () => keys;\n    /**\n     * key: value 形式を取得します\n     * @returns {Object} URL query を key: value 形式で返します\n     */\n    this.data = () => data;\n    /**\n     * query 文字列を取得します\n     * @returns {string} パースする query 文字列\n     */\n    this.queryString = () => queryString;\n    /**\n     * パースしやすいように正規化した query 文字列\n     * @returns {string} `?` 以降文字 + `&amp;` を `&` へ置換えます\n     */\n    this.naked = () => naked;\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * key が存在するかを調べます\n   * @param {string} keyName 調査対象 key 名称\n   * @returns {boolean} true: 存在する\n   */\n  has(keyName) {\n    return this.keys().indexOf(keyName) !== -1;\n  }\n  /**\n   * key 値を取得します\n   * @param {string} keyName 調査対象 key 名称\n   * @returns {string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します\n   */\n  get(keyName) {\n    return this.data()[keyName];\n  }\n  /**\n   * key: value 形式を取得します\n   * @returns {Object} URL query を key: value 形式で返します\n   */\n  getAll() {\n    return this.data();\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * `&amp;` を `&` へ置換えます\n   * @param {string} targetText 操作対象文字列\n   * @returns {string} `&amp;` を `&` へ置換え返します\n   */\n  static amp(targetText) {\n    return targetText.split('&amp;').join('&');\n  }\n\n  /**\n   * 文字列先頭に `?` があればそれ以降の文字列を返し `Query.amp` を実行します\n   * @param {string} targetText 操作対象文字列\n   * @returns {string} query を正規化します\n   */\n  static naked(targetText) {\n    const queryString = Queries.amp(targetText);\n    return queryString.substr(0, 1) === '?' ? queryString.substring(1) : targetText;\n  }\n  /**\n   * query を kye: value 形式にします\n   * @param {string} targetText 操作対象文字列\n   * @returns {[Object, Array]} data, keys を返します\n   */\n  static parse(targetText) {\n    const query = Queries.naked(targetText);\n    const pairs = query.split('&');\n    const data = {};\n    const keys = [];\n    pairs.map((pair) => {\n      let keyName = '';\n      if (pair && pair.indexOf('=') !== -1) {\n        const keyValue = pair.split('=');\n        const key = keyValue.shift();\n        data[key] = keyValue.shift();\n        keyName = key;\n        keys.push(key);\n      }\n      return keyName;\n    });\n\n    return [data, keys];\n  }\n  /**\n   * 引数 targetText (query) から引数 keyName 値を取得します\n   * @param {string} keyName key 名称\n   * @param {string} targetText query\n   * @returns {string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します\n   */\n  static get(keyName, targetText = window.location.search) {\n    const [data] = Queries.parse(targetText);\n    return data[keyName];\n  }\n  /**\n   * URL query の key: value 形式を取得します\n   * @param {string} targetText query\n   * @returns {[Object, Array]} URL query を key: value 形式で返します\n   */\n  static getAll(targetText = window.location.search) {\n    // const [data] = Queries.parse(targetText);\n    return Queries.parse(targetText);\n  }\n}\n"
  },
  {
    "__docId__": 242,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Queries",
    "memberof": "src/net/Queries.js",
    "longname": "src/net/Queries.js~Queries",
    "access": null,
    "export": true,
    "importPath": "./src/net/Queries.js",
    "importStyle": "Queries",
    "description": "URL query をパースします",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 243,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#constructor",
    "access": null,
    "description": "URL query を受取パースします",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "location.search",
        "defaultRaw": "location.search",
        "name": "queryString",
        "description": "パースする URL 文字列"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 244,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "keys",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#keys",
    "access": null,
    "description": "query key を取得します",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>} query key array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": "query key array"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#data",
    "access": null,
    "description": "key: value 形式を取得します",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} URL query を key: value 形式で返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "URL query を key: value 形式で返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "queryString",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#queryString",
    "access": null,
    "description": "query 文字列を取得します",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} パースする query 文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "パースする query 文字列"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "naked",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#naked",
    "access": null,
    "description": "パースしやすいように正規化した query 文字列",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} `?` 以降文字 + `&amp;` を `&` へ置換えます"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`?` 以降文字 + `&amp;` を `&` へ置換えます"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#has",
    "access": null,
    "description": "key が存在するかを調べます",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: 存在する"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "調査対象 key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: 存在する"
    },
    "generator": false
  },
  {
    "__docId__": 249,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#get",
    "access": null,
    "description": "key 値を取得します",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "調査対象 key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "見つかると文字列で返します, 見つからない時は undefined を返します"
    },
    "generator": false
  },
  {
    "__docId__": 250,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries#getAll",
    "access": null,
    "description": "key: value 形式を取得します",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} URL query を key: value 形式で返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "URL query を key: value 形式で返します"
    },
    "generator": false
  },
  {
    "__docId__": 251,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "amp",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries.amp",
    "access": null,
    "description": "`&amp;` を `&` へ置換えます",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} `&amp;` を `&` へ置換え返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "`&amp;` を `&` へ置換え返します"
    },
    "generator": false
  },
  {
    "__docId__": 252,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "naked",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries.naked",
    "access": null,
    "description": "文字列先頭に `?` があればそれ以降の文字列を返し `Query.amp` を実行します",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} query を正規化します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "query を正規化します"
    },
    "generator": false
  },
  {
    "__docId__": 253,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries.parse",
    "access": null,
    "description": "query を kye: value 形式にします",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Object, Array]} data, keys を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Object, Array]"
      ],
      "spread": false,
      "description": "data, keys を返します"
    },
    "generator": false
  },
  {
    "__docId__": 254,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "get",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries.get",
    "access": null,
    "description": "引数 targetText (query) から引数 keyName 値を取得します",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined} 見つかると文字列で返します, 見つからない時は undefined を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyName",
        "description": "key 名称"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "見つかると文字列で返します, 見つからない時は undefined を返します"
    },
    "generator": false
  },
  {
    "__docId__": 255,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getAll",
    "memberof": "src/net/Queries.js~Queries",
    "longname": "src/net/Queries.js~Queries.getAll",
    "access": null,
    "description": "URL query の key: value 形式を取得します",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Object, Array]} URL query を key: value 形式で返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetText",
        "description": "query"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Object, Array]"
      ],
      "spread": false,
      "description": "URL query を key: value 形式で返します"
    },
    "generator": false
  },
  {
    "__docId__": 256,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tick/Cycle.js",
    "memberof": null,
    "longname": "src/tick/Cycle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/03\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport { default as EventDispatcher } from '../event/EventDispatcher';\nimport { default as Events } from '../event/Events';\n\n/**\n * new を許可しないための Symbol\n * @type {Symbol}\n * @private\n */\nconst singletonSymbol = Symbol('singleton instance');\n/**\n * singleton instance, nullable\n * @type {?Cycle}\n * @private\n * @static\n */\nlet instance = null;\n\n/**\n * <p>requestAnimationFrame を使用しループイベントを発生させます</p>\n * <p>singleton なので new ではなく factory を使用し instance を作成します</p>\n *\n * ```\n * const loop = Cycle.factory();\n * const update = () => {\n *  // code here, something do\n * };\n * loop.on(Cycle.UPDATE, update);\n * loop.start();\n * ```\n *\n * <p>requestAnimationFrame は tab が active(focus) な時のみ発生します</p>\n */\nexport default class Cycle extends EventDispatcher {\n  /**\n   * singleton です\n   * @param {Symbol} checkSymbol singleton を保証するための private instance\n   * @returns {Cycle} singleton instance を返します\n   */\n  constructor(checkSymbol) {\n    // checkSymbol と singleton が等価かをチェックします\n    if (checkSymbol !== singletonSymbol) {\n      throw new Error('don\\'t use new, instead use static factory method.');\n    }\n    super();\n    // instance 作成済みかをチェックし instance が null の時 this を設定します\n    if (instance !== null) {\n      return instance;\n    }\n    // -------------------------------\n    // onetime setting\n    instance = this;\n    const events = new Events(Cycle.UPDATE, this, this);\n    const boundUpdate = this.update.bind(this);\n    /**\n     * Cycle.UPDATE Events instance\n     * @returns {Events} Cycle.UPDATE Events instance\n     */\n    this.events = () => events;\n    /**\n     * bound update requestAnimationFrame callback\n     * @returns {function} bound update\n     */\n    this.boundUpdate = () => boundUpdate;\n    /**\n     * requestAnimationFrame ID\n     * @type {number}\n     */\n    this.id = 0;\n    /**\n     * start 済みフラッグ\n     * @type {boolean}\n     */\n    this.started = false;\n    // 設定済み instance を返します\n    return instance;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * requestAnimationFrame 毎に発生するイベントを取得します\n   * @event UPDATE\n   * @returns {string} event, cycleUpdate を返します\n   * @default cycleUpdate\n   */\n  static get UPDATE() {\n    return 'cycleUpdate';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * loop(requestAnimationFrame) を開始します\n   * @returns {boolean} start に成功すると true を返します\n   */\n  start() {\n    if (this.started) {\n      // already start\n      return false;\n    }\n    this.started = true;\n    this.update();\n\n    // @return\n    return true;\n  }\n  /**\n   * loop(cancelAnimationFrame) を止めます\n   * @param {number} [id] requestAnimationFrame id を使い cancelAnimationFrame をします\n   * @returns {boolean} stop に成功すると true を返します\n   */\n  stop(id = this.id) {\n    if (!this.started) {\n      // not start\n      return false;\n    }\n\n    cancelAnimationFrame(id);\n    this.started = false;\n\n    // @return\n    return true;\n  }\n  // ----------------------------------------\n  // PRIVATE METHOD\n  // ----------------------------------------\n  /**\n   * loop(requestAnimationFrame)コールバック関数<br>Cycle.UPDATE event を発火します\n   * @returns {number} requestAnimationFrame ID\n   */\n  update() {\n    // @type {number} - requestAnimationFrame id\n    const id = requestAnimationFrame(this.boundUpdate());\n    this.id = id;\n\n    // @type {Events} - events\n    const events = this.events();\n    events.id = id;\n    // event fire\n    this.dispatch(events);\n    return id;\n  }\n  // ----------------------------------------\n  // STATIC METHOD\n  // ----------------------------------------\n  /**\n   * Cycle instance を singleton を保証し作成します\n   * @returns {Cycle} Cycle instance を返します\n   */\n  static factory() {\n    if (instance === null) {\n      return new Cycle(singletonSymbol);\n    }\n    return instance;\n  }\n}\n"
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "singletonSymbol",
    "memberof": "src/tick/Cycle.js",
    "longname": "src/tick/Cycle.js~singletonSymbol",
    "access": "private",
    "export": false,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": null,
    "description": "new を許可しないための Symbol",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "instance",
    "memberof": "src/tick/Cycle.js",
    "longname": "src/tick/Cycle.js~instance",
    "access": "private",
    "export": false,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": null,
    "description": "singleton instance, nullable",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": true,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Cycle",
    "memberof": "src/tick/Cycle.js",
    "longname": "src/tick/Cycle.js~Cycle",
    "access": null,
    "export": true,
    "importPath": "./src/tick/Cycle.js",
    "importStyle": "Cycle",
    "description": "<p>requestAnimationFrame を使用しループイベントを発生させます</p>\n<p>singleton なので new ではなく factory を使用し instance を作成します</p>\n\n```\nconst loop = Cycle.factory();\nconst update = () => {\n // code here, something do\n};\nloop.on(Cycle.UPDATE, update);\nloop.start();\n```\n\n<p>requestAnimationFrame は tab が active(focus) な時のみ発生します</p>",
    "lineNumber": 47,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#constructor",
    "access": null,
    "description": "singleton です",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} singleton instance を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Symbol"
        ],
        "spread": false,
        "optional": false,
        "name": "checkSymbol",
        "description": "singleton を保証するための private instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "singleton instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#events",
    "access": null,
    "description": "Cycle.UPDATE Events instance",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} Cycle.UPDATE Events instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "Cycle.UPDATE Events instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundUpdate",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#boundUpdate",
    "access": null,
    "description": "bound update requestAnimationFrame callback",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound update"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#id",
    "access": null,
    "description": "requestAnimationFrame ID",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#started",
    "access": null,
    "description": "start 済みフラッグ",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 265,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UPDATE",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle.UPDATE",
    "access": null,
    "description": "requestAnimationFrame 毎に発生するイベントを取得します",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, cycleUpdate を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "cycleUpdate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, cycleUpdate を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 266,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#start",
    "access": null,
    "description": "loop(requestAnimationFrame) を開始します",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} start に成功すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "start に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 267,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#started",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#stop",
    "access": null,
    "description": "loop(cancelAnimationFrame) を止めます",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} stop に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "requestAnimationFrame id を使い cancelAnimationFrame をします"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "stop に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 269,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#started",
    "access": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#update",
    "access": null,
    "description": "loop(requestAnimationFrame)コールバック関数<br>Cycle.UPDATE event を発火します",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} requestAnimationFrame ID"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "requestAnimationFrame ID"
    },
    "generator": false
  },
  {
    "__docId__": 271,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle#id",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "factory",
    "memberof": "src/tick/Cycle.js~Cycle",
    "longname": "src/tick/Cycle.js~Cycle.factory",
    "access": null,
    "description": "Cycle instance を singleton を保証し作成します",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} Cycle instance を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "Cycle instance を返します"
    },
    "generator": false
  },
  {
    "__docId__": 273,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tick/Fps.js",
    "memberof": null,
    "longname": "src/tick/Fps.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/04 - 14:19\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport { default as Events } from '../event/Events';\n\n// tick\nimport { default as Polling } from './Polling';\n\n// /**\n//  * private property key, fps を保存するための Symbol\n//  * @type {Symbol}\n//  * @private\n//  */\n// const fpsSymbol = Symbol('Singleton Fps Symbol');\n\n/**\n * フレームレート毎に UPDATE イベントを発生させます\n *\n * @example\n * // 2sec. interval\n * const fps = new Fps(0.5);\n * const update = () => {\n *  // code here, something do\n * };\n * fps.on(Fps.UPDATE, update);\n * fps.start();\n * */\nexport default class Fps extends Polling {\n  /**\n   * 引数の frame rate に合わせ UPDATE イベントを発生させます\n   * @param {number} [fps=30] frame rate, default: 30\n   */\n  constructor(fps = 30) {\n    super(1000 / fps);\n    // @type {Events} - Events\n    const events = new Events(Fps.UPDATE, this, this);\n    /**\n     * Fps.UPDATE Events instance\n     * @returns {Events} Fps.UPDATE Events instance\n     */\n    this.events = () => events;\n    /**\n     * frame rate\n     * @type {number}\n     */\n    this.fps = fps;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * フレームレート毎に発生するイベントを取得します\n   * @event UPDATE\n   * @returns {string} event, fpsUpdate を返します\n   * @default fpsUpdate\n   */\n  static get UPDATE() {\n    return 'fpsUpdate';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * polling 時間を変更します<br>\n   * 1. プロパティ polling 変更\n   * 1. update 実行\n   * @param {number} interval fps\n   * @returns {boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します\n   */\n  change(interval) {\n    /**\n     * polling 間隔\n     * @type {number}\n     */\n    this.interval = 1000 / interval;\n    this.fps = interval;\n    return this.update();\n  }\n}\n"
  },
  {
    "__docId__": 274,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Fps",
    "memberof": "src/tick/Fps.js",
    "longname": "src/tick/Fps.js~Fps",
    "access": null,
    "export": true,
    "importPath": "./src/tick/Fps.js",
    "importStyle": "Fps",
    "description": "フレームレート毎に UPDATE イベントを発生させます",
    "examples": [
      "// 2sec. interval\nconst fps = new Fps(0.5);\nconst update = () => {\n // code here, something do\n};\nfps.on(Fps.UPDATE, update);\nfps.start();"
    ],
    "lineNumber": 38,
    "interface": false,
    "extends": [
      "src/tick/Polling.js~Polling"
    ]
  },
  {
    "__docId__": 275,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#constructor",
    "access": null,
    "description": "引数の frame rate に合わせ UPDATE イベントを発生させます",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "fps",
        "description": "frame rate, default: 30"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#events",
    "access": null,
    "description": "Fps.UPDATE Events instance",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} Fps.UPDATE Events instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "Fps.UPDATE Events instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "fps",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#fps",
    "access": null,
    "description": "frame rate",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UPDATE",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps.UPDATE",
    "access": null,
    "description": "フレームレート毎に発生するイベントを取得します",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, fpsUpdate を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "fpsUpdate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, fpsUpdate を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 279,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "change",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#change",
    "access": null,
    "description": "polling 時間を変更します<br>\n1. プロパティ polling 変更\n1. update 実行",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "fps"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`update` をコールし Polling.UPDATE event が発生すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 280,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#interval",
    "access": null,
    "description": "polling 間隔",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "fps",
    "memberof": "src/tick/Fps.js~Fps",
    "longname": "src/tick/Fps.js~Fps#fps",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tick/Polling.js",
    "memberof": null,
    "longname": "src/tick/Polling.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/04 - 16:46\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n// event\nimport { default as EventDispatcher } from '../event/EventDispatcher';\nimport { default as Events } from '../event/Events';\n\n// tick\nimport { default as Cycle } from './Cycle';\n\n/**\n * 一定間隔毎に UPDATE イベントを発生させます\n *\n * @example\n * // 3sec. interval\n * const polling = new Polling(1000 * 3);\n * const update = () => {\n *  // code here, something do\n * };\n * polling.on(Polling.UPDATE, update);\n * polling.start();\n */\nexport default class Polling extends EventDispatcher {\n  /**\n   * 引数の polling に合わせ UPDATE イベントを発生させます\n   * @param {number} [interval=1000] イベント発生間隔 milliseconds\n   */\n  constructor(interval = 1000) {\n    super();\n    // @type {Cycle} - Cycle instance\n    const cycle = Cycle.factory();\n    const boundUpdate = this.update.bind(this);\n    const events = new Events(Polling.UPDATE, this, this);\n    /**\n     * Cycle instance を取得します\n     * @returns {Cycle} Cycle instance\n     */\n    this.cycle = () => cycle;\n    /**\n     * 間隔(ms)\n     * @type {number}\n     */\n    this.interval = interval;\n    /**\n     * bound update, Cycle.UPDATE event handler\n     * @returns {function} bound update\n     */\n    this.boundUpdate = () => boundUpdate;\n    /**\n     * Events instance\n     * @returns {Events} Polling.UPDATE Events object\n     */\n    this.events = () => events;\n    /**\n     * polling event 発生時間, event を発火すると 0 にリセットされます\n     * @type {number}\n     */\n    this.begin = 0;\n    /**\n     * Cycle 監視開始フラッグ\n     * @type {boolean}\n     */\n    this.started = false;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * 一定間隔(milliseconds)毎に発生するイベント type を取得します\n   * @returns {string} event, pollingUpdate を返します\n   */\n  static get UPDATE() {\n    return 'pollingUpdate';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * polling 時間を変更します<br>\n   * 1. プロパティ polling 変更\n   * 1. update 実行\n   * @param {number} interval polling 時間\n   * @returns {boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します\n   */\n  change(interval) {\n    this.interval = interval;\n    return this.update();\n  }\n  /**\n   * started flag を反転させ現在の started flag 状態を取得します\n   * @returns {boolean} 現在の started flag 状態を返します\n   */\n  turnOver() {\n    this.started = !this.started;\n    return this.started;\n  }\n  /**\n   * events object を発火前に作成します\n   * @param {number} begin 開始時間: 前回の発火時間\n   * @param {number} present 現在時間\n   * @returns {Events} アップデートした Events を返します\n   */\n  updateEvents(begin, present) {\n    this.begin = begin;\n    // @type {Events} - start event\n    const events = this.events();\n    events.begin = begin;\n    events.present = present;\n    events.interval = this.interval;\n    return events;\n  }\n  /**\n   * cycle ループを開始します<br>\n   * watch Cycle.UPDATE event\n   * @returns {Cycle} cycle ループを開始しインスタンスを返します\n   */\n  initCycle() {\n    // cycle\n    const cycle = this.cycle();\n    // bind Cycle.UPDATE\n    cycle.on(Cycle.UPDATE, this.boundUpdate());\n    // cycle 開始\n    cycle.start();\n    return cycle;\n  }\n  /**\n   * polling を開始します\n   * @returns {boolean} start に成功すると true を返します\n   */\n  start() {\n    if (this.started) {\n      // already start\n      return false;\n    }\n    // flag -> true\n    // this[startSymbol] = true;\n    this.turnOver();\n    // cycle\n    this.initCycle();\n    // @type {number} - 開始時間\n    const present = Date.now();\n    // 強制的に1回目を実行\n    this.fire(this.updateEvents(present, present));\n\n    return true;\n  }\n  /**\n   * polling を止めます\n   * @returns {boolean} stop に成功すると true を返します\n   */\n  stop() {\n    if (!this.started) {\n      // not start\n      return false;\n    }\n    this.cycle.off(Cycle.UPDATE, this.boundUpdate());\n    // this[startSymbol] = false;\n    this.turnOver();\n    return true;\n  }\n  /**\n   * Cycle.UPDATE event handler, polling を計測しイベントを発火するかを判断します\n   *\n   * @listens {Cycle.UPDATE} Cycle.UPDATE が発生すると実行されます\n   * @returns {boolean} Polling.UPDATE event が発生すると true を返します\n   */\n  update() {\n    // 現在時間\n    // @type {number}\n    const present = Date.now();\n    // @type {number} - interval 間隔\n    const interval = this.interval;\n    // @type {number} - 開始時間\n    const begin = this.begin;\n    // 現在時間 が interval より大きくなったか\n    if ((present - begin) >= interval) {\n      // event 発火\n      this.fire(this.updateEvents(begin, present));\n      // 開始時間を update\n      this.begin = present;\n      // event 発生\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Polling.UPDATE event を発生します\n   * @param {Events} events Polling.UPDATE event object\n   * @returns {void}\n   */\n  fire(events) {\n    this.dispatch(events);\n  }\n}\n"
  },
  {
    "__docId__": 283,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Polling",
    "memberof": "src/tick/Polling.js",
    "longname": "src/tick/Polling.js~Polling",
    "access": null,
    "export": true,
    "importPath": "./src/tick/Polling.js",
    "importStyle": "Polling",
    "description": "一定間隔毎に UPDATE イベントを発生させます",
    "examples": [
      "// 3sec. interval\nconst polling = new Polling(1000 * 3);\nconst update = () => {\n // code here, something do\n};\npolling.on(Polling.UPDATE, update);\npolling.start();"
    ],
    "lineNumber": 32,
    "interface": false,
    "extends": [
      "src/event/EventDispatcher.js~EventDispatcher"
    ]
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#constructor",
    "access": null,
    "description": "引数の polling に合わせ UPDATE イベントを発生させます",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "interval",
        "description": "イベント発生間隔 milliseconds"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 285,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cycle",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#cycle",
    "access": null,
    "description": "Cycle instance を取得します",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} Cycle instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "Cycle instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#interval",
    "access": null,
    "description": "間隔(ms)",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "boundUpdate",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#boundUpdate",
    "access": null,
    "description": "bound update, Cycle.UPDATE event handler",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} bound update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "bound update"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#events",
    "access": null,
    "description": "Events instance",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} Polling.UPDATE Events object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "Polling.UPDATE Events object"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "begin",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#begin",
    "access": null,
    "description": "polling event 発生時間, event を発火すると 0 にリセットされます",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#started",
    "access": null,
    "description": "Cycle 監視開始フラッグ",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 291,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UPDATE",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling.UPDATE",
    "access": null,
    "description": "一定間隔(milliseconds)毎に発生するイベント type を取得します",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} event, pollingUpdate を返します"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, pollingUpdate を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 292,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "change",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#change",
    "access": null,
    "description": "polling 時間を変更します<br>\n1. プロパティ polling 変更\n1. update 実行",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `update` をコールし Polling.UPDATE event が発生すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "polling 時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`update` をコールし Polling.UPDATE event が発生すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 293,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#interval",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "turnOver",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#turnOver",
    "access": null,
    "description": "started flag を反転させ現在の started flag 状態を取得します",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 現在の started flag 状態を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "現在の started flag 状態を返します"
    },
    "generator": false
  },
  {
    "__docId__": 295,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#started",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateEvents",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#updateEvents",
    "access": null,
    "description": "events object を発火前に作成します",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} アップデートした Events を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "begin",
        "description": "開始時間: 前回の発火時間"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "present",
        "description": "現在時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "アップデートした Events を返します"
    },
    "generator": false
  },
  {
    "__docId__": 297,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "begin",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#begin",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initCycle",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#initCycle",
    "access": null,
    "description": "cycle ループを開始します<br>\nwatch Cycle.UPDATE event",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Cycle} cycle ループを開始しインスタンスを返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Cycle"
      ],
      "spread": false,
      "description": "cycle ループを開始しインスタンスを返します"
    },
    "generator": false
  },
  {
    "__docId__": 299,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#start",
    "access": null,
    "description": "polling を開始します",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} start に成功すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "start に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#stop",
    "access": null,
    "description": "polling を止めます",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} stop に成功すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "stop に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#update",
    "access": null,
    "description": "Cycle.UPDATE event handler, polling を計測しイベントを発火するかを判断します",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Polling.UPDATE event が発生すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Polling.UPDATE event が発生すると true を返します"
    },
    "listens": [
      {
        "types": [
          "Cycle.UPDATE"
        ],
        "description": "Cycle.UPDATE が発生すると実行されます"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 302,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "begin",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#begin",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fire",
    "memberof": "src/tick/Polling.js~Polling",
    "longname": "src/tick/Polling.js~Polling#fire",
    "access": null,
    "description": "Polling.UPDATE event を発生します",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Events"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "Polling.UPDATE event object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tick/Rate.js",
    "memberof": null,
    "longname": "src/tick/Rate.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/16\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n */\n\n// event\nimport { default as Events } from '../event/Events';\n\n// tick\nimport { default as Polling } from './Polling';\n\n/**\n * 固定値を使用し fps を決定します\n *\n * 以下のフレームレートが設定可能です\n *\n * - 60: Rate.RATE_60\n * - 30: RATE_30\n * - 20: RATE_20\n * - 15: RATE_15\n * - 12: RATE_12\n * - 10: RATE_10\n * - 6: RATE_6\n * - 5: RATE_5\n *\n * @example\n * // 1sec interval\n * const rate = new Rate(Rate.Rate_60);\n * const update = () => {\n *  // code here, something do\n * };\n * rate.on(Rate.UPDATE, update);\n * rate.start();\n */\nexport default class Rate extends Polling {\n  /**\n   * 固定値フレームレート毎に UPDATE イベントを発生させます\n   * @param {number} [rateValue=Rate.RATE_5] fps, 固定値以外設定できません\n   */\n  constructor(rateValue = Rate.RATE_5) {\n    // 60fps で polling を行う\n    super(1000 / 60);\n    // @type {Events}\n    const events = new Events(Rate.UPDATE, this, this);\n    // 設定可能な rate list\n    const rates = [\n      Rate.RATE_60,\n      Rate.RATE_30,\n      Rate.RATE_20,\n      Rate.RATE_15,\n      Rate.RATE_12,\n      Rate.RATE_10,\n      Rate.RATE_6,\n      Rate.RATE_5,\n    ];\n    /**\n     * Rate 通知 Events instance\n     * @returns {Events} Events instance\n     */\n    this.events = () => events;\n    /**\n     * 許容可能な rate\n     * @return {Array<number>} 許容可能な rate\n     */\n    this.rates = () => rates;\n    /**\n     * rate count, update 毎にカウントアップします<br>\n     * 不正値の時は `Rate.RATE_5` を使用します\n     * @type {number}\n     */\n    this.count = 0;\n    let rate = this.validate(rateValue) ? rateValue : Rate.RATE_5;\n    /**\n     * rate 値\n     * @returns {?number} rate 値\n     */\n    this.rate = () => rate;\n    /**\n     * rate 値を設定します\n     * @param {number} value rate 値\n     * @returns {boolean} rate 設定に成功すると true を返します\n     */\n    this.setRate = (value) => {\n      if (this.validate(value)) {\n        rate = value;\n        return true;\n      }\n      return false;\n    };\n    // init\n    this.setRate(rateValue);\n  }\n  // ----------------------------------------\n  // CONST\n  // ----------------------------------------\n  /**\n   * fps 60 基準値を取得します\n   * @const RATE_60\n   * @returns {number} fps 60 基準値を返します\n   * @default 1\n   */\n  static get RATE_60() {\n    return 1;\n  }  /**\n   * fps 30 基準値を取得します\n   * @const RATE_30\n   * @returns {number} fps 30 基準値を返します\n   * @default 2\n   */\n  static get RATE_30() {\n    return 2;\n  }\n  /**\n   * fps 20 基準値を取得します\n   * @const RATE_20\n   * @returns {number} fps 20 基準値を返します\n   * @default 3\n   */\n  static get RATE_20() {\n    return 3;\n  }\n  /**\n   * fps 15 基準値を取得します\n   * @const RATE_15\n   * @returns {number} fps 15 基準値を返します\n   * @default 4\n   */\n  static get RATE_15() {\n    return 4;\n  }\n  /**\n   * fps 12 基準値を取得します\n   * @const RATE_12\n   * @returns {number} fps 12 基準値を返します\n   * @default 5\n   */\n  static get RATE_12() {\n    return 5;\n  }\n  /**\n   * fps 10 基準値を取得します\n   * @const RATE_10\n   * @returns {number} fps 10 基準値を返します\n   * @default 6\n   */\n  static get RATE_10() {\n    return 6;\n  }\n  /**\n   * fps 6 基準値を取得します\n   * @const RATE_6\n   * @returns {number} fps 6 基準値を返します\n   * @default 10\n   */\n  static get RATE_6() {\n    return 10;\n  }\n  /**\n   * fps 5 基準値を取得します\n   * @const RATE_5\n   * @returns {number} fps 6 基準値を返します\n   * @default 12\n   */\n  static get RATE_5() {\n    return 12;\n  }\n  // ----------------------------------------\n  // EVENT\n  // ----------------------------------------\n  /**\n   * フレームレート毎に発生するイベント type を取得します\n   * @event UPDATE\n   * @returns {string} event, rateUpdate を返します\n   * @default rateUpdate\n   */\n  static get UPDATE() {\n    return 'rateUpdate';\n  }\n  // ----------------------------------------\n  // METHOD\n  // ----------------------------------------\n  /**\n   * 正規な rate 値かをチェックします\n   * @param {number} rate 対象 rate\n   * @returns {boolean} 正しいと true を返します\n   */\n  validate(rate) {\n    return this.rates().indexOf(rate) !== -1;\n  }\n  /**\n   * fps 基準値を設定します\n   * @throws {Error} 引数 rate が設定可能値以外の時に例外エラーが発生します\n   * @param {number} rate fps 基準値, <br>\n   * this.RATE_30, this.RATE_20, this.RATE_15, this.RATE_12, this.RATE_10, <br>\n   * this.RATE_6, this.RATE_5 の何れかが必須です\n   * @returns {boolean} rate 設定に成功すると true を返します\n   */\n  change(rate) {\n    const result = this.setRate(rate);\n    this.update();\n    return result;\n  }\n  /**\n   * loop(requestAnimationFrame) を開始します\n   * @returns {boolean} start に成功すると true を返します\n   */\n  start() {\n    if (this.started) {\n      // already start\n      return false;\n    }\n    // flag -> true\n    this.turnOver();\n    // cycle\n    this.initCycle();\n    // 強制的に1回目を実行\n    this.fire(this.updateEvents(0, 0));\n\n    return true;\n  }\n  /**\n   * loop(requestAnimationFrame) します\n   * @returns {boolean} Rate.UPDATE event が発生すると true を返します\n   */\n  update() {\n    // 余りが 0 の時にイベントを発火します\n    this.count += 1;\n    const reminder = this.count % this.rate();\n    if (reminder === 0) {\n      this.count = 0;\n      this.fire(this.updateEvents(0, 0));\n\n      return true;\n    }\n\n    return false;\n  }\n}\n"
  },
  {
    "__docId__": 305,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Rate",
    "memberof": "src/tick/Rate.js",
    "longname": "src/tick/Rate.js~Rate",
    "access": null,
    "export": true,
    "importPath": "./src/tick/Rate.js",
    "importStyle": "Rate",
    "description": "固定値を使用し fps を決定します\n\n以下のフレームレートが設定可能です\n\n- 60: Rate.RATE_60\n- 30: RATE_30\n- 20: RATE_20\n- 15: RATE_15\n- 12: RATE_12\n- 10: RATE_10\n- 6: RATE_6\n- 5: RATE_5",
    "examples": [
      "// 1sec interval\nconst rate = new Rate(Rate.Rate_60);\nconst update = () => {\n // code here, something do\n};\nrate.on(Rate.UPDATE, update);\nrate.start();"
    ],
    "lineNumber": 43,
    "interface": false,
    "extends": [
      "src/tick/Polling.js~Polling"
    ]
  },
  {
    "__docId__": 306,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#constructor",
    "access": null,
    "description": "固定値フレームレート毎に UPDATE イベントを発生させます",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Rate.RATE_5",
        "defaultRaw": "Rate.RATE_5",
        "name": "rateValue",
        "description": "fps, 固定値以外設定できません"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 307,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "events",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#events",
    "access": null,
    "description": "Rate 通知 Events instance",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Events} Events instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Events"
      ],
      "spread": false,
      "description": "Events instance"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rates",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#rates",
    "access": null,
    "description": "許容可能な rate",
    "lineNumber": 73,
    "return": {
      "nullable": null,
      "types": [
        "Array<number>"
      ],
      "spread": false,
      "description": "許容可能な rate"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "count",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#count",
    "access": null,
    "description": "rate count, update 毎にカウントアップします<br>\n不正値の時は `Rate.RATE_5` を使用します",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rate",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#rate",
    "access": null,
    "description": "rate 値",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?number} rate 値"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "rate 値"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "setRate",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#setRate",
    "access": null,
    "description": "rate 値を設定します",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} rate 設定に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "rate 値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "rate 設定に成功すると true を返します"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_60",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_60",
    "access": null,
    "description": "fps 60 基準値を取得します",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_60"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 60 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 60 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_30",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_30",
    "access": null,
    "description": "fps 30 基準値を取得します",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_30"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 30 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "2"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 30 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 314,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_20",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_20",
    "access": null,
    "description": "fps 20 基準値を取得します",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_20"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 20 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "3"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 20 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 315,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_15",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_15",
    "access": null,
    "description": "fps 15 基準値を取得します",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_15"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 15 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "4"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 15 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 316,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_12",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_12",
    "access": null,
    "description": "fps 12 基準値を取得します",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_12"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 12 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "5"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 12 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 317,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_10",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_10",
    "access": null,
    "description": "fps 10 基準値を取得します",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_10"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 10 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "6"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 10 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 318,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_6",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_6",
    "access": null,
    "description": "fps 6 基準値を取得します",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_6"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 6 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "10"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 6 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 319,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "RATE_5",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.RATE_5",
    "access": null,
    "description": "fps 5 基準値を取得します",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": "RATE_5"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number} fps 6 基準値を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "12"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "fps 6 基準値を返します"
    },
    "type": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 320,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "UPDATE",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate.UPDATE",
    "access": null,
    "description": "フレームレート毎に発生するイベント type を取得します",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@event",
        "tagValue": "UPDATE"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} event, rateUpdate を返します"
      },
      {
        "tagName": "@default",
        "tagValue": "rateUpdate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "event, rateUpdate を返します"
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 321,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validate",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#validate",
    "access": null,
    "description": "正規な rate 値かをチェックします",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 正しいと true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "対象 rate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "正しいと true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 322,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "change",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#change",
    "access": null,
    "description": "fps 基準値を設定します",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} rate 設定に成功すると true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "fps 基準値, <br>\nthis.RATE_30, this.RATE_20, this.RATE_15, this.RATE_12, this.RATE_10, <br>\nthis.RATE_6, this.RATE_5 の何れかが必須です"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "rate 設定に成功すると true を返します"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "引数 rate が設定可能値以外の時に例外エラーが発生します"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 323,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#start",
    "access": null,
    "description": "loop(requestAnimationFrame) を開始します",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} start に成功すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "start に成功すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 324,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#update",
    "access": null,
    "description": "loop(requestAnimationFrame) します",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Rate.UPDATE event が発生すると true を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Rate.UPDATE event が発生すると true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 325,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "count",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#count",
    "access": null,
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "count",
    "memberof": "src/tick/Rate.js~Rate",
    "longname": "src/tick/Rate.js~Rate#count",
    "access": null,
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Freeze.js",
    "memberof": null,
    "longname": "src/util/Freeze.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/19 - 22:10\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n\n/**\n * scroll freeze timeout id\n * @private\n * @static\n * @type {number}\n */\nlet timerId = 0;\n\n/**\n * scroll を止める時間\n * @private\n * @static\n * @type {number}\n * @default 200\n */\nlet duration = 200;\n\n/**\n * scroll 操作を強制的に不可能にします\n */\nexport default class Freeze {\n  /**\n   * scroll 動作を受付不能にします\n   * @returns {void}\n   */\n  static start() {\n    window.addEventListener('touchstart', Freeze.onScroll, false);\n    window.addEventListener('touchmove', Freeze.onScroll, false);\n    window.addEventListener('touchend', Freeze.onScroll, false);\n    window.addEventListener('scroll', Freeze.onScroll, false);\n    document.addEventListener('wheel', Freeze.onScroll, false);\n    document.addEventListener('mousewheel', Freeze.onScroll, false);\n    window.addEventListener('DOMMouseScroll', Freeze.onScroll, false);\n  }\n  /**\n   * scroll 動作を回復します\n   * @returns {void}\n   */\n  static stop() {\n    window.removeEventListener('touchstart', Freeze.onScroll);\n    window.removeEventListener('touchmove', Freeze.onScroll);\n    window.removeEventListener('touchend', Freeze.onScroll);\n    window.removeEventListener('scroll', Freeze.onScroll);\n    document.removeEventListener('wheel', Freeze.onScroll);\n    document.removeEventListener('mousewheel', Freeze.onScroll);\n    window.removeEventListener('DOMMouseScroll', Freeze.onScroll);\n  }\n  /**\n   * window scroll event handler, バブリング・伝播全てキャンセルします\n   * @param {Event} event window scroll event\n   * @returns {boolean} event をキャンセルするために false を返します\n   */\n  static onScroll(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n  }\n  /**\n   * scroll 操作を引数(delay)の間キャンセルします\n   * @param {number} [delay=200] 遅延時間(ms), 200\n   * @returns {number} time out id\n   */\n  static freeze(delay = Freeze.duration()) {\n    clearTimeout(timerId);\n\n    Freeze.stop();\n    timerId = setTimeout(Freeze.start, delay);\n    return timerId;\n  }\n  /**\n   * scroll 操作を不能にする時間間隔(ms)を取得します\n   * @returns {number} scroll 操作を不能にする時間間隔(ms)\n   */\n  static duration() {\n    return duration;\n  }\n  /**\n   * scroll 操作を不能にする時間間隔(ms)を設定します\n   * @param {number} time scroll 操作を不能にする時間(ms)\n   * @returns {void}\n   */\n  static setDuration(time) {\n    duration = time;\n  }\n}\n"
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "timerId",
    "memberof": "src/util/Freeze.js",
    "longname": "src/util/Freeze.js~timerId",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Freeze.js",
    "importStyle": null,
    "description": "scroll freeze timeout id",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "duration",
    "memberof": "src/util/Freeze.js",
    "longname": "src/util/Freeze.js~duration",
    "access": "private",
    "export": false,
    "importPath": "./src/util/Freeze.js",
    "importStyle": null,
    "description": "scroll を止める時間",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      },
      {
        "tagName": "@default",
        "tagValue": "200"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 330,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Freeze",
    "memberof": "src/util/Freeze.js",
    "longname": "src/util/Freeze.js~Freeze",
    "access": null,
    "export": true,
    "importPath": "./src/util/Freeze.js",
    "importStyle": "Freeze",
    "description": "scroll 操作を強制的に不可能にします",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 331,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "start",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.start",
    "access": null,
    "description": "scroll 動作を受付不能にします",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 332,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "stop",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.stop",
    "access": null,
    "description": "scroll 動作を回復します",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 333,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "onScroll",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.onScroll",
    "access": null,
    "description": "window scroll event handler, バブリング・伝播全てキャンセルします",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} event をキャンセルするために false を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "window scroll event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "event をキャンセルするために false を返します"
    },
    "generator": false
  },
  {
    "__docId__": 334,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "freeze",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.freeze",
    "access": null,
    "description": "scroll 操作を引数(delay)の間キャンセルします",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time out id"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "200",
        "defaultRaw": 200,
        "name": "delay",
        "description": "遅延時間(ms), 200"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time out id"
    },
    "generator": false
  },
  {
    "__docId__": 335,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "duration",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.duration",
    "access": null,
    "description": "scroll 操作を不能にする時間間隔(ms)を取得します",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} scroll 操作を不能にする時間間隔(ms)"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "scroll 操作を不能にする時間間隔(ms)"
    },
    "generator": false
  },
  {
    "__docId__": 336,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "setDuration",
    "memberof": "src/util/Freeze.js~Freeze",
    "longname": "src/util/Freeze.js~Freeze.setDuration",
    "access": null,
    "description": "scroll 操作を不能にする時間間隔(ms)を設定します",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "scroll 操作を不能にする時間(ms)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 337,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Hit.js",
    "memberof": null,
    "longname": "src/util/Hit.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/29 - 22:06\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 衝突判定を行います\n */\nexport default class Hit {\n  /**\n   * element と window.top(0) window.bottom(height) のヒットテストを行います\n   * @param {number} height 衝突対象物の高さ window.innerHeight\n   * @param {ClientRect|Object} offset 比較対象物の element ClientRect または同等の Object\n   * @returns {{\n   *  top: boolean,\n   *  bottom: boolean,\n   *  contain: boolean,\n   *  include: boolean\n   * }} hit check object を返します\n   */\n  static test(height, offset) {\n    // hit test\n    const hit = {\n      result: false,\n      top: false,\n      bottom: false,\n      contain: false,\n      include: false,\n    };\n\n    // top\n    if (offset.top <= height && offset.top >= 0) {\n      hit.top = true;\n    }\n\n    // bottom\n    if (offset.bottom <= height && offset.bottom >= 0) {\n      hit.bottom = true;\n    }\n\n    // contain check を行います\n    if (offset.top <= 0 && offset.bottom >= height) {\n      hit.contain = true;\n    }\n\n    // include check を行います\n    if (\n      (offset.top >= 0 && offset.top <= height) &&\n      (offset.bottom >= 0 && offset.bottom <= height)\n    ) {\n      hit.include = true;\n    }\n    // return\n    // return hit.top || hit.bottom || hit.contain || hit.include;\n    hit.result = hit.top || hit.bottom || hit.contain || hit.include;\n    return hit;\n  }\n}\n"
  },
  {
    "__docId__": 338,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Hit",
    "memberof": "src/util/Hit.js",
    "longname": "src/util/Hit.js~Hit",
    "access": null,
    "export": true,
    "importPath": "./src/util/Hit.js",
    "importStyle": "Hit",
    "description": "衝突判定を行います",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 339,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "test",
    "memberof": "src/util/Hit.js~Hit",
    "longname": "src/util/Hit.js~Hit.test",
    "access": null,
    "description": "element と window.top(0) window.bottom(height) のヒットテストを行います",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{\n top: boolean,\n bottom: boolean,\n contain: boolean,\n include: boolean\n}} hit check object を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "衝突対象物の高さ window.innerHeight"
      },
      {
        "nullable": null,
        "types": [
          "ClientRect",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "比較対象物の element ClientRect または同等の Object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\n top: boolean,\n bottom: boolean,\n contain: boolean,\n include: boolean\n}"
      ],
      "spread": false,
      "description": "hit check object を返します"
    },
    "generator": false
  },
  {
    "__docId__": 340,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/List.js",
    "memberof": null,
    "longname": "src/util/List.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/26 - 14:57\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nimport { default as Type } from './Type';\n\n/**\n * Array（配列）Utility\n */\nexport default class List {\n  /**\n   * Array.prototype.fill, polyfill\n   * @param {number} lengthData 配列長\n   * @param {*} value fill する値\n   * @returns {Array.<*>} fill 後の配列を返します\n   * @private\n   */\n  static filling(lengthData, value) {\n    let length = lengthData;\n    const arr = [].slice(0);\n    while (length > 0) {\n      arr.push(value);\n      length -= 1;\n    }\n    return arr;\n  }\n  /**\n   * Array.prototype.fill を行います\n   * @param {number} length 配列長\n   * @param {*} value fill する値\n   * @returns {Array.<*>} fill 後の配列を返しますd\n   */\n  static fill(length, value = 0) {\n    // 関数が使えない時は polyfill 関数を使用します\n    if (!Type.method(Array.prototype.fill)) {\n      return List.filling(length, value);\n    }\n    // native method\n    return new Array(length).fill(value);\n  }\n}\n"
  },
  {
    "__docId__": 341,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "List",
    "memberof": "src/util/List.js",
    "longname": "src/util/List.js~List",
    "access": null,
    "export": true,
    "importPath": "./src/util/List.js",
    "importStyle": "List",
    "description": "Array（配列）Utility",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 342,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "filling",
    "memberof": "src/util/List.js~List",
    "longname": "src/util/List.js~List.filling",
    "access": "private",
    "description": "Array.prototype.fill, polyfill",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<*>} fill 後の配列を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lengthData",
        "description": "配列長"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "fill する値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<*>"
      ],
      "spread": false,
      "description": "fill 後の配列を返します"
    },
    "generator": false
  },
  {
    "__docId__": 343,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "fill",
    "memberof": "src/util/List.js~List",
    "longname": "src/util/List.js~List.fill",
    "access": null,
    "description": "Array.prototype.fill を行います",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<*>} fill 後の配列を返しますd"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "配列長"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "fill する値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<*>"
      ],
      "spread": false,
      "description": "fill 後の配列を返しますd"
    },
    "generator": false
  },
  {
    "__docId__": 344,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Text.js",
    "memberof": null,
    "longname": "src/util/Text.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/11/22 - 13:53\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 文字列操作の utility\n */\nexport default class Text {\n  /**\n   * camel case を hyphenation に変換します\n   * @param {string} str 操作対象文字列\n   * @returns {string} キャメルケースをハイフネーションに変換後文字列を返します\n   */\n  static dash(str) {\n    return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n  }\n  /**\n   * camel case へ変換します\n   * @param {string} str 操作対象文字列\n   * @returns {*|void|string|XML} キャメルケース文字列を返します\n   */\n  static camel(str) {\n    // return str.replace(/^\\s+|\\s+$/g, '');\n    return str.replace(/-([a-z])/g, (g) => {\n      const first = g[1];\n      return first.toUpperCase();\n    });\n  }\n}\n"
  },
  {
    "__docId__": 345,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Text",
    "memberof": "src/util/Text.js",
    "longname": "src/util/Text.js~Text",
    "access": null,
    "export": true,
    "importPath": "./src/util/Text.js",
    "importStyle": "Text",
    "description": "文字列操作の utility",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 346,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "dash",
    "memberof": "src/util/Text.js~Text",
    "longname": "src/util/Text.js~Text.dash",
    "access": null,
    "description": "camel case を hyphenation に変換します",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} キャメルケースをハイフネーションに変換後文字列を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "キャメルケースをハイフネーションに変換後文字列を返します"
    },
    "generator": false
  },
  {
    "__docId__": 347,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "camel",
    "memberof": "src/util/Text.js~Text",
    "longname": "src/util/Text.js~Text.camel",
    "access": null,
    "description": "camel case へ変換します",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|void|string|XML} キャメルケース文字列を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "操作対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "void",
        "string",
        "XML"
      ],
      "spread": false,
      "description": "キャメルケース文字列を返します"
    },
    "generator": false
  },
  {
    "__docId__": 348,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Times.js",
    "memberof": null,
    "longname": "src/util/Times.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/12/16 - 16:50\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\nconst oneMinute = 1000 * 60;\nconst oneHour = oneMinute * 60;\nconst oneDay = oneHour * 24;\nconst oneWeek = oneDay * 7;\nconst oneMonth = oneDay * 30;\n\n/**\n * 指定時間を計算し Date instance を作成します\n */\nexport default class Times {\n  // /**\n  //  * 1970-1-1 00:00\n  //  * @returns {Date} 1970-1-1 00:00\n  //  */\n  // static standard() {\n  //   return new Date();\n  // }\n  /**\n   * 現在時間 Date instance\n   * @returns {Date} 現在時間 Date instance\n   */\n  static present() {\n    return new Date();\n  }\n  /**\n   * 指定分後の Date instance\n   * @param {number} n 指定分\n   * @returns {Date} 指定分後の Date instance\n   */\n  static minute(n) {\n    return new Date(Date.now() + (n * oneMinute));\n  }\n  /**\n   * 指定時間後の Date instance\n   * @param {number} n 指定時間\n   * @returns {Date} 指定時間後の Date instance\n   */\n  static hour(n) {\n    return new Date(Date.now() + (n * oneHour));\n  }\n  /**\n   * 指定日後の Date instance\n   * @param {number} n 指定日\n   * @returns {Date} 指定日後の Date instance\n   */\n  static day(n) {\n    return new Date(Date.now() + (n * oneDay));\n  }\n  /**\n   * 指定週後の Date instance\n   * @param {number} n 指定週\n   * @returns {Date} 指定週後の Date instance\n   */\n  static week(n) {\n    return new Date(Date.now() + (n * oneWeek));\n  }\n  /**\n   * 指定月後の Date instance\n   * @param {number} n 指定月\n   * @returns {Date} 指定月後の Date instance\n   */\n  static month(n) {\n    return new Date(Date.now() + (n * oneMonth));\n  }\n}\n"
  },
  {
    "__docId__": 349,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "oneMinute",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~oneMinute",
    "access": null,
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": "Copyright (c) 2011-2016 inazumatv.com, inc.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "(at)taikiken / http://inazumatv.com"
      },
      {
        "tagName": "@date",
        "tagValue": "2016/12/16 - 16:50\n\nDistributed under the terms of the MIT license.\nhttp://www.opensource.org/licenses/mit-license.html\n\nThis notice shall be included in all copies or substantial portions of the Software."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "oneHour",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~oneHour",
    "access": null,
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "oneDay",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~oneDay",
    "access": null,
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "oneWeek",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~oneWeek",
    "access": null,
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "oneMonth",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~oneMonth",
    "access": null,
    "export": false,
    "importPath": "./src/util/Times.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Times",
    "memberof": "src/util/Times.js",
    "longname": "src/util/Times.js~Times",
    "access": null,
    "export": true,
    "importPath": "./src/util/Times.js",
    "importStyle": "Times",
    "description": "指定時間を計算し Date instance を作成します",
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 355,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "present",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.present",
    "access": null,
    "description": "現在時間 Date instance",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 現在時間 Date instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "現在時間 Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 356,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "minute",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.minute",
    "access": null,
    "description": "指定分後の Date instance",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定分後の Date instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定分"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定分後の Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 357,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hour",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.hour",
    "access": null,
    "description": "指定時間後の Date instance",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定時間後の Date instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定時間"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定時間後の Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 358,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "day",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.day",
    "access": null,
    "description": "指定日後の Date instance",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定日後の Date instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定日"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定日後の Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 359,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "week",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.week",
    "access": null,
    "description": "指定週後の Date instance",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定週後の Date instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定週"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定週後の Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 360,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "month",
    "memberof": "src/util/Times.js~Times",
    "longname": "src/util/Times.js~Times.month",
    "access": null,
    "description": "指定月後の Date instance",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Date} 指定月後の Date instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "指定月"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": "指定月後の Date instance"
    },
    "generator": false
  },
  {
    "__docId__": 361,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Type.js",
    "memberof": null,
    "longname": "src/util/Type.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Copyright (c) 2011-2016 inazumatv.com, inc.\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/07/12 - 18:24\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n *\n */\n\n/**\n * 型チェックを行います\n * @static\n */\nexport default class Type {\n  /**\n   * 引数(target)が関数かを調べます\n   * @param {Function|*} target 調査対象\n   * @returns {boolean} 引数(target)が関数かを調べ結果を返します、true: 関数\n   */\n  static method(target) {\n    return typeof target === 'function';\n  }\n  /**\n   * 引数(target)を `!!` で調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)を `!!` で調べ結果を返します\n   */\n  static exist(target) {\n    return !!target;\n  }\n  /**\n   * 引数(target)が number かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が number かを調べ結果を返します、true: number\n   */\n  static number(target) {\n    // [参考] jQuery 2.x, jQuery 2 関数は文字列 \"2\" も true にするので type check を追加した\n    return typeof target === 'number' && !Type.array(target) && ((target - parseFloat(target)) + 1) >= 0;\n  }\n  /**\n   * 引数(target)が int かを `Number.isInteger` を使用し調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が int かを調べ結果を返します、true: int\n   */\n  static int(target) {\n    return Number.isInteger(target);\n  }\n  /**\n   * 引数(target)が string かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が string かを調べ結果を返します、true: string\n   */\n  static string(target) {\n    return typeof target === 'string';\n  }\n  /**\n   * 引数(target)を `Array.isArray` で配列かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が 配列 かを調べ結果を返します、true: 配列\n   */\n  static array(target) {\n    return Array.isArray(target);\n  }\n  /**\n   * 引数(target)が null かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} 引数(target)が null かを調べ結果を返します、true: null\n   */\n  static nil(target) {\n    return target === null;\n  }\n  /**\n   * @deprecated instead use Type.has\n   * Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます\n   * @param {Object} target 調査対象\n   * @param {string} key Object.key 名称\n   * @returns {boolean} 存在する時は true を返します\n   */\n  static hasKey(target, key) {\n    return Type.has(target, key);\n  }\n  /**\n   * Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます\n   * @param {Object} target 調査対象\n   * @param {string} key Object.key 名称\n   * @returns {boolean} 存在する時は true を返します\n   */\n  static has(target, key) {\n    return Object.keys(target).indexOf(key) !== -1;\n  }\n  /**\n   * target が undefined かを調べます\n   * @param {*} target 調査対象\n   * @returns {boolean} true: undefined\n   * @since 2016-10-25\n   */\n  static undef(target) {\n    return typeof target === 'undefined';\n  }\n  /**\n   * @deprecated instead use Type.extension\n   * ファイル名から拡張子を取得します\n   * @param {string} fileName 取得したいファイル名称\n   * @returns {string} ファイル名の拡張子を返します\n   */\n  static getExtension(fileName) {\n    // // http://stackoverflow.com/questions/190852/how-can-i-get-file-extensions-with-javascript\n    // const split = fileName.split('.');\n    //\n    // if (split.length === 1 || (split[0] === '' && split.length === 2)) {\n    //   return '';\n    // }\n    //\n    // return split.pop().toLowerCase();\n    return Type.extension(fileName);\n  }\n  /**\n   * ファイル名から拡張子を取得します\n   * @param {string} fileName 取得したいファイル名称\n   * @returns {string} ファイル名の拡張子を返します\n   */\n  static extension(fileName) {\n    if (typeof fileName !== 'string') {\n      return '';\n    }\n    const splits = fileName.split('.');\n    if (splits.length === 1) {\n      return '';\n    }\n    return splits.pop().toLowerCase();\n  }\n  // ----------------------------------------------------------\n  // 画像パスが正規かチェックする\n  /**\n   * 使用可能なbase64 file かを調べます\n   * @param {string} fileName 調査対象ファイル名\n   * @returns {boolean} jpeg / png の時に true を返します\n   */\n  static base64(fileName) {\n    if (!Type.exist(fileName)) {\n      return false;\n    }\n    return fileName.indexOf('data:image/jpeg;base64') !== -1 ||\n      fileName.indexOf('data:image/png;base64') !== -1 ||\n      fileName.indexOf('data:image/jpg;base64') !== -1 ||\n      fileName.indexOf('data:image/gif;base64') !== -1;\n  }\n  /**\n   * 拡張子から画像ファイルかを調べます\n   * @param {string} fileName 調査対象ファイル名\n   * @returns {Boolean} 'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します\n   */\n  static img(fileName) {\n    if (!Type.exist(fileName)) {\n      return false;\n    }\n    // base64\n    if (Type.base64(fileName)) {\n      return true;\n    }\n    // 拡張子チェック\n    return ['jpg', 'png', 'jpeg', 'gif'].indexOf(Type.getExtension(fileName)) !== -1;\n  }\n}\n"
  },
  {
    "__docId__": 362,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Type",
    "memberof": "src/util/Type.js",
    "longname": "src/util/Type.js~Type",
    "access": null,
    "export": true,
    "importPath": "./src/util/Type.js",
    "importStyle": "Type",
    "description": "型チェックを行います",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@static",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 363,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "method",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.method",
    "access": null,
    "description": "引数(target)が関数かを調べます",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が関数かを調べ結果を返します、true: 関数"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が関数かを調べ結果を返します、true: 関数"
    },
    "generator": false
  },
  {
    "__docId__": 364,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "exist",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.exist",
    "access": null,
    "description": "引数(target)を `!!` で調べます",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)を `!!` で調べ結果を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)を `!!` で調べ結果を返します"
    },
    "generator": false
  },
  {
    "__docId__": 365,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "number",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.number",
    "access": null,
    "description": "引数(target)が number かを調べます",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が number かを調べ結果を返します、true: number"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が number かを調べ結果を返します、true: number"
    },
    "generator": false
  },
  {
    "__docId__": 366,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "int",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.int",
    "access": null,
    "description": "引数(target)が int かを `Number.isInteger` を使用し調べます",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が int かを調べ結果を返します、true: int"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が int かを調べ結果を返します、true: int"
    },
    "generator": false
  },
  {
    "__docId__": 367,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "string",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.string",
    "access": null,
    "description": "引数(target)が string かを調べます",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が string かを調べ結果を返します、true: string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が string かを調べ結果を返します、true: string"
    },
    "generator": false
  },
  {
    "__docId__": 368,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "array",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.array",
    "access": null,
    "description": "引数(target)を `Array.isArray` で配列かを調べます",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が 配列 かを調べ結果を返します、true: 配列"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が 配列 かを調べ結果を返します、true: 配列"
    },
    "generator": false
  },
  {
    "__docId__": 369,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "nil",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.nil",
    "access": null,
    "description": "引数(target)が null かを調べます",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 引数(target)が null かを調べ結果を返します、true: null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "引数(target)が null かを調べ結果を返します、true: null"
    },
    "generator": false
  },
  {
    "__docId__": 370,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hasKey",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.hasKey",
    "access": null,
    "description": "",
    "lineNumber": 82,
    "deprecated": "instead use Type.has\nObject型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在する時は true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Object.key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在する時は true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 371,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "has",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.has",
    "access": null,
    "description": "Object型 引数 `object` は String型 引数 `key` を [key] として所持しているかを調べます",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} 存在する時は true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Object.key 名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在する時は true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 372,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "undef",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.undef",
    "access": null,
    "description": "target が undefined かを調べます",
    "lineNumber": 100,
    "since": "2016-10-25",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true: undefined"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "調査対象"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true: undefined"
    },
    "generator": false
  },
  {
    "__docId__": 373,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getExtension",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.getExtension",
    "access": null,
    "description": "",
    "lineNumber": 109,
    "deprecated": "instead use Type.extension\nファイル名から拡張子を取得します",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} ファイル名の拡張子を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "取得したいファイル名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "ファイル名の拡張子を返します"
    },
    "generator": false
  },
  {
    "__docId__": 374,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extension",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.extension",
    "access": null,
    "description": "ファイル名から拡張子を取得します",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} ファイル名の拡張子を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "取得したいファイル名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "ファイル名の拡張子を返します"
    },
    "generator": false
  },
  {
    "__docId__": 375,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "base64",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.base64",
    "access": null,
    "description": "使用可能なbase64 file かを調べます",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} jpeg / png の時に true を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "調査対象ファイル名"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "jpeg / png の時に true を返します"
    },
    "generator": false
  },
  {
    "__docId__": 376,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "img",
    "memberof": "src/util/Type.js~Type",
    "longname": "src/util/Type.js~Type.img",
    "access": null,
    "description": "拡張子から画像ファイルかを調べます",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} 'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "調査対象ファイル名"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "'jpg', 'png', 'jpeg', 'gif' のいづれかに該当するかの真偽値を返します"
    },
    "generator": false
  },
  {
    "__docId__": 377,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/util/Vectors.js",
    "memberof": null,
    "longname": "src/util/Vectors.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * @license inazumatv.com\n * @author (at)taikiken / http://inazumatv.com\n * @date 2016/10/08\n *\n * Copyright (c) 2011-2015 inazumatv.com, inc.\n *\n * Distributed under the terms of the MIT license.\n * http://www.opensource.org/licenses/mit-license.html\n *\n * This notice shall be included in all copies or substantial portions of the Software.\n * Vectors\n */\n\n/**\n * ある点の座標(x, y)と時間(time)を管理します\n */\nexport default class Vectors {\n  /**\n   * 座標と現在時間を元にインスタンスを作成します\n   * @param {number} [x=0] 座標 x\n   * @param {number} [y=0] 座標 y\n   * @param {number} [time=0] 時間 milli seconds\n   */\n  constructor(x = 0, y = 0, time = 0) {\n    /**\n     * 座標 x\n     * @type {number}\n     */\n    this.x = x;\n    /**\n     * 座標 y\n     * @type {number}\n     */\n    this.y = y;\n    /**\n     * 時間 milli seconds\n     * @type {number}\n     */\n    this.time = time;\n    /**\n     * スクロール中かのフラッグ, true: スクロール中\n     * @type {boolean}\n     */\n    this.scrolling = false;\n  }\n  /**\n   * x, y, time プロパティを全て `0` にします\n   * @returns {Vectors} メソッドチェイン可能なようにインスタンスを返します\n   */\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    this.time = 0;\n\n    return this;\n  }\n  /**\n   * x, y, time を更新します\n   * @param {number} x 座標 x\n   * @param {number} y 座標 y\n   * @param {number} [time=Date.now] 時間 milli seconds\n   * @returns {Vectors} メソッドチェイン可能なようにインスタンスを返します\n   */\n  update(x, y, time = Date.now()) {\n    this.x = x;\n    this.y = y;\n    this.time = time;\n\n    return this;\n  }\n  /**\n   * 引数 vectors 間の距離を測ります\n   * @param {Vectors} vectors 計測したい対象 Vector instance\n   * @returns {number} 距離を返します\n   */\n  distance(vectors) {\n    const distanceX = this.x - vectors.x;\n    const distanceY = this.y - vectors.y;\n    const sqrt = (distanceX * distanceX) + (distanceY * distanceY);\n    return Math.sqrt(sqrt);\n  }\n  /**\n   * 引数 vectors との時間差を計算します\n   * @param {Vectors} vectors 計測したい対象 Vector instance\n   * @returns {number} 時間差(milli seconds) を返します\n   */\n  duration(vectors) {\n    return this.time - vectors.time;\n  }\n  /**\n   * 複製を作成し返します\n   * @returns {Vectors} 複製を返します\n   */\n  clone() {\n    const clone = new Vectors(this.x, this.y, this.time);\n    clone.scrolling = this.scrolling;\n    return clone;\n  }\n  /**\n   * ベクトルの大きさの２乗の平方根を計算します\n   * @returns {number} ベクトルの大きさの２乗の平方根を返します\n   */\n  length() {\n    const x = this.x;\n    const y = this.y;\n    return Math.sqrt((x * x) + (y * y));\n  }\n  /**\n   * ベクトルの値を scalar 値で除算します\n   *\n   * @param {number} scalar 除算母数\n   * @returns {Vectors} 除算後の Vector を返します\n   */\n  divideByScalar(scalar) {\n    const clone = this.clone();\n    if (scalar === 0) {\n      clone.x = 0;\n      clone.y = 0;\n    } else {\n      const x = clone.x;\n      const y = clone.y;\n      const inverse = 1 / scalar;\n      clone.x = x * inverse;\n      clone.y = y * inverse;\n    }\n\n    return clone;\n  }\n  /**\n   * ベクトルの大きさを正規化（大きさを1）した Vector を作成します\n   * @returns {Vectors} ベクトルの大きさを正規化（大きさを1）した Vectors を返します\n   */\n  normalize() {\n    return this.divideByScalar(this.length());\n  }\n  /**\n   * 引数 vectors との X 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} X 値を減算し返します\n   */\n  betweenX(vectors) {\n    return this.x - vectors.x;\n  }\n  /**\n   * 引数 vectors との Y 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} Y 値を減算し返します\n   */\n  betweenY(vectors) {\n    return this.y - vectors.y;\n  }\n  /**\n   * 引数 vectors との time 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {number} time 値を減算し返します\n   */\n  betweenTime(vectors) {\n    return this.time - vectors.time;\n  }\n  /**\n   * 引数 vectors との x, y, time 値を減算します\n   * @param {Vectors} vectors 計測したい対象 Vectors instance\n   * @returns {Vectors} 引数 vectors との x, y, time 値を減算した clone を返します\n   */\n  between(vectors) {\n    const clone = this.clone();\n    clone.x = clone.betweenX(vectors);\n    clone.y = clone.betweenY(vectors);\n    clone.time = clone.betweenTime(vectors);\n\n    return clone;\n  }\n}\n"
  },
  {
    "__docId__": 378,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Vectors",
    "memberof": "src/util/Vectors.js",
    "longname": "src/util/Vectors.js~Vectors",
    "access": null,
    "export": true,
    "importPath": "./src/util/Vectors.js",
    "importStyle": "Vectors",
    "description": "ある点の座標(x, y)と時間(time)を管理します",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 379,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#constructor",
    "access": null,
    "description": "座標と現在時間を元にインスタンスを作成します",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "x",
        "description": "座標 x"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "y",
        "description": "座標 y"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "time",
        "description": "時間 milli seconds"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 380,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#x",
    "access": null,
    "description": "座標 x",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#y",
    "access": null,
    "description": "座標 y",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "time",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#time",
    "access": null,
    "description": "時間 milli seconds",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scrolling",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#scrolling",
    "access": null,
    "description": "スクロール中かのフラッグ, true: スクロール中",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#reset",
    "access": null,
    "description": "x, y, time プロパティを全て `0` にします",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} メソッドチェイン可能なようにインスタンスを返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "メソッドチェイン可能なようにインスタンスを返します"
    },
    "generator": false
  },
  {
    "__docId__": 385,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#x",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#y",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "time",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#time",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#update",
    "access": null,
    "description": "x, y, time を更新します",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} メソッドチェイン可能なようにインスタンスを返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "座標 x"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "座標 y"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "time",
        "description": "時間 milli seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "メソッドチェイン可能なようにインスタンスを返します"
    },
    "generator": false
  },
  {
    "__docId__": 389,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#x",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#y",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "time",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#time",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "distance",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#distance",
    "access": null,
    "description": "引数 vectors 間の距離を測ります",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 距離を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vector instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "距離を返します"
    },
    "generator": false
  },
  {
    "__docId__": 393,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "duration",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#duration",
    "access": null,
    "description": "引数 vectors との時間差を計算します",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} 時間差(milli seconds) を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vector instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "時間差(milli seconds) を返します"
    },
    "generator": false
  },
  {
    "__docId__": 394,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#clone",
    "access": null,
    "description": "複製を作成し返します",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 複製を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "複製を返します"
    },
    "generator": false
  },
  {
    "__docId__": 395,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#length",
    "access": null,
    "description": "ベクトルの大きさの２乗の平方根を計算します",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} ベクトルの大きさの２乗の平方根を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "ベクトルの大きさの２乗の平方根を返します"
    },
    "generator": false
  },
  {
    "__docId__": 396,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "divideByScalar",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#divideByScalar",
    "access": null,
    "description": "ベクトルの値を scalar 値で除算します",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 除算後の Vector を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scalar",
        "description": "除算母数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "除算後の Vector を返します"
    },
    "generator": false
  },
  {
    "__docId__": 397,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "normalize",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#normalize",
    "access": null,
    "description": "ベクトルの大きさを正規化（大きさを1）した Vector を作成します",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} ベクトルの大きさを正規化（大きさを1）した Vectors を返します"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "ベクトルの大きさを正規化（大きさを1）した Vectors を返します"
    },
    "generator": false
  },
  {
    "__docId__": 398,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "betweenX",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#betweenX",
    "access": null,
    "description": "引数 vectors との X 値を減算します",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} X 値を減算し返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "X 値を減算し返します"
    },
    "generator": false
  },
  {
    "__docId__": 399,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "betweenY",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#betweenY",
    "access": null,
    "description": "引数 vectors との Y 値を減算します",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Y 値を減算し返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Y 値を減算し返します"
    },
    "generator": false
  },
  {
    "__docId__": 400,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "betweenTime",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#betweenTime",
    "access": null,
    "description": "引数 vectors との time 値を減算します",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} time 値を減算し返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "time 値を減算し返します"
    },
    "generator": false
  },
  {
    "__docId__": 401,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "between",
    "memberof": "src/util/Vectors.js~Vectors",
    "longname": "src/util/Vectors.js~Vectors#between",
    "access": null,
    "description": "引数 vectors との x, y, time 値を減算します",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Vectors} 引数 vectors との x, y, time 値を減算した clone を返します"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Vectors"
        ],
        "spread": false,
        "optional": false,
        "name": "vectors",
        "description": "計測したい対象 Vectors instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors"
      ],
      "spread": false,
      "description": "引数 vectors との x, y, time 値を減算した clone を返します"
    },
    "generator": false
  },
  {
    "__docId__": 403,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 404,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 405,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 406,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 407,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 408,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 409,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 410,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 411,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 412,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 413,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 414,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 415,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 416,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 417,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 418,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 419,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 420,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 421,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 422,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 423,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 424,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 425,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 426,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 427,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 428,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 429,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 430,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 431,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 432,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 433,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 434,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 435,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 436,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 437,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 438,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 439,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 440,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 441,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 442,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 443,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 444,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 445,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 446,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 447,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 448,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 449,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 451,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 452,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 453,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 454,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 455,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 456,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 457,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 458,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]